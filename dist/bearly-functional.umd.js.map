{"version":3,"file":"bearly-functional.umd.js","sources":["../src/conditions/empty.js","../src/conditions/identity.js","../src/conditions/isTruthy.js","../src/conditions/isFalsy.js","../node_modules/core-js/internals/global.js","../node_modules/core-js/internals/internal-state.js","../node_modules/core-js/internals/fails.js","../node_modules/core-js/internals/descriptors.js","../node_modules/core-js/internals/object-property-is-enumerable.js","../node_modules/core-js/internals/create-property-descriptor.js","../node_modules/core-js/internals/classof-raw.js","../node_modules/core-js/internals/indexed-object.js","../node_modules/core-js/internals/require-object-coercible.js","../node_modules/core-js/internals/to-indexed-object.js","../node_modules/core-js/internals/is-object.js","../node_modules/core-js/internals/to-primitive.js","../node_modules/core-js/internals/has.js","../node_modules/core-js/internals/document-create-element.js","../node_modules/core-js/internals/ie8-dom-define.js","../node_modules/core-js/internals/object-get-own-property-descriptor.js","../node_modules/core-js/internals/an-object.js","../node_modules/core-js/internals/object-define-property.js","../node_modules/core-js/internals/create-non-enumerable-property.js","../node_modules/core-js/internals/set-global.js","../node_modules/core-js/internals/shared-store.js","../node_modules/core-js/internals/shared.js","../node_modules/core-js/internals/function-to-string.js","../node_modules/core-js/internals/native-weak-map.js","../node_modules/core-js/internals/uid.js","../node_modules/core-js/internals/shared-key.js","../node_modules/core-js/internals/hidden-keys.js","../node_modules/core-js/internals/redefine.js","../node_modules/core-js/internals/path.js","../node_modules/core-js/internals/get-built-in.js","../node_modules/core-js/internals/to-integer.js","../node_modules/core-js/internals/to-length.js","../node_modules/core-js/internals/to-absolute-index.js","../node_modules/core-js/internals/array-includes.js","../node_modules/core-js/internals/object-keys-internal.js","../node_modules/core-js/internals/enum-bug-keys.js","../node_modules/core-js/internals/object-get-own-property-names.js","../node_modules/core-js/internals/object-get-own-property-symbols.js","../node_modules/core-js/internals/own-keys.js","../node_modules/core-js/internals/copy-constructor-properties.js","../node_modules/core-js/internals/is-forced.js","../node_modules/core-js/internals/export.js","../node_modules/core-js/internals/a-function.js","../node_modules/core-js/internals/to-object.js","../node_modules/core-js/internals/array-reduce.js","../node_modules/core-js/internals/sloppy-array-method.js","../node_modules/core-js/modules/es.array.reduce.js","../src/data/countOccurrences.js","../node_modules/core-js/internals/is-array.js","../node_modules/core-js/internals/v8-version.js","../node_modules/core-js/internals/create-property.js","../node_modules/core-js/internals/native-symbol.js","../node_modules/core-js/internals/well-known-symbol.js","../node_modules/core-js/internals/array-species-create.js","../node_modules/core-js/internals/user-agent.js","../node_modules/core-js/internals/array-method-has-species-support.js","../node_modules/core-js/modules/es.array.concat.js","../node_modules/rollup-plugin-node-builtins/src/es6/inherits.js","../node_modules/rollup-plugin-node-builtins/src/es6/util.js","../node_modules/sanctuary-show/index.js","../node_modules/sanctuary-type-identifiers/index.js","../node_modules/sanctuary-def/node_modules/sanctuary-either/node_modules/sanctuary-type-classes/index.js","../node_modules/sanctuary-def/node_modules/sanctuary-either/index.js","../node_modules/sanctuary-type-classes/index.js","../node_modules/sanctuary-def/index.js","../node_modules/sanctuary-either/index.js","../node_modules/sanctuary-maybe/index.js","../node_modules/sanctuary-pair/index.js","../node_modules/sanctuary/index.js","../src/data/dictGroupByKey.js","../src/data/dictByKey.js","../node_modules/core-js/internals/bind-context.js","../node_modules/core-js/internals/array-iteration.js","../node_modules/core-js/modules/es.array.filter.js","../src/data/filterFalse.js","../node_modules/core-js/modules/es.array.slice.js","../node_modules/core-js/internals/object-keys.js","../node_modules/core-js/modules/es.object.keys.js","../src/data/sliceObject.js","../node_modules/core-js/modules/es.array.sort.js","../src/data/sortByCountDesc.js","../src/data/uniqValuesByKey.js","../src/date/dateToYmd.js","../src/date/isValidDateISO.js","../src/date/parseDateToStyle.js","../src/date/extractDayOfWeek.js","../src/date/extractDayOfWeekNumber.js","../src/date/extractHour.js","../src/date/extractMonthName.js","../src/date/extractYear.js","../node_modules/core-js/modules/es.date.to-string.js","../src/date/getDateOneMonthAgo.js","../src/date/getISO8601DateWithTimeOffsetFromUTC.js","../src/date/makeDate.js","../src/date/makeReadableDateWithTime.js","../src/date/makeSimpleDate.js","../node_modules/core-js/internals/object-define-properties.js","../node_modules/core-js/internals/html.js","../node_modules/core-js/internals/object-create.js","../node_modules/core-js/internals/add-to-unscopables.js","../node_modules/core-js/modules/es.array.find.js","../src/list/first.js","../src/list/head.js","../src/list/makeRangesBetween.js","../node_modules/core-js/modules/es.array.map.js","../src/list/shuffle.js","../node_modules/core-js/internals/iterators-core.js","../src/list/tail.js","../node_modules/core-js/internals/iterators.js","../node_modules/core-js/internals/correct-prototype-getter.js","../node_modules/core-js/internals/object-get-prototype-of.js","../node_modules/core-js/internals/set-to-string-tag.js","../node_modules/core-js/internals/create-iterator-constructor.js","../node_modules/core-js/internals/object-set-prototype-of.js","../node_modules/core-js/internals/a-possible-prototype.js","../node_modules/core-js/internals/define-iterator.js","../node_modules/core-js/modules/es.array.iterator.js","../node_modules/core-js/internals/freezing.js","../node_modules/core-js/internals/internal-metadata.js","../node_modules/core-js/internals/is-array-iterator-method.js","../node_modules/core-js/internals/classof.js","../node_modules/core-js/internals/get-iterator-method.js","../node_modules/core-js/internals/call-with-safe-iteration-closing.js","../node_modules/core-js/internals/iterate.js","../node_modules/core-js/internals/an-instance.js","../node_modules/core-js/internals/check-correctness-of-iteration.js","../node_modules/core-js/internals/inherit-if-required.js","../node_modules/core-js/internals/collection.js","../node_modules/core-js/internals/redefine-all.js","../node_modules/core-js/internals/set-species.js","../node_modules/core-js/internals/collection-strong.js","../node_modules/core-js/internals/object-to-string.js","../node_modules/core-js/modules/es.map.js","../node_modules/core-js/modules/es.object.to-string.js","../node_modules/core-js/internals/native-promise-constructor.js","../node_modules/core-js/internals/task.js","../node_modules/core-js/internals/species-constructor.js","../node_modules/core-js/internals/microtask.js","../node_modules/core-js/modules/es.promise.js","../node_modules/core-js/internals/new-promise-capability.js","../node_modules/core-js/internals/promise-resolve.js","../node_modules/core-js/internals/perform.js","../node_modules/core-js/internals/host-report-errors.js","../node_modules/core-js/internals/regexp-flags.js","../node_modules/core-js/modules/es.regexp.to-string.js","../node_modules/core-js/modules/es.set.js","../node_modules/core-js/internals/string-multibyte.js","../node_modules/core-js/modules/es.string.iterator.js","../node_modules/core-js/internals/dom-iterables.js","../node_modules/core-js/modules/web.dom-collections.iterator.js","../src/math/add.js","../src/utils/getPrototype.js","../src/utils/isArray.js","../src/utils/isString.js","../node_modules/core-js/internals/whitespaces.js","../node_modules/core-js/internals/string-trim.js","../node_modules/core-js/modules/es.number.constructor.js","../node_modules/core-js/modules/es.number.is-nan.js","../node_modules/core-js/internals/this-number-value.js","../node_modules/core-js/internals/string-repeat.js","../node_modules/core-js/modules/es.number.to-fixed.js","../node_modules/core-js/internals/parse-float.js","../node_modules/core-js/modules/es.parse-float.js","../src/utils/toSignificantFigures.js","../src/strings/append.js","../src/strings/uppercase.js","../node_modules/core-js/internals/regexp-exec.js","../node_modules/core-js/modules/es.regexp.exec.js","../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","../node_modules/core-js/internals/is-regexp.js","../node_modules/core-js/internals/advance-string-index.js","../node_modules/core-js/internals/regexp-exec-abstract.js","../node_modules/core-js/modules/es.string.split.js","../src/strings/split.js","../src/strings/capitalize.js","../src/strings/splitSpace.js","../src/strings/chunkStringByIndices.js","../node_modules/core-js/internals/object-to-array.js","../node_modules/core-js/modules/es.object.entries.js","../node_modules/core-js/modules/es.regexp.constructor.js","../src/strings/findKeyword.js","../src/strings/findKeywords.js","../src/strings/chunkStringByKeywords.js","../node_modules/core-js/modules/es.array.join.js","../src/strings/joinWithSpace.js","../src/strings/getSurroundingWords.js","../src/strings/getSurroundingWordsAroundKeywords.js","../src/strings/getBufferedTextFragmentsAroundKeywords.js","../src/strings/joinWithComma.js","../src/strings/joinWithNewLine.js","../node_modules/rollup-plugin-node-builtins/src/es6/os.js","../node_modules/core-js/modules/es.string.replace.js","../src/strings/replaceString.js","../src/strings/removeCommas.js","../src/strings/truncateSpace.js","../src/strings/replaceCommaWithWhitespace.js","../src/strings/showEither.js","../src/strings/splitComma.js","../src/strings/splitCommaRegex.js","../src/strings/splitNewLines.js","../src/strings/splitSpaceRegex.js","../src/strings/splitWhitespace.js","../src/strings/truncateWhitespace.js"],"sourcesContent":["const empty = x => !!x; // a -> Boolean\r\n\r\nexport { empty };\r\n","const identity = x => x; // a -> a\r\n\r\nexport { identity };\r\n","/**\r\n * isTruthy :: * -> Boolean\r\n *\r\n * @param {*} x\r\n * @return {Boolean}\r\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Truthy\r\n * @see @see https://developer.mozilla.org/en-US/docs/Glossary/Truthy\r\n */\r\nconst isTruthy = x => !!x;\r\n\r\nexport { isTruthy };\r\n","import { isTruthy } from \"./isTruthy\";\r\n\r\n/**\r\n * isFalsy :: * -> Boolean\r\n *\r\n * @return {Boolean}\r\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Truthy\r\n * @see @see https://developer.mozilla.org/en-US/docs/Glossary/Truthy\r\n */\r\nconst isFalsy = x => isTruthy(x) === false;\r\n\r\nexport { isFalsy };\r\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.3.4',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var shared = require('../internals/shared');\n\nmodule.exports = shared('native-function-to-string', Function.toString);\n","var global = require('../internals/global');\nvar nativeFunctionToString = require('../internals/function-to-string');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar nativeFunctionToString = require('../internals/function-to-string');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(nativeFunctionToString).split('toString');\n\nshared('inspectSource', function (it) {\n  return nativeFunctionToString.call(it);\n});\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);\n});\n","module.exports = require('../internals/global');\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !method || !fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduce') }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\r\n * @param {string[]} xs 1d array of strings.\r\n * @return {Object} Where each key is a unique string and each key value is the\r\n *   occurrence frequency of string. Sorting by frequency is not performed.\r\n * @see https://stackoverflow.com/a/56929965/1727232\r\n * @example\r\n *\r\n * const xs = [\"apple\", \"orange\", \"banana\", \"apple\", , \"banana\", \"apple\"];\r\n * console.log(countOccurrences(xs)); //=> {apple: 3, orange: 1, banana: 2}\r\n */\r\nfunction countOccurrences(xs) {\r\n  return xs.reduce((acc, x) => ((acc[x] = ++acc[x] || 1), acc), {});\r\n}\r\n\r\nexport { countOccurrences };\r\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Chrome\\/(\\d+)/);\n  if (match) version = match[1];\n}\n\nmodule.exports = version && +version;\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar Symbol = global.Symbol;\nvar store = shared('wks');\n\nmodule.exports = function (name) {\n  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]\n    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\nvar IS_CONCAT_SPREADABLE_SUPPORT = !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","//. # sanctuary-show\n//.\n//. Haskell has a `show` function which can be applied to a compatible value to\n//. produce a descriptive string representation of that value. The idea is that\n//. the string representation should, if possible, be an expression which would\n//. produce the original value if evaluated.\n//.\n//. This library provides a similar [`show`](#show) function.\n//.\n//. In general, this property should hold: `eval (show (x)) = x`. In some cases\n//. parens are necessary to ensure correct interpretation (`{}`, for example,\n//. is an empty block rather than an empty object in some contexts). Thus the\n//. property is more accurately stated `eval ('(' + show (x) + ')') = x`.\n//.\n//. One can make values of a custom type compatible with [`show`](#show) by\n//. defining a `@@show` method. For example:\n//.\n//. ```javascript\n//. //# Maybe#@@show :: Maybe a ~> () -> String\n//. //.\n//. //. ```javascript\n//. //. > show (Nothing)\n//. //. 'Nothing'\n//. //.\n//. //. > show (Just (['foo', 'bar', 'baz']))\n//. //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n//. //. ```\n//. Maybe.prototype['@@show'] = function() {\n//.   return this.isNothing ? 'Nothing' : 'Just (' + show (this.value) + ')';\n//. };\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryShow = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$show :: String\n  var $$show = '@@show';\n\n  //  seen :: Array Any\n  var seen = [];\n\n  //  entry :: Object -> String -> String\n  function entry(o) {\n    return function(k) {\n      return show(k) + ': ' + show(o[k]);\n    };\n  }\n\n  //# show :: Showable a => a -> String\n  //.\n  //. Returns a useful string representation of the given value.\n  //.\n  //. Dispatches to the value's `@@show` method if present.\n  //.\n  //. Where practical, `show (eval ('(' + show (x) + ')')) = show (x)`.\n  //.\n  //. ```javascript\n  //. > show (null)\n  //. 'null'\n  //.\n  //. > show (undefined)\n  //. 'undefined'\n  //.\n  //. > show (true)\n  //. 'true'\n  //.\n  //. > show (new Boolean (false))\n  //. 'new Boolean (false)'\n  //.\n  //. > show (-0)\n  //. '-0'\n  //.\n  //. > show (NaN)\n  //. 'NaN'\n  //.\n  //. > show (new Number (Infinity))\n  //. 'new Number (Infinity)'\n  //.\n  //. > show ('foo\\n\"bar\"\\nbaz\\n')\n  //. '\"foo\\\\n\\\\\"bar\\\\\"\\\\nbaz\\\\n\"'\n  //.\n  //. > show (new String (''))\n  //. 'new String (\"\")'\n  //.\n  //. > show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > show ([[[[[0]]]]])\n  //. '[[[[[0]]]]]'\n  //.\n  //. > show ({x: [1, 2], y: [3, 4], z: [5, 6]})\n  //. '{\"x\": [1, 2], \"y\": [3, 4], \"z\": [5, 6]}'\n  //. ```\n  function show(x) {\n    if (seen.indexOf(x) >= 0) return '<Circular>';\n\n    switch (Object.prototype.toString.call(x)) {\n\n      case '[object Boolean]':\n        return typeof x === 'object' ?\n          'new Boolean (' + show(x.valueOf()) + ')' :\n          x.toString();\n\n      case '[object Number]':\n        return typeof x === 'object' ?\n          'new Number (' + show(x.valueOf()) + ')' :\n          1 / x === -Infinity ? '-0' : x.toString(10);\n\n      case '[object String]':\n        return typeof x === 'object' ?\n          'new String (' + show(x.valueOf()) + ')' :\n          JSON.stringify(x);\n\n      case '[object Date]':\n        return 'new Date (' +\n               show(isNaN(x.valueOf()) ? NaN : x.toISOString()) +\n               ')';\n\n      case '[object Error]':\n        return 'new ' + x.name + ' (' + show(x.message) + ')';\n\n      case '[object Arguments]':\n        return 'function () { return arguments; } (' +\n               Array.prototype.map.call(x, show).join(', ') +\n               ')';\n\n      case '[object Array]':\n        seen.push(x);\n        try {\n          return '[' + x.map(show).concat(\n            Object.keys(x)\n            .sort()\n            .filter(function(k) { return !/^\\d+$/.test(k); })\n            .map(entry(x))\n          ).join(', ') + ']';\n        } finally {\n          seen.pop();\n        }\n\n      case '[object Object]':\n        seen.push(x);\n        try {\n          return (\n            $$show in x &&\n            (x.constructor == null || x.constructor.prototype !== x) ?\n              x[$$show]() :\n              '{' + Object.keys(x).sort().map(entry(x)).join(', ') + '}'\n          );\n        } finally {\n          seen.pop();\n        }\n\n      default:\n        return String(x);\n\n    }\n  }\n\n  return show;\n\n}));\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. sanctuary-type-identifiers comprises:\n//.\n//.   - an npm and browser -compatible package for deriving the\n//.     _type identifier_ of a JavaScript value; and\n//.   - a specification which authors may follow to specify type\n//.     identifiers for their types.\n//.\n//. ### Specification\n//.\n//. For a type to be compatible with the algorithm:\n//.\n//.   - every member of the type MUST have a `constructor` property\n//.     pointing to an object known as the _type representative_;\n//.\n//.   - the type representative MUST have a `@@type` property\n//.     (the _type identifier_); and\n//.\n//.   - the type identifier MUST be a string primitive and SHOULD have\n//.     format `'<namespace>/<name>[@<version>]'`, where:\n//.\n//.       - `<namespace>` MUST consist of one or more characters, and\n//.         SHOULD equal the name of the npm package which defines the\n//.         type (including [scope][3] where appropriate);\n//.\n//.       - `<name>` MUST consist of one or more characters, and SHOULD\n//.         be the unique name of the type; and\n//.\n//.       - `<version>` MUST consist of one or more digits, and SHOULD\n//.         represent the version of the type.\n//.\n//. If the type identifier does not conform to the format specified above,\n//. it is assumed that the entire string represents the _name_ of the type;\n//. _namespace_ will be `null` and _version_ will be `0`.\n//.\n//. If the _version_ is not given, it is assumed to be `0`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  pattern :: RegExp\n  var pattern = new RegExp(\n    '^'\n  + '([\\\\s\\\\S]+)'   //  <namespace>\n  + '/'             //  SOLIDUS (U+002F)\n  + '([\\\\s\\\\S]+?)'  //  <name>\n  + '(?:'           //  optional non-capturing group {\n  +   '@'           //    COMMERCIAL AT (U+0040)\n  +   '([0-9]+)'    //    <version>\n  + ')?'            //  }\n  + '$'\n  );\n\n  //. ### Usage\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //. ```\n  //.\n  //. ```javascript\n  //. > function Identity(x) {\n  //. .   if (!(this instanceof Identity)) return new Identity(x);\n  //. .   this.value = x;\n  //. . }\n  //. . Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. > type.parse(type(Identity(0)))\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  //.\n  //. ### API\n  //.\n  //# type :: Any -> String\n  //.\n  //. Takes any value and returns a string which identifies its type. If the\n  //. value conforms to the [specification][4], the custom type identifier is\n  //. returned.\n  //.\n  //. ```javascript\n  //. > type(null)\n  //. 'Null'\n  //.\n  //. > type(true)\n  //. 'Boolean'\n  //.\n  //. > type(Identity(0))\n  //. 'my-package/Identity@1'\n  //. ```\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  //# type.parse :: String -> { namespace :: Nullable String, name :: String, version :: Number }\n  //.\n  //. Takes any string and parses it according to the [specification][4],\n  //. returning an object with `namespace`, `name`, and `version` fields.\n  //.\n  //. ```javascript\n  //. > type.parse('my-package/List@2')\n  //. {namespace: 'my-package', name: 'List', version: 2}\n  //.\n  //. > type.parse('nonsense!')\n  //. {namespace: null, name: 'nonsense!', version: 0}\n  //.\n  //. > type.parse(Identity['@@type'])\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  type.parse = function parse(s) {\n    var groups = pattern.exec(s);\n    return {\n      namespace: groups == null || groups[1] == null ? null : groups[1],\n      name:      groups == null                      ? s    : groups[2],\n      version:   groups == null || groups[3] == null ? 0    : Number(groups[3])\n    };\n  };\n\n  return type;\n\n}));\n\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: https://docs.npmjs.com/misc/scope\n//. [4]: #specification\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f (self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require ('sanctuary-identity');\n    var List = __doctest.require ('./test/List');\n    var Maybe = __doctest.require ('sanctuary-maybe');\n    var Pair = __doctest.require ('sanctuary-pair');\n    var Sum = __doctest.require ('./test/Sum');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat (ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    (Object.keys (strMap)).forEach (f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call (o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type (x) === type (y);\n  }\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n\n  //  unary :: (a -> b) -> (a, Any...) -> b\n  function unary(f) {\n    return function(x) {\n      return f (x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass (\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod ('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass (\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod ('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass (name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every (function(d) { return d.test (x); }) &&\n             test (x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass@1';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has (k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath (true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath (false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has ('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec (f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath ([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath ([functionName (typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath ([name], x);\n          if (m == null)    m = implPath ([type (x), 'prototype', name]);\n          return m && m.bind (x);\n        };\n    }\n\n    var version = '10.0.0';  // updated programmatically\n    var keys = Object.keys (requirements);\n\n    var typeClass = TypeClass (\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every (function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod (_name) (arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce (function(methods, _name) {\n      methods[_name] = getBoundMethod (_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test (null)\n  //. true\n  //. ```\n  var Setoid = $ ('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test (0)\n  //. true\n  //.\n  //. > Ord.test (Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $ ('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test (Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test (0)\n  //. false\n  //. ```\n  var Semigroupoid = $ ('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test (Math.sqrt)\n  //. true\n  //.\n  //. > Category.test (0)\n  //. false\n  //. ```\n  var Category = $ ('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test ('')\n  //. true\n  //.\n  //. > Semigroup.test (0)\n  //. false\n  //. ```\n  var Semigroup = $ ('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test ('')\n  //. true\n  //.\n  //. > Monoid.test (0)\n  //. false\n  //. ```\n  var Monoid = $ ('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test (Sum (0))\n  //. true\n  //.\n  //. > Group.test ('')\n  //. false\n  //. ```\n  var Group = $ ('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test ({})\n  //. true\n  //.\n  //. > Filterable.test ('')\n  //. false\n  //. ```\n  var Filterable = $ ('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test ([])\n  //. true\n  //.\n  //. > Functor.test ('')\n  //. false\n  //. ```\n  var Functor = $ ('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test (Pair ('foo') (64))\n  //. true\n  //.\n  //. > Bifunctor.test ([])\n  //. false\n  //. ```\n  var Bifunctor = $ ('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test (Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test ([])\n  //. false\n  //. ```\n  var Profunctor = $ ('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test ([])\n  //. true\n  //.\n  //. > Apply.test ('')\n  //. false\n  //. ```\n  var Apply = $ ('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test ([])\n  //. true\n  //.\n  //. > Applicative.test ({})\n  //. false\n  //. ```\n  var Applicative = $ ('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test ([])\n  //. true\n  //.\n  //. > Chain.test ({})\n  //. false\n  //. ```\n  var Chain = $ ('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test ([])\n  //. true\n  //.\n  //. > ChainRec.test ({})\n  //. false\n  //. ```\n  var ChainRec = $ ('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test ([])\n  //. true\n  //.\n  //. > Monad.test ({})\n  //. false\n  //. ```\n  var Monad = $ ('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test ({})\n  //. true\n  //.\n  //. > Alt.test ('')\n  //. false\n  //. ```\n  var Alt = $ ('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test ({})\n  //. true\n  //.\n  //. > Plus.test ('')\n  //. false\n  //. ```\n  var Plus = $ ('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test ([])\n  //. true\n  //.\n  //. > Alternative.test ({})\n  //. false\n  //. ```\n  var Alternative = $ ('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test ({})\n  //. true\n  //.\n  //. > Foldable.test ('')\n  //. false\n  //. ```\n  var Foldable = $ ('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test ([])\n  //. true\n  //.\n  //. > Traversable.test ('')\n  //. false\n  //. ```\n  var Traversable = $ ('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test ([])\n  //. true\n  //.\n  //. > Extend.test ({})\n  //. false\n  //. ```\n  var Extend = $ ('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test (Identity (0))\n  //. true\n  //.\n  //. > Comonad.test ([])\n  //. false\n  //. ```\n  var Comonad = $ ('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test (Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test ([])\n  //. false\n  //. ```\n  var Contravariant = $ ('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      isNaN (this) && isNaN (other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      isNaN (this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals (this.valueOf (), other.valueOf ());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte (this.valueOf (), other.valueOf ());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f (iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push (step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!(equals (this[idx], other[idx]))) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!(equals (this[idx], other[idx]))) {\n        return lte (this[idx], other[idx]);\n      }\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat (other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter (function(x) { return pred (x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map (function(x) { return f (x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push (fs[idx] (this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f (this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push (xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f (acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of (typeRep, []);\n        case 2: return lift2 (pair, f (xs[idx]), f (xs[idx + 1]));\n        default:\n          var m = Math.floor (n / 4) * 2;\n          return lift2 (concat_, go (idx, m), go (idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2 (concat_, map (Array$of, f (this[0])), go (1, this.length - 1)) :\n      go (0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map (function(_, idx, xs) { return f (xs.slice (idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call (this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call (this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals (this.name, other.name) &&\n           equals (this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = sortedKeys (this);\n    return equals (keys, sortedKeys (other)) &&\n           keys.every (function(k) { return equals (self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = sortedKeys (this);\n    var otherKeys = sortedKeys (other);\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift ();\n      var z = otherKeys.shift ();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!(equals (this[k], other[k]))) return lte (this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey (this, assign);\n    forEachKey (other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (pred (this[k])) result[k] = this[k];\n    });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey (this, function(k) { result[k] = f (this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (has (k, other)) result[k] = other[k] (this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f (acc, self[k]); }\n    return (sortedKeys (this)).reduce (reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return (Object.keys (this)).reduce (function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call (o, singleton);\n        };\n      }\n      return lift2 (set, applicative, f (self[k]));\n    }, of (typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext (x);\n      while (!step.done) {\n        step = f (iterationNext, iterationDone, step.value) (a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other (semigroupoid (x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f (functor (x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g (profunctor (f (x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f (x) (apply (x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f (chain (x)) (x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f (function(y) { return extend (concat (x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant (f (x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals (0, -0)\n  //. true\n  //.\n  //. > equals (NaN, NaN)\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (1, Cons (2, Nil)))\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (2, Cons (1, Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Setoid.test (x) &&\n               Setoid.test (y) &&\n               Setoid.methods.equals (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt (0, 0)\n  //. false\n  //.\n  //. > lt (0, 1)\n  //. true\n  //.\n  //. > lt (1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType (x, y) && !(lte (y, x));\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte (0, 0)\n  //. true\n  //.\n  //. > lte (0, 1)\n  //. true\n  //.\n  //. > lte (1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return equals (x, y);\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Ord.test (x) && Ord.test (y) && Ord.methods.lte (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt (0, 0)\n  //. false\n  //.\n  //. > gt (0, 1)\n  //. false\n  //.\n  //. > gt (1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt (y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte (0, 0)\n  //. true\n  //.\n  //. > gte (0, 1)\n  //. false\n  //.\n  //. > gte (1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte (y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min (10, 2)\n  //. 2\n  //.\n  //. > min (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > min ('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte (x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max (10, 2)\n  //. 10\n  //.\n  //. > max (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > max ('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte (x, y) ? y : x;\n  }\n\n  //# clamp :: Ord a => (a, a, a) -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. This function is derived from [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > clamp (0, 100, 42)\n  //. 42\n  //.\n  //. > clamp (0, 100, -1)\n  //. 0\n  //.\n  //. > clamp ('A', 'Z', '~')\n  //. 'Z'\n  //. ```\n  function clamp(lower, upper, x) {\n    return max (lower, min (upper, x));\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose (Math.sqrt, x => x + 1) (99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose (y) (x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id (Function) ('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id (typeRep) ();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat ('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat ({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat (Cons ('foo', Cons ('bar', Cons ('baz', Nil))), Cons ('quux', Nil))\n  //. Cons ('foo', Cons ('bar', Cons ('baz', Cons ('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat (x) (y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty (String)\n  //. ''\n  //.\n  //. > empty (Array)\n  //. []\n  //.\n  //. > empty (Object)\n  //. {}\n  //.\n  //. > empty (List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty (typeRep) ();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert (group) ();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter (x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > filter (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (0))\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter (filterable) (pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject (x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (2, Nil)\n  //.\n  //. > reject (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject (x => x % 2 == 1, Just (0))\n  //. Just (0)\n  //.\n  //. > reject (x => x % 2 == 1, Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter (function(x) { return !(pred (x)); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile (s => /x/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile (s => /y/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile (s => /z/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter (function(x) { return take = take && pred (x); },\n                   filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile (s => /x/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile (s => /y/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile (s => /z/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter (function(x) { return take = take || !(pred (x)); },\n                   filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map (Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map (Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map (Math.sqrt, s => s.length) ('Sanctuary')\n  //. 3\n  //.\n  //. > map (Math.sqrt, Pair ('foo') (64))\n  //. Pair ('foo') (8)\n  //.\n  //. > map (Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map (Math.sqrt, Cons (1, Cons (4, Cons (9, Nil))))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map (functor) (f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip (x => y => x + y, '!') ('foo')\n  //. 'foo!'\n  //.\n  //. > flip ([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip ({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip (Cons (Math.floor, Cons (Math.ceil, Nil)), 1.5)\n  //. Cons (1, Cons (2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map (functor) (thrush (x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap (s => s.toUpperCase (), Math.sqrt, Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap (bifunctor) (f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft (Math.sqrt, Pair (64) (9))\n  //. Pair (8) (9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap (f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap (Math.abs, x => x + 1, Math.sqrt) (-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap (profunctor) (f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap ([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap ({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap (s => n => s.slice (0, n), s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap (Identity (Math.sqrt), Identity (64))\n  //. Identity (8)\n  //.\n  //. > ap (Cons (Math.sqrt, Cons (x => x * x, Nil)), Cons (16, Cons (100, Nil)))\n  //. Cons (4, Cons (10, Cons (256, Cons (10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap (applyX) (applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2 (x => y => Math.pow (x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2 (x => y => Math.pow (x, y), Identity (10), Identity (3))\n  //. Identity (1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap (map (f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        ['<', '['],\n  //. .        ['>', ']'],\n  //. .        ['foo', 'bar', 'baz'])\n  //. [ '<foo>', '<bar>', '<baz>',\n  //. . '<foo]', '<bar]', '<baz]',\n  //. . '[foo>', '[bar>', '[baz>',\n  //. . '[foo]', '[bar]', '[baz]' ]\n  //.\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        Identity ('<'),\n  //. .        Identity ('>'),\n  //. .        Identity ('baz'))\n  //. Identity ('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap (ap (map (f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst ([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst (Identity (1), Identity (2))\n  //. Identity (1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2 (constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond ([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond (Identity (1), Identity (2))\n  //. Identity (2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2 (constant (identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of (Array, 42)\n  //. [42]\n  //.\n  //. > of (Function, 42) (null)\n  //. 42\n  //.\n  //. > of (List, 42)\n  //. Cons (42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of (typeRep) (x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append (3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append (3, Cons (1, Cons (2, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat (xs, of (xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend (1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend (1, Cons (2, Cons (3, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat (of (xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain (x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain (x => x % 2 == 1 ? of (List, x) : Nil,\n  //. .        Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > chain (n => s => s.slice (0, n),\n  //. .        s => Math.ceil (s.length / 2))\n  //. .       ('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain (chain_) (f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join (Identity (Identity (1)))\n  //. Identity (1)\n  //. ```\n  function join(chain_) {\n    return chain (identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec (\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map (done)\n  //. .                                    : [s + 'o', s + 'n'].map (next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec (typeRep) (f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt (Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt (Nothing, Just (1))\n  //. Just (1)\n  //.\n  //. > alt (Just (2), Just (3))\n  //. Just (2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt (x) (y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero (Array)\n  //. []\n  //.\n  //. > zero (Object)\n  //. {}\n  //.\n  //. > zero (Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero (typeRep) ();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce ((xs, x) => [x].concat (xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce (concat, '', Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce (foldable) (f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size ([])\n  //. 0\n  //.\n  //. > size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size (Nil)\n  //. 0\n  //.\n  //. > size (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.length;\n    return reduce (function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# all :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if all the elements of the structure satisfy the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > all (Number.isInteger, [])\n  //. true\n  //.\n  //. > all (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > all (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function all(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.every (unary (pred));\n    return reduce (function(b, x) { return b && pred (x); }, true, foldable);\n  }\n\n  //# any :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if any element of the structure satisfies the predicate;\n  //. `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > any (Number.isInteger, [])\n  //. false\n  //.\n  //. > any (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > any (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. true\n  //. ```\n  function any(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.some (unary (pred));\n    return reduce (function(b, x) { return b || pred (x); }, false, foldable);\n  }\n\n  //# none :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if none of the elements of the structure satisfies the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`any`](#any). `none (pred, foldable)` is\n  //. equivalent to `!(any (pred, foldable))`.\n  //.\n  //. See also [`all`](#all).\n  //.\n  //. ```javascript\n  //. > none (Number.isInteger, [])\n  //. true\n  //.\n  //. > none (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function none(pred, foldable) {\n    return !(any (pred, foldable));\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem ('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem ('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem (3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem (8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem (0, Just (0))\n  //. true\n  //.\n  //. > elem (0, Just (1))\n  //. false\n  //.\n  //. > elem (0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return any (function(y) { return equals (x, y); }, foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap (String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce (function(monoid, x) { return concat (monoid, f (x)); },\n                   empty (typeRep),\n                   foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse (Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (3, Cons (2, Cons (1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return (foldable.slice ()).reverse ();\n    var F = foldable.constructor;\n    return reduce (function(xs, x) { return concat (of (F, x), xs); },\n                   empty (F),\n                   foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort ([Just (2), Nothing, Just (1)])\n  //. [Nothing, Just (1), Just (2)]\n  //.\n  //. > sort (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. Cons ('bar', Cons ('baz', Cons ('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy (identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy (s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy (s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy (s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy (s => s.length, Cons ('red', Cons ('green', Cons ('blue', Nil))))\n  //. Cons ('red', Cons ('blue', Cons ('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce (function(rs, x) {\n      rs.push ({idx: rs.length, x: x, fx: f (x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    } (rs[0]));\n\n    rs.sort (function(a, b) {\n      return lte_ (a.fx, b.fx) ? lte_ (b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray (foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty (F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat (result, of (F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse (Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse (Identity, x => Identity (x + 1), [1, 2, 3])\n  //. Identity ([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse (traversable) (typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence (Array, Identity ([1, 2, 3]))\n  //. [Identity (1), Identity (2), Identity (3)]\n  //.\n  //. > sequence (Identity, [Identity (1), Identity (2), Identity (3)])\n  //. Identity ([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse (typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend (ss => ss.join (''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend (f => f ([3, 4]), reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend (extend_) (f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate (Identity (1))\n  //. Identity (Identity (1))\n  //.\n  //. > duplicate ([1])\n  //. [[1]]\n  //.\n  //. > duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate (reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend (identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract (Identity (42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract (comonad) ();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap (s => s.length, Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap (contravariant) (f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    clamp: clamp,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    all: all,\n    any: any,\n    none: none,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*\n         _______    ___    _________    ___   ___    _______    ______\n        /  ____/\\  /  /\\  /__   ___/\\  /  /\\ /  /\\  /  ____/\\  /  __  \\\n       /  /\\___\\/ /  / /  \\_/  /\\__\\/ /  /_//  / / /  /\\___\\/ /  /\\/  /\\\n      /  ____/\\  /  / /    /  / /    /  ___   / / /  ____/\\  /      _/ /\n     /  /\\___\\/ /  / /    /  / /    /  /\\_/  / / /  /\\___\\/ /  /|  |\\\\/\n    /______/\\  /__/ /    /__/ /    /__/ //__/ / /______/\\  /__/ |__| |\n    \\______\\/  \\__\\/     \\__\\/     \\__\\/ \\__\\/  \\______\\/  \\__\\/ \\__\\|\n                                                                            */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-either\n//.\n//. The Either type represents values with two possibilities: a value of type\n//. `Either a b` is either a Left whose value is of type `a` or a Right whose\n//. value is of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], f);\n  } else {\n    self.sanctuaryEither = f (self.sanctuaryShow, self.sanctuaryTypeClasses);\n  }\n\n} (function(show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var EitherType = $.BinaryType\n        ('sanctuary-either/Either')\n        ('')\n        (function(x) { return type (x) === Either['@@type']; })\n        (function(e) { return e.isLeft ? [e.value] : []; })\n        (function(e) { return e.isLeft ? [] : [e.value]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, EitherType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Either = {};\n\n  var Left$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 true,\n    'isRight':                false,\n    '@@show':                 Left$prototype$show,\n    'fantasy-land/map':       Left$prototype$map,\n    'fantasy-land/bimap':     Left$prototype$bimap,\n    'fantasy-land/ap':        Left$prototype$ap,\n    'fantasy-land/chain':     Left$prototype$chain,\n    'fantasy-land/alt':       Left$prototype$alt,\n    'fantasy-land/reduce':    Left$prototype$reduce,\n    'fantasy-land/traverse':  Left$prototype$traverse,\n    'fantasy-land/extend':    Left$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Right$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 false,\n    'isRight':                true,\n    '@@show':                 Right$prototype$show,\n    'fantasy-land/map':       Right$prototype$map,\n    'fantasy-land/bimap':     Right$prototype$bimap,\n    'fantasy-land/ap':        Right$prototype$ap,\n    'fantasy-land/chain':     Right$prototype$chain,\n    'fantasy-land/alt':       Right$prototype$alt,\n    'fantasy-land/reduce':    Right$prototype$reduce,\n    'fantasy-land/traverse':  Right$prototype$traverse,\n    'fantasy-land/extend':    Right$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var util =\n    typeof module === 'object' && typeof module.exports === 'object' ?\n    require ('util') :\n    /* istanbul ignore next */ {};\n  var inspect =\n    util.inspect != null && typeof util.inspect.custom === 'symbol' ?\n    /* istanbul ignore next */ util.inspect.custom :\n    /* istanbul ignore next */ 'inspect';\n  Left$prototype[inspect] = Left$prototype$show;\n  Right$prototype[inspect] = Right$prototype$show;\n\n  //. `Either a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Right (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Right (['foo'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */               '\\u274C   '))\n  //. .       (S.keys (Z.filter ($.test ([]) ($.TypeClass), Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Either.Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Left ('sqrt undefined for -1')\n  //. Left ('sqrt undefined for -1')\n  //. ```\n  var Left = Either.Left = function(value) {\n    var left = Object.create (Left$prototype);\n    if (Z.Setoid.test (value)) {\n      left['fantasy-land/equals'] = Left$prototype$equals;\n      if (Z.Ord.test (value)) {\n        left['fantasy-land/lte'] = Left$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      left['fantasy-land/concat'] = Left$prototype$concat;\n    }\n    left.value = value;\n    return left;\n  };\n\n  //# Either.Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > Right (42)\n  //. Right (42)\n  //. ```\n  var Right = Either.Right = function Right(value) {\n    var right = Object.create (Right$prototype);\n    if (Z.Setoid.test (value)) {\n      right['fantasy-land/equals'] = Right$prototype$equals;\n      if (Z.Ord.test (value)) {\n        right['fantasy-land/lte'] = Right$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      right['fantasy-land/concat'] = Right$prototype$concat;\n    }\n    right.value = value;\n    return right;\n  };\n\n  //# Either.@@type :: String\n  //.\n  //. Either [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Right (42))\n  //. 'sanctuary-either/Either@1'\n  //.\n  //. > type.parse (type (Right (42)))\n  //. {namespace: 'sanctuary-either', name: 'Either', version: 1}\n  //. ```\n  Either['@@type'] = 'sanctuary-either/Either@1';\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //.   - `of (Either) (x)` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Either) (42)\n  //. Right (42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Either.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Either d c, a) -> Either d b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Left ('!!')\n  //.\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Right (65536)\n  //. ```\n  Either['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var either = f (next, done, r.value);\n      if (either.isLeft) return either;\n      r = either.value;\n    }\n    return Right (r.value);\n  };\n\n  //# Either#@@show :: (Showable a, Showable b) => Either a b ~> () -> String\n  //.\n  //.   - `show (Left (x))` is equivalent to `'Left (' + show (x) + ')'`\n  //.   - `show (Right (x))` is equivalent to `'Right (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Left ('sqrt undefined for -1'))\n  //. 'Left (\"sqrt undefined for -1\")'\n  //.\n  //. > show (Right ([1, 2, 3]))\n  //. 'Right ([1, 2, 3])'\n  //. ```\n  function Left$prototype$show() {\n    return 'Left (' + show (this.value) + ')';\n  }\n  function Right$prototype$show() {\n    return 'Right (' + show (this.value) + ')';\n  }\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is equal to `Left (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Right (x)` is equal to `Right (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Left (x)` is never equal to `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.equals (Left ([1, 2, 3])) (Left ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Right ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Left ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. false\n  //. ```\n  function Left$prototype$equals(other) {\n    return other.isLeft && Z.equals (this.value, other.value);\n  }\n  function Right$prototype$equals(other) {\n    return other.isRight && Z.equals (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is less than or equal to `Left (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Right (x)` is less than or equal to `Right (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Left (x)` is always less than `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Left (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1)]\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Right (0), Right (1), Right (2)])\n  //. [Right (0), Right (1)]\n  //.\n  //. > S.filter (S.lte (Left (1))) ([Right (0), Right (1), Right (2)])\n  //. []\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1), Left (2)]\n  //. ```\n  function Left$prototype$lte(other) {\n    return other.isRight || Z.lte (this.value, other.value);\n  }\n  function Right$prototype$lte(other) {\n    return other.isRight && Z.lte (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `concat (Left (x)) (Left (y))` is equivalent to\n  //.     `Left (concat (x) (y))`\n  //.   - `concat (Right (x)) (Right (y))` is equivalent to\n  //.     `Right (concat (x) (y))`\n  //.   - `concat (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `concat (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Left ('abc')) (Left ('def'))\n  //. Left ('abcdef')\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Right ([4, 5, 6]))\n  //. Right ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Left ('abc')) (Right ([1, 2, 3]))\n  //. Right ([1, 2, 3])\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Left ('abc'))\n  //. Right ([1, 2, 3])\n  //. ```\n  function Left$prototype$concat(other) {\n    return other.isLeft ? Left (Z.concat (this.value, other.value)) : other;\n  }\n  function Right$prototype$concat(other) {\n    return other.isRight ? Right (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //.   - `map (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `map (f) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (S.add (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.map (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$map(f) {\n    return this;\n  }\n  function Right$prototype$map(f) {\n    return Right (f (this.value));\n  }\n\n  //# Either#fantasy-land/bimap :: Either a c ~> (a -> b, c -> d) -> Either b d\n  //.\n  //.   - `bimap (f) (g) (Left (x))` is equivalent to `Left (f (x))`\n  //.   - `bimap (f) (g) (Right (x))` is equivalent to `Right (g (x))`\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (S.add (1)) (Left ('abc'))\n  //. Left ('ABC')\n  //.\n  //. > S.bimap (S.toUpper) (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$bimap(f, g) {\n    return Left (f (this.value));\n  }\n  function Right$prototype$bimap(f, g) {\n    return Right (g (this.value));\n  }\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //.   - `ap (Left (x)) (Left (y))` is equivalent to `Left (x)`\n  //.   - `ap (Left (x)) (Right (y))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Left (x))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Left ('div undefined for 0')) (Left ('sqrt undefined for -1'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Left ('div undefined for 0')) (Right (99))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Right (S.add (1))) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.ap (Right (S.add (1))) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$ap(other) {\n    return other.isLeft ? other : this;\n  }\n  function Right$prototype$ap(other) {\n    return other.isLeft ? other : Right (other.value (this.value));\n  }\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //.   - `chain (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `chain (f) (Right (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const sqrt = n => n < 0 ? Left ('sqrt undefined for ' + show (n))\n  //. .                         : Right (Math.sqrt (n))\n  //.\n  //. > S.chain (sqrt) (Left ('div undefined for 0'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.chain (sqrt) (Right (-1))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.chain (sqrt) (Right (25))\n  //. Right (5)\n  //. ```\n  function Left$prototype$chain(f) {\n    return this;\n  }\n  function Right$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `alt (Left (x)) (Left (y))` is equivalent to `Left (y)`\n  //.   - `alt (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `alt (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.   - `alt (Right (x)) (Right (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Left ('A')) (Left ('B'))\n  //. Left ('B')\n  //.\n  //. > S.alt (Left ('C')) (Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (Right (2)) (Left ('D'))\n  //. Right (2)\n  //.\n  //. > S.alt (Right (3)) (Right (4))\n  //. Right (3)\n  //. ```\n  function Left$prototype$alt(other) {\n    return other;\n  }\n  function Right$prototype$alt(other) {\n    return this;\n  }\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //.   - `reduce (f) (x) (Left (y))` is equivalent to `x`\n  //.   - `reduce (f) (x) (Right (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1]) (Left ('sqrt undefined for -1'))\n  //. [1]\n  //.\n  //. > S.reduce (S.concat) ([1]) (Right ([2]))\n  //. [1, 2]\n  //. ```\n  function Left$prototype$reduce(f, x) {\n    return x;\n  }\n  function Right$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //.   - `traverse (A) (f) (Left (x))` is equivalent to `of (A) (Left (x))`\n  //.   - `traverse (A) (f) (Right (x))` is equivalent to `map (Right) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Left ('sqrt undefined for -1'))\n  //. [Left ('sqrt undefined for -1')]\n  //.\n  //. > S.traverse (Array) (S.words) (Right ('foo bar baz'))\n  //. [Right ('foo'), Right ('bar'), Right ('baz')]\n  //. ```\n  function Left$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Right$prototype$traverse(typeRep, f) {\n    return Z.map (Right, f (this.value));\n  }\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //.   - `extend (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `extend (f) (Right (x))` is equivalent to `Right (f (Right (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$extend(f) {\n    return this;\n  }\n  function Right$prototype$extend(f) {\n    return Right (f (this));\n  }\n\n  return Either;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f (self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require ('sanctuary-identity');\n    var List = __doctest.require ('./test/List');\n    var Maybe = __doctest.require ('sanctuary-maybe');\n    var Pair = __doctest.require ('sanctuary-pair');\n    var Sum = __doctest.require ('./test/Sum');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat (ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    (Object.keys (strMap)).forEach (f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call (o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type (x) === type (y);\n  }\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n\n  //  unary :: (a -> b) -> (a, Any...) -> b\n  function unary(f) {\n    return function(x) {\n      return f (x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass (\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod ('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass (\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod ('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass (name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every (function(d) { return d.test (x); }) &&\n             test (x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass@1';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has (k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath (true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath (false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has ('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec (f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath ([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath ([functionName (typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath ([name], x);\n          if (m == null)    m = implPath ([type (x), 'prototype', name]);\n          return m && m.bind (x);\n        };\n    }\n\n    var version = '11.0.0';  // updated programmatically\n    var keys = Object.keys (requirements);\n\n    var typeClass = TypeClass (\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every (function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod (_name) (arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce (function(methods, _name) {\n      methods[_name] = getBoundMethod (_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test (null)\n  //. true\n  //. ```\n  var Setoid = $ ('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test (0)\n  //. true\n  //.\n  //. > Ord.test (Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $ ('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test (Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test (0)\n  //. false\n  //. ```\n  var Semigroupoid = $ ('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test (Math.sqrt)\n  //. true\n  //.\n  //. > Category.test (0)\n  //. false\n  //. ```\n  var Category = $ ('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test ('')\n  //. true\n  //.\n  //. > Semigroup.test (0)\n  //. false\n  //. ```\n  var Semigroup = $ ('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test ('')\n  //. true\n  //.\n  //. > Monoid.test (0)\n  //. false\n  //. ```\n  var Monoid = $ ('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test (Sum (0))\n  //. true\n  //.\n  //. > Group.test ('')\n  //. false\n  //. ```\n  var Group = $ ('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test ({})\n  //. true\n  //.\n  //. > Filterable.test ('')\n  //. false\n  //. ```\n  var Filterable = $ ('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test ([])\n  //. true\n  //.\n  //. > Functor.test ('')\n  //. false\n  //. ```\n  var Functor = $ ('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test (Pair ('foo') (64))\n  //. true\n  //.\n  //. > Bifunctor.test ([])\n  //. false\n  //. ```\n  var Bifunctor = $ ('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test (Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test ([])\n  //. false\n  //. ```\n  var Profunctor = $ ('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test ([])\n  //. true\n  //.\n  //. > Apply.test ('')\n  //. false\n  //. ```\n  var Apply = $ ('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test ([])\n  //. true\n  //.\n  //. > Applicative.test ({})\n  //. false\n  //. ```\n  var Applicative = $ ('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test ([])\n  //. true\n  //.\n  //. > Chain.test ({})\n  //. false\n  //. ```\n  var Chain = $ ('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test ([])\n  //. true\n  //.\n  //. > ChainRec.test ({})\n  //. false\n  //. ```\n  var ChainRec = $ ('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test ([])\n  //. true\n  //.\n  //. > Monad.test ({})\n  //. false\n  //. ```\n  var Monad = $ ('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test ({})\n  //. true\n  //.\n  //. > Alt.test ('')\n  //. false\n  //. ```\n  var Alt = $ ('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test ({})\n  //. true\n  //.\n  //. > Plus.test ('')\n  //. false\n  //. ```\n  var Plus = $ ('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test ([])\n  //. true\n  //.\n  //. > Alternative.test ({})\n  //. false\n  //. ```\n  var Alternative = $ ('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test ({})\n  //. true\n  //.\n  //. > Foldable.test ('')\n  //. false\n  //. ```\n  var Foldable = $ ('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test ([])\n  //. true\n  //.\n  //. > Traversable.test ('')\n  //. false\n  //. ```\n  var Traversable = $ ('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test ([])\n  //. true\n  //.\n  //. > Extend.test ({})\n  //. false\n  //. ```\n  var Extend = $ ('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test (Identity (0))\n  //. true\n  //.\n  //. > Comonad.test ([])\n  //. false\n  //. ```\n  var Comonad = $ ('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test (Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test ([])\n  //. false\n  //. ```\n  var Contravariant = $ ('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      isNaN (this) && isNaN (other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      isNaN (this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals (this.valueOf (), other.valueOf ());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte (this.valueOf (), other.valueOf ());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f (iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push (step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!(equals (this[idx], other[idx]))) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!(equals (this[idx], other[idx]))) {\n        return lte (this[idx], other[idx]);\n      }\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat (other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter (function(x) { return pred (x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map (function(x) { return f (x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push (fs[idx] (this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f (this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push (xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f (acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of (typeRep, []);\n        case 2: return lift2 (pair, f (xs[idx]), f (xs[idx + 1]));\n        default:\n          var m = Math.floor (n / 4) * 2;\n          return lift2 (concat_, go (idx, m), go (idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2 (concat_, map (Array$of, f (this[0])), go (1, this.length - 1)) :\n      go (0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map (function(_, idx, xs) { return f (xs.slice (idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call (this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call (this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals (this.name, other.name) &&\n           equals (this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = sortedKeys (this);\n    return equals (keys, sortedKeys (other)) &&\n           keys.every (function(k) { return equals (self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = sortedKeys (this);\n    var otherKeys = sortedKeys (other);\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift ();\n      var z = otherKeys.shift ();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!(equals (this[k], other[k]))) return lte (this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey (this, assign);\n    forEachKey (other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (pred (this[k])) result[k] = this[k];\n    });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey (this, function(k) { result[k] = f (this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (has (k, other)) result[k] = other[k] (this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f (acc, self[k]); }\n    return (sortedKeys (this)).reduce (reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return (Object.keys (this)).reduce (function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call (o, singleton);\n        };\n      }\n      return lift2 (set, applicative, f (self[k]));\n    }, of (typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext (x);\n      while (!step.done) {\n        step = f (iterationNext, iterationDone, step.value) (a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other (semigroupoid (x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f (functor (x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g (profunctor (f (x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f (x) (apply (x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f (chain (x)) (x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f (function(y) { return extend (concat (x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant (f (x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals (0, -0)\n  //. true\n  //.\n  //. > equals (NaN, NaN)\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (1, Cons (2, Nil)))\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (2, Cons (1, Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Setoid.test (x) &&\n               Setoid.test (y) &&\n               Setoid.methods.equals (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt (0, 0)\n  //. false\n  //.\n  //. > lt (0, 1)\n  //. true\n  //.\n  //. > lt (1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType (x, y) && !(lte (y, x));\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte (0, 0)\n  //. true\n  //.\n  //. > lte (0, 1)\n  //. true\n  //.\n  //. > lte (1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return equals (x, y);\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Ord.test (x) && Ord.test (y) && Ord.methods.lte (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt (0, 0)\n  //. false\n  //.\n  //. > gt (0, 1)\n  //. false\n  //.\n  //. > gt (1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt (y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte (0, 0)\n  //. true\n  //.\n  //. > gte (0, 1)\n  //. false\n  //.\n  //. > gte (1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte (y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min (10, 2)\n  //. 2\n  //.\n  //. > min (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > min ('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte (x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max (10, 2)\n  //. 10\n  //.\n  //. > max (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > max ('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte (x, y) ? y : x;\n  }\n\n  //# clamp :: Ord a => (a, a, a) -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. This function is derived from [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > clamp (0, 100, 42)\n  //. 42\n  //.\n  //. > clamp (0, 100, -1)\n  //. 0\n  //.\n  //. > clamp ('A', 'Z', '~')\n  //. 'Z'\n  //. ```\n  function clamp(lower, upper, x) {\n    return max (lower, min (upper, x));\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose (Math.sqrt, x => x + 1) (99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose (y) (x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id (Function) ('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id (typeRep) ();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat ('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat ({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat (Cons ('foo', Cons ('bar', Cons ('baz', Nil))), Cons ('quux', Nil))\n  //. Cons ('foo', Cons ('bar', Cons ('baz', Cons ('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat (x) (y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty (String)\n  //. ''\n  //.\n  //. > empty (Array)\n  //. []\n  //.\n  //. > empty (Object)\n  //. {}\n  //.\n  //. > empty (List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty (typeRep) ();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert (group) ();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter (x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > filter (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (0))\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter (filterable) (pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject (x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (2, Nil)\n  //.\n  //. > reject (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject (x => x % 2 == 1, Just (0))\n  //. Just (0)\n  //.\n  //. > reject (x => x % 2 == 1, Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter (function(x) { return !(pred (x)); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map (Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map (Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map (Math.sqrt, s => s.length) ('Sanctuary')\n  //. 3\n  //.\n  //. > map (Math.sqrt, Pair ('foo') (64))\n  //. Pair ('foo') (8)\n  //.\n  //. > map (Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map (Math.sqrt, Cons (1, Cons (4, Cons (9, Nil))))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map (functor) (f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip (x => y => x + y, '!') ('foo')\n  //. 'foo!'\n  //.\n  //. > flip ([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip ({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip (Cons (Math.floor, Cons (Math.ceil, Nil)), 1.5)\n  //. Cons (1, Cons (2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map (functor) (thrush (x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap (s => s.toUpperCase (), Math.sqrt, Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap (bifunctor) (f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft (Math.sqrt, Pair (64) (9))\n  //. Pair (8) (9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap (f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap (Math.abs, x => x + 1, Math.sqrt) (-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap (profunctor) (f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap ([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap ({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap (s => n => s.slice (0, n), s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap (Identity (Math.sqrt), Identity (64))\n  //. Identity (8)\n  //.\n  //. > ap (Cons (Math.sqrt, Cons (x => x * x, Nil)), Cons (16, Cons (100, Nil)))\n  //. Cons (4, Cons (10, Cons (256, Cons (10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap (applyX) (applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2 (x => y => Math.pow (x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2 (x => y => Math.pow (x, y), Identity (10), Identity (3))\n  //. Identity (1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap (map (f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        ['<', '['],\n  //. .        ['>', ']'],\n  //. .        ['foo', 'bar', 'baz'])\n  //. [ '<foo>', '<bar>', '<baz>',\n  //. . '<foo]', '<bar]', '<baz]',\n  //. . '[foo>', '[bar>', '[baz>',\n  //. . '[foo]', '[bar]', '[baz]' ]\n  //.\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        Identity ('<'),\n  //. .        Identity ('>'),\n  //. .        Identity ('baz'))\n  //. Identity ('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap (ap (map (f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst ([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst (Identity (1), Identity (2))\n  //. Identity (1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2 (constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond ([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond (Identity (1), Identity (2))\n  //. Identity (2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2 (constant (identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of (Array, 42)\n  //. [42]\n  //.\n  //. > of (Function, 42) (null)\n  //. 42\n  //.\n  //. > of (List, 42)\n  //. Cons (42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of (typeRep) (x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append (3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append (3, Cons (1, Cons (2, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat (xs, of (xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend (1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend (1, Cons (2, Cons (3, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat (of (xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain (x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain (x => x % 2 == 1 ? of (List, x) : Nil,\n  //. .        Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > chain (n => s => s.slice (0, n),\n  //. .        s => Math.ceil (s.length / 2))\n  //. .       ('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain (chain_) (f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join (Identity (Identity (1)))\n  //. Identity (1)\n  //. ```\n  function join(chain_) {\n    return chain (identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec (\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map (done)\n  //. .                                    : [s + 'o', s + 'n'].map (next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec (typeRep) (f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt (Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt (Nothing, Just (1))\n  //. Just (1)\n  //.\n  //. > alt (Just (2), Just (3))\n  //. Just (2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt (x) (y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero (Array)\n  //. []\n  //.\n  //. > zero (Object)\n  //. {}\n  //.\n  //. > zero (Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero (typeRep) ();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce ((xs, x) => [x].concat (xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce (concat, '', Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce (foldable) (f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size ([])\n  //. 0\n  //.\n  //. > size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size (Nil)\n  //. 0\n  //.\n  //. > size (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.length;\n    return reduce (function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# all :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if all the elements of the structure satisfy the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > all (Number.isInteger, [])\n  //. true\n  //.\n  //. > all (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > all (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function all(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.every (unary (pred));\n    return reduce (function(b, x) { return b && pred (x); }, true, foldable);\n  }\n\n  //# any :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if any element of the structure satisfies the predicate;\n  //. `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > any (Number.isInteger, [])\n  //. false\n  //.\n  //. > any (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > any (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. true\n  //. ```\n  function any(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.some (unary (pred));\n    return reduce (function(b, x) { return b || pred (x); }, false, foldable);\n  }\n\n  //# none :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if none of the elements of the structure satisfies the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`any`](#any). `none (pred, foldable)` is\n  //. equivalent to `!(any (pred, foldable))`.\n  //.\n  //. See also [`all`](#all).\n  //.\n  //. ```javascript\n  //. > none (Number.isInteger, [])\n  //. true\n  //.\n  //. > none (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function none(pred, foldable) {\n    return !(any (pred, foldable));\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem ('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem ('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem (3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem (8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem (0, Just (0))\n  //. true\n  //.\n  //. > elem (0, Just (1))\n  //. false\n  //.\n  //. > elem (0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return any (function(y) { return equals (x, y); }, foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap (String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce (function(monoid, x) { return concat (monoid, f (x)); },\n                   empty (typeRep),\n                   foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse (Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (3, Cons (2, Cons (1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return (foldable.slice ()).reverse ();\n    var F = foldable.constructor;\n    return reduce (function(xs, x) { return concat (of (F, x), xs); },\n                   empty (F),\n                   foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort ([Just (2), Nothing, Just (1)])\n  //. [Nothing, Just (1), Just (2)]\n  //.\n  //. > sort (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. Cons ('bar', Cons ('baz', Cons ('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy (identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy (s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy (s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy (s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy (s => s.length, Cons ('red', Cons ('green', Cons ('blue', Nil))))\n  //. Cons ('red', Cons ('blue', Cons ('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce (function(rs, x) {\n      rs.push ({idx: rs.length, x: x, fx: f (x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    } (rs[0]));\n\n    rs.sort (function(a, b) {\n      return lte_ (a.fx, b.fx) ? lte_ (b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray (foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty (F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat (result, of (F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse (Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse (Identity, x => Identity (x + 1), [1, 2, 3])\n  //. Identity ([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse (traversable) (typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence (Array, Identity ([1, 2, 3]))\n  //. [Identity (1), Identity (2), Identity (3)]\n  //.\n  //. > sequence (Identity, [Identity (1), Identity (2), Identity (3)])\n  //. Identity ([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse (typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend (ss => ss.join (''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend (f => f ([3, 4]), reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend (extend_) (f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate (Identity (1))\n  //. Identity (Identity (1))\n  //.\n  //. > duplicate ([1])\n  //. [[1]]\n  //.\n  //. > duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate (reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend (identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract (Identity (42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract (comonad) ();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap (s => s.length, Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap (contravariant) (f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    clamp: clamp,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    all: all,\n    any: any,\n    none: none,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*              ___                 ______\n               /  /\\               /  ___/\\\n        ______/  / / _______    __/  /___\\/\n       /  ___   / / /  ___  \\  /_   __/\\\n      /  /\\_/  / / /  /__/  /\\ \\/  /\\_\\/\n     /  / //  / / /  ______/ / /  / /\n    /  /_//  / / /  /______\\/ /  / /\n    \\_______/ /  \\_______/\\  /__/ /\n     \\______\\/    \\______\\/  \\__*/\n\n//. # sanctuary-def\n//.\n//. sanctuary-def is a run-time type system for JavaScript. It facilitates\n//. the definition of curried JavaScript functions that are explicit about\n//. the number of arguments to which they may be applied and the types of\n//. those arguments.\n//.\n//. It is conventional to import the package as `$`:\n//.\n//. ```javascript\n//. const $ = require ('sanctuary-def');\n//. ```\n//.\n//. The next step is to define an environment. An environment is an array\n//. of [types][]. [`env`][] is an environment containing all the built-in\n//. JavaScript types. It may be used as the basis for environments that\n//. include custom types in addition to the built-in types:\n//.\n//. ```javascript\n//. //    Integer :: Type\n//. const Integer = '...';\n//.\n//. //    NonZeroInteger :: Type\n//. const NonZeroInteger = '...';\n//.\n//. //    env :: Array Type\n//. const env = $.env.concat ([Integer, NonZeroInteger]);\n//. ```\n//.\n//. Type constructors such as `List :: Type -> Type` cannot be included in\n//. an environment as they're not of the correct type. One could, though,\n//. use a type constructor to define a fixed number of concrete types:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([\n//.   List ($.Number),                // :: Type\n//.   List ($.String),                // :: Type\n//.   List (List ($.Number)),         // :: Type\n//.   List (List ($.String)),         // :: Type\n//.   List (List (List ($.Number))),  // :: Type\n//.   List (List (List ($.String))),  // :: Type\n//. ]);\n//. ```\n//.\n//. Not only would this be tedious, but one could never enumerate all possible\n//. types as there are infinitely many. Instead, one should use [`Unknown`][]:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([List ($.Unknown)]);\n//. ```\n//.\n//. The next step is to define a `def` function for the environment:\n//.\n//. ```javascript\n//. const def = $.create ({checkTypes: true, env});\n//. ```\n//.\n//. The `checkTypes` option determines whether type checking is enabled.\n//. This allows one to only pay the performance cost of run-time type checking\n//. during development. For example:\n//.\n//. ```javascript\n//. const def = $.create ({\n//.   checkTypes: process.env.NODE_ENV === 'development',\n//.   env,\n//. });\n//. ```\n//.\n//. `def` is a function for defining functions. For example:\n//.\n//. ```javascript\n//. //    add :: Number -> Number -> Number\n//. const add =\n//. def ('add')\n//.     ({})\n//.     ([$.Number, $.Number, $.Number])\n//.     (x => y => x + y);\n//. ```\n//.\n//. `[$.Number, $.Number, $.Number]` specifies that `add` takes two arguments\n//. of type `Number`, one at a time, and returns a value of type `Number`.\n//.\n//. Applying `add` to two arguments, one at a time, gives the expected result:\n//.\n//. ```javascript\n//. add (2) (2);\n//. // => 4\n//. ```\n//.\n//. Applying `add` to multiple arguments at once results in an exception being\n//. thrown:\n//.\n//. ```javascript\n//. add (2, 2, 2);\n//. // ! TypeError: ‘add’ applied to the wrong number of arguments\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   Expected one argument but received three arguments:\n//. //\n//. //     - 2\n//. //     - 2\n//. //     - 2\n//. ```\n//.\n//. Applying `add` to one argument produces a function awaiting the remaining\n//. argument. This is known as partial application. Partial application allows\n//. more specific functions to be defined in terms of more general ones:\n//.\n//. ```javascript\n//. //    inc :: Number -> Number\n//. const inc = add (1);\n//.\n//. inc (7);\n//. // => 8\n//. ```\n//.\n//. JavaScript's implicit type coercion often obfuscates the source of type\n//. errors. Consider the following function:\n//.\n//. ```javascript\n//. //    _add :: Number -> Number -> Number\n//. const _add = x => y => x + y;\n//. ```\n//.\n//. The type signature indicates that `_add` takes arguments of type `Number`,\n//. but this is not enforced. This allows type errors to be silently ignored:\n//.\n//. ```javascript\n//. _add ('2') ('2');\n//. // => '22'\n//. ```\n//.\n//. `add`, on the other hand, throws if applied to arguments of the wrong\n//. types:\n//.\n//. ```javascript\n//. add ('2') ('2');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"2\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n//.\n//. Type checking is performed as arguments are provided (rather than once all\n//. arguments have been provided), so type errors are reported early:\n//.\n//. ```javascript\n//. add ('X');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"X\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-either'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-either',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            function(Either, show, Z, type) {\n              return f (util, Either, show, Z, type);\n            });\n  } else {\n    self.sanctuaryDef = f (util,\n                           self.sanctuaryEither,\n                           self.sanctuaryShow,\n                           self.sanctuaryTypeClasses,\n                           self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(util, Either, show, Z, type) {\n\n  'use strict';\n\n  var MAX_SAFE_INTEGER = Math.pow (2, 53) - 1;\n  var MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n  var slice             = Array.prototype.slice;\n  var hasOwnProperty    = Object.prototype.hasOwnProperty;\n  var toString          = Object.prototype.toString;\n\n  var inspect = typeof util.inspect.custom === 'symbol' ?\n                util.inspect.custom :\n                /* istanbul ignore next */ 'inspect';\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  B :: (b -> c) -> (a -> b) -> a -> c\n  function B(f) {\n    return function(g) {\n      return function(x) {\n        return f (g (x));\n      };\n    };\n  }\n\n  //  I :: a -> a\n  function I(x) { return x; }\n\n  //  K :: a -> b -> a\n  function K(x) { return function(y) { return x; }; }\n\n  //  W :: (a -> a -> b) -> a -> b\n  function W(f) { return function(x) { return f (x) (x); }; }\n\n  //  always0 :: a -> () -> a\n  function always0(x) { return function() { return x; }; }\n\n  //  always2 :: a -> (b, c) -> a\n  function always2(x) { return function(y, z) { return x; }; }\n\n  //  complement :: (a -> Boolean) -> a -> Boolean\n  function complement(pred) { return function(x) { return !(pred (x)); }; }\n\n  //  filter :: Filterable f => (a -> Boolean) -> f a -> f a\n  function filter(pred) {\n    return function(xs) {\n      return Z.filter (pred, xs);\n    };\n  }\n\n  //  init :: Array a -> Array a\n  function init(xs) { return xs.slice (0, -1); }\n\n  //  isEmpty :: Foldable f => f a -> Boolean\n  function isEmpty(xs) { return Z.size (xs) === 0; }\n\n  //  isPrefix :: Array a -> Array a -> Boolean\n  function isPrefix(candidate) {\n    return function(xs) {\n      if (candidate.length > xs.length) return false;\n      for (var idx = 0; idx < candidate.length; idx += 1) {\n        if (candidate[idx] !== xs[idx]) return false;\n      }\n      return true;\n    };\n  }\n\n  //  joinWith :: (String, Array String) -> String\n  function joinWith(separator, ss) {\n    return ss.join (separator);\n  }\n\n  //  last :: Array a -> a\n  function last(xs) { return xs[xs.length - 1]; }\n\n  //  memberOf :: Array a -> a -> Boolean\n  function memberOf(xs) {\n    return function(y) {\n      return xs.some (function(x) { return Z.equals (x, y); });\n    };\n  }\n\n  //  or :: (Array a, Array a) -> Array a\n  function or(xs, ys) { return isEmpty (xs) ? ys : xs; }\n\n  //  prop :: String -> {} -> a\n  function prop(field) { return function(record) { return record[field]; }; }\n\n  //  sizeEq :: Foldable f => Integer -> f a -> Boolean\n  function sizeEq(n) { return function(xs) { return Z.size (xs) === n; }; }\n\n  //  strRepeat :: (String, Integer) -> String\n  function strRepeat(s, times) {\n    return joinWith (s, Array (times + 1));\n  }\n\n  //  r :: Char -> String -> String\n  function r(c) {\n    return function(s) {\n      return strRepeat (c, s.length);\n    };\n  }\n\n  //  _ :: String -> String\n  var _ = r (' ');\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  toArray :: Foldable f => f a -> Array a\n  function toArray(foldable) {\n    return Array.isArray (foldable) ?\n           foldable :\n           Z.reduce (function(xs, x) { xs.push (x); return xs; },\n                     [],\n                     foldable);\n  }\n\n  //  toMarkdownList :: (String, String, a -> String, Array a) -> String\n  function toMarkdownList(empty, s, f, xs) {\n    return isEmpty (xs) ?\n      empty :\n      Z.reduce (function(s, x) { return s + '  - ' + f (x) + '\\n'; }, s, xs);\n  }\n\n  //  trimTrailingSpaces :: String -> String\n  function trimTrailingSpaces(s) {\n    return s.replace (/[ ]+$/gm, '');\n  }\n\n  //  when :: Boolean -> (a -> a) -> a -> a\n  function when(bool) {\n    return function(f) {\n      return function(x) {\n        return bool ? f (x) : x;\n      };\n    };\n  }\n\n  //  wrap :: String -> String -> String -> String\n  function wrap(prefix) {\n    return function(suffix) {\n      return function(s) {\n        return prefix + s + suffix;\n      };\n    };\n  }\n\n  //  parenthesize :: (String -> String) -> String -> String\n  function parenthesize(f) { return wrap (f ('(')) (f (')')); }\n\n  //  q :: String -> String\n  var q = wrap ('\\u2018') ('\\u2019');\n\n  //  stripNamespace :: TypeClass -> String\n  function stripNamespace(typeClass) {\n    return typeClass.name.slice (typeClass.name.indexOf ('/') + 1);\n  }\n\n  function _test(env) {\n    return function(x) {\n      return function recur(t) {\n        return t.supertypes.every (recur) && t._test (env) (x);\n      };\n    };\n  }\n\n  var Type$prototype = {\n    'constructor': {'@@type': 'sanctuary-def/Type@1'},\n    'validate': function(env) {\n      var test2 = _test (env);\n      var type = this;\n      return function(x) {\n        if (!(test2 (x) (type))) return Left ({value: x, propPath: []});\n        for (var idx = 0; idx < type.keys.length; idx += 1) {\n          var k = type.keys[idx];\n          var t = type.types[k];\n          var ys = type.extractors[k] (x);\n          for (var idx2 = 0; idx2 < ys.length; idx2 += 1) {\n            var result = t.validate (env) (ys[idx2]);\n            if (result.isLeft) {\n              return Left ({value: result.value.value,\n                            propPath: Z.concat ([k], result.value.propPath)});\n            }\n          }\n        }\n        return Right (x);\n      };\n    },\n    'fantasy-land/equals': function(other) {\n      return (\n        Z.equals (this.type, other.type) &&\n        Z.equals (this.name, other.name) &&\n        Z.equals (this.url, other.url) &&\n        Z.equals (this.supertypes, other.supertypes) &&\n        Z.equals (this.keys, other.keys) &&\n        Z.equals (this.types, other.types)\n      );\n    },\n    '@@show': function() {\n      return this.format (I, K (I));\n    }\n  };\n\n  //  _Type :: ... -> Type\n  function _Type(\n    type,       // :: String\n    name,       // :: String\n    url,        // :: String\n    arity,      // :: NonNegativeInteger\n    format,\n    // :: Nullable ((String -> String, String -> String -> String) -> String)\n    supertypes, // :: Array Type\n    test,       // :: Any -> Boolean\n    tuples      // :: Array (Array3 String (a -> Array b) Type)\n  ) {\n    var t = Object.create (Type$prototype);\n    t._test = test;\n    t._extractors = tuples.reduce (function(_extractors, tuple) {\n      _extractors[tuple[0]] = tuple[1];\n      return _extractors;\n    }, {});\n    t.arity = arity;  // number of type parameters\n    t.extractors = Z.map (B (toArray), t._extractors);\n    t.format = format || function(outer, inner) {\n      return Z.reduce (function(s, tuple) {\n        return s +\n               outer (' ') +\n               when (tuple[2].arity > 0)\n                    (parenthesize (outer))\n                    (inner (tuple[0]) (show (tuple[2])));\n      }, outer (name), tuples);\n    };\n    t.keys = tuples.map (function(tuple) { return tuple[0]; });\n    t.name = name;\n    t.supertypes = supertypes;\n    t.type = type;\n    t.types = tuples.reduce (function(types, tuple) {\n      types[tuple[0]] = tuple[2];\n      return types;\n    }, {});\n    t.url = url;\n    return t;\n  }\n\n  var BINARY        = 'BINARY';\n  var FUNCTION      = 'FUNCTION';\n  var INCONSISTENT  = 'INCONSISTENT';\n  var NO_ARGUMENTS  = 'NO_ARGUMENTS';\n  var NULLARY       = 'NULLARY';\n  var RECORD        = 'RECORD';\n  var UNARY         = 'UNARY';\n  var UNKNOWN       = 'UNKNOWN';\n  var VARIABLE      = 'VARIABLE';\n\n  //  Inconsistent :: Type\n  var Inconsistent =\n  _Type (INCONSISTENT, '', '', 0, always2 ('???'), [], K (K (false)), []);\n\n  //  NoArguments :: Type\n  var NoArguments =\n  _Type (NO_ARGUMENTS, '', '', 0, always2 ('()'), [], K (K (true)), []);\n\n  //  arityGte :: NonNegativeInteger -> Type -> Boolean\n  function arityGte(n) {\n    return function(t) {\n      return t.arity >= n;\n    };\n  }\n\n  //  typeEq :: String -> a -> Boolean\n  function typeEq(name) {\n    return function(x) {\n      return type (x) === name;\n    };\n  }\n\n  //  typeofEq :: String -> a -> Boolean\n  function typeofEq(typeof_) {\n    return function(x) {\n      // eslint-disable-next-line valid-typeof\n      return typeof x === typeof_;\n    };\n  }\n\n  //  functionUrl :: String -> String\n  function functionUrl(name) {\n    var version = '0.20.0';  // updated programmatically\n    return 'https://github.com/sanctuary-js/sanctuary-def/tree/v' + version +\n           '#' + name;\n  }\n\n  var NullaryTypeWithUrl = Z.ap (NullaryType, functionUrl);\n  var UnaryTypeWithUrl = Z.ap (UnaryType, functionUrl);\n  var BinaryTypeWithUrl = Z.ap (BinaryType, functionUrl);\n\n  //. ### Types\n  //.\n  //. Conceptually, a type is a set of values. One can think of a value of\n  //. type `Type` as a function of type `Any -> Boolean` that tests values\n  //. for membership in the set (though this is an oversimplification).\n\n  //# Unknown :: Type\n  //.\n  //. Type used to represent missing type information. The type of `[]`,\n  //. for example, is `Array ???`.\n  //.\n  //. May be used with type constructors when defining environments. Given a\n  //. type constructor `List :: Type -> Type`, one could use `List ($.Unknown)`\n  //. to include an infinite number of types in an environment:\n  //.\n  //.   - `List Number`\n  //.   - `List String`\n  //.   - `List (List Number)`\n  //.   - `List (List String)`\n  //.   - `List (List (List Number))`\n  //.   - `List (List (List String))`\n  //.   - `...`\n  var Unknown =\n  _Type (UNKNOWN, '', '', 0, always2 ('Unknown'), [], K (K (true)), []);\n\n  //# Any :: Type\n  //.\n  //. Type comprising every JavaScript value.\n  var Any = NullaryTypeWithUrl\n    ('Any')\n    ([])\n    (K (true));\n\n  //# AnyFunction :: Type\n  //.\n  //. Type comprising every Function value.\n  var AnyFunction = NullaryTypeWithUrl\n    ('Function')\n    ([])\n    (typeofEq ('function'));\n\n  //# Arguments :: Type\n  //.\n  //. Type comprising every [`arguments`][arguments] object.\n  var Arguments = NullaryTypeWithUrl\n    ('Arguments')\n    ([])\n    (typeEq ('Arguments'));\n\n  //# Array :: Type -> Type\n  //.\n  //. Constructor for homogeneous Array types.\n  var Array_ = UnaryTypeWithUrl\n    ('Array')\n    ([])\n    (typeEq ('Array'))\n    (I);\n\n  //# Array0 :: Type\n  //.\n  //. Type whose sole member is `[]`.\n  var Array0 = NullaryTypeWithUrl\n    ('Array0')\n    ([Array_ (Unknown)])\n    (sizeEq (0));\n\n  //# Array1 :: Type -> Type\n  //.\n  //. Constructor for singleton Array types.\n  var Array1 = UnaryTypeWithUrl\n    ('Array1')\n    ([Array_ (Unknown)])\n    (sizeEq (1))\n    (I);\n\n  //# Array2 :: Type -> Type -> Type\n  //.\n  //. Constructor for heterogeneous Array types of length 2. `['foo', true]` is\n  //. a member of `Array2 String Boolean`.\n  var Array2 = BinaryTypeWithUrl\n    ('Array2')\n    ([Array_ (Unknown)])\n    (sizeEq (2))\n    (function(array2) { return [array2[0]]; })\n    (function(array2) { return [array2[1]]; });\n\n  //# Boolean :: Type\n  //.\n  //. Type comprising `true` and `false`.\n  var Boolean_ = NullaryTypeWithUrl\n    ('Boolean')\n    ([])\n    (typeofEq ('boolean'));\n\n  //# Date :: Type\n  //.\n  //. Type comprising every Date value.\n  var Date_ = NullaryTypeWithUrl\n    ('Date')\n    ([])\n    (typeEq ('Date'));\n\n  //# ValidDate :: Type\n  //.\n  //. Type comprising every [`Date`][] value except `new Date (NaN)`.\n  var ValidDate = NullaryTypeWithUrl\n    ('ValidDate')\n    ([Date_])\n    (B (complement (isNaN)) (Number));\n\n  //# Descending :: Type -> Type\n  //.\n  //. [Descending][] type constructor.\n  var Descending = UnaryTypeWithUrl\n    ('Descending')\n    ([])\n    (typeEq ('sanctuary-descending/Descending@1'))\n    (I);\n\n  //# Either :: Type -> Type -> Type\n  //.\n  //. [Either][] type constructor.\n  var Either_ = BinaryTypeWithUrl\n    ('Either')\n    ([])\n    (typeEq ('sanctuary-either/Either@1'))\n    (function(either) { return either.isLeft ? [either.value] : []; })\n    (function(either) { return either.isLeft ? [] : [either.value]; });\n\n  //# Error :: Type\n  //.\n  //. Type comprising every Error value, including values of more specific\n  //. constructors such as [`SyntaxError`][] and [`TypeError`][].\n  var Error_ = NullaryTypeWithUrl\n    ('Error')\n    ([])\n    (typeEq ('Error'));\n\n  //# Fn :: Type -> Type -> Type\n  //.\n  //. Binary type constructor for unary function types. `$.Fn (I) (O)`\n  //. represents `I -> O`, the type of functions that take a value of\n  //. type `I` and return a value of type `O`.\n  function Fn($1) { return function($2) { return Function_ ([$1, $2]); }; }\n\n  //# Function :: NonEmpty (Array Type) -> Type\n  //.\n  //. Constructor for Function types.\n  //.\n  //. Examples:\n  //.\n  //.   - `$.Function ([$.Date, $.String])` represents the `Date -> String`\n  //.     type; and\n  //.   - `$.Function ([a, b, a])` represents the `(a, b) -> a` type.\n  function Function_(types) {\n    var tuples = Z.reduce (function(tuples, t) {\n      tuples.push (['$' + show (tuples.length + 1), K ([]), t]);\n      return tuples;\n    }, [], types);\n\n    function format(outer, inner) {\n      return when (tuples.length !== 2)\n                  (parenthesize (outer))\n                  (joinWith (outer (', '),\n                             Z.map (function(tuple) {\n                               return when (tuple[2].type === FUNCTION)\n                                           (parenthesize (outer))\n                                           (inner (tuple[0])\n                                                  (show (tuple[2])));\n                             }, init (tuples)))) +\n             outer (' -> ') +\n             inner ((last (tuples))[0])\n                   (show ((last (tuples))[2]));\n    }\n\n    return _Type (FUNCTION,\n                  '',\n                  '',\n                  types.length,\n                  format,\n                  [AnyFunction],\n                  K (K (true)),\n                  tuples);\n  }\n\n  //# HtmlElement :: Type\n  //.\n  //. Type comprising every [HTML element][].\n  var HtmlElement = NullaryTypeWithUrl\n    ('HtmlElement')\n    ([])\n    (function(x) {\n       return /^\\[object HTML.+Element\\]$/.test (toString.call (x));\n     });\n\n  //# Identity :: Type -> Type\n  //.\n  //. [Identity][] type constructor.\n  var Identity = UnaryTypeWithUrl\n    ('Identity')\n    ([])\n    (typeEq ('sanctuary-identity/Identity@1'))\n    (I);\n\n  //# Maybe :: Type -> Type\n  //.\n  //. [Maybe][] type constructor.\n  var Maybe = UnaryTypeWithUrl\n    ('Maybe')\n    ([])\n    (typeEq ('sanctuary-maybe/Maybe@1'))\n    (I);\n\n  //# NonEmpty :: Type -> Type\n  //.\n  //. Constructor for non-empty types. `$.NonEmpty ($.String)`, for example, is\n  //. the type comprising every [`String`][] value except `''`.\n  //.\n  //. The given type must satisfy the [Monoid][] and [Setoid][] specifications.\n  var NonEmpty = UnaryTypeWithUrl\n    ('NonEmpty')\n    ([])\n    (function(x) {\n       return Z.Monoid.test (x) &&\n              Z.Setoid.test (x) &&\n              !(Z.equals (x, Z.empty (x.constructor)));\n     })\n    (function(monoid) { return [monoid]; });\n\n  //# Null :: Type\n  //.\n  //. Type whose sole member is `null`.\n  var Null = NullaryTypeWithUrl\n    ('Null')\n    ([])\n    (typeEq ('Null'));\n\n  //# Nullable :: Type -> Type\n  //.\n  //. Constructor for types that include `null` as a member.\n  var Nullable = UnaryTypeWithUrl\n    ('Nullable')\n    ([])\n    (K (true))\n    (function(nullable) {\n       // eslint-disable-next-line eqeqeq\n       return nullable === null ? [] : [nullable];\n     });\n\n  //# Number :: Type\n  //.\n  //. Type comprising every primitive Number value (including `NaN`).\n  var Number_ = NullaryTypeWithUrl\n    ('Number')\n    ([])\n    (typeofEq ('number'));\n\n  function nonZero(x) { return x !== 0; }\n  function nonNegative(x) { return x >= 0; }\n  function positive(x) { return x > 0; }\n  function negative(x) { return x < 0; }\n\n  //# PositiveNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value greater than zero.\n  var PositiveNumber = NullaryTypeWithUrl\n    ('PositiveNumber')\n    ([Number_])\n    (positive);\n\n  //# NegativeNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value less than zero.\n  var NegativeNumber = NullaryTypeWithUrl\n    ('NegativeNumber')\n    ([Number_])\n    (negative);\n\n  //# ValidNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value except `NaN`.\n  var ValidNumber = NullaryTypeWithUrl\n    ('ValidNumber')\n    ([Number_])\n    (complement (isNaN));\n\n  //# NonZeroValidNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `0` and `-0`.\n  var NonZeroValidNumber = NullaryTypeWithUrl\n    ('NonZeroValidNumber')\n    ([ValidNumber])\n    (nonZero);\n\n  //# FiniteNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `Infinity` and\n  //. `-Infinity`.\n  var FiniteNumber = NullaryTypeWithUrl\n    ('FiniteNumber')\n    ([ValidNumber])\n    (isFinite);\n\n  //# NonZeroFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value except `0` and `-0`.\n  var NonZeroFiniteNumber = NullaryTypeWithUrl\n    ('NonZeroFiniteNumber')\n    ([FiniteNumber])\n    (nonZero);\n\n  //# PositiveFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value greater than zero.\n  var PositiveFiniteNumber = NullaryTypeWithUrl\n    ('PositiveFiniteNumber')\n    ([FiniteNumber])\n    (positive);\n\n  //# NegativeFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value less than zero.\n  var NegativeFiniteNumber = NullaryTypeWithUrl\n    ('NegativeFiniteNumber')\n    ([FiniteNumber])\n    (negative);\n\n  //# Integer :: Type\n  //.\n  //. Type comprising every integer in the range\n  //. [[`Number.MIN_SAFE_INTEGER`][min] .. [`Number.MAX_SAFE_INTEGER`][max]].\n  var Integer = NullaryTypeWithUrl\n    ('Integer')\n    ([ValidNumber])\n    (function(x) {\n       return Math.floor (x) === x &&\n              x >= MIN_SAFE_INTEGER &&\n              x <= MAX_SAFE_INTEGER;\n     });\n\n  //# NonZeroInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value except `0` and `-0`.\n  var NonZeroInteger = NullaryTypeWithUrl\n    ('NonZeroInteger')\n    ([Integer])\n    (nonZero);\n\n  //# NonNegativeInteger :: Type\n  //.\n  //. Type comprising every non-negative [`Integer`][] value (including `-0`).\n  //. Also known as the set of natural numbers under ISO 80000-2:2009.\n  var NonNegativeInteger = NullaryTypeWithUrl\n    ('NonNegativeInteger')\n    ([Integer])\n    (nonNegative);\n\n  //# PositiveInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value greater than zero.\n  var PositiveInteger = NullaryTypeWithUrl\n    ('PositiveInteger')\n    ([Integer])\n    (positive);\n\n  //# NegativeInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value less than zero.\n  var NegativeInteger = NullaryTypeWithUrl\n    ('NegativeInteger')\n    ([Integer])\n    (negative);\n\n  //# Object :: Type\n  //.\n  //. Type comprising every \"plain\" Object value. Specifically, values\n  //. created via:\n  //.\n  //.   - object literal syntax;\n  //.   - [`Object.create`][]; or\n  //.   - the `new` operator in conjunction with `Object` or a custom\n  //.     constructor function.\n  var Object_ = NullaryTypeWithUrl\n    ('Object')\n    ([])\n    (typeEq ('Object'));\n\n  //# Pair :: Type -> Type -> Type\n  //.\n  //. [Pair][] type constructor.\n  var Pair = BinaryTypeWithUrl\n    ('Pair')\n    ([])\n    (typeEq ('sanctuary-pair/Pair@1'))\n    (function(pair) { return [pair.fst]; })\n    (function(pair) { return [pair.snd]; });\n\n  //# RegExp :: Type\n  //.\n  //. Type comprising every RegExp value.\n  var RegExp_ = NullaryTypeWithUrl\n    ('RegExp')\n    ([])\n    (typeEq ('RegExp'));\n\n  //# GlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `true`.\n  //.\n  //. See also [`NonGlobalRegExp`][].\n  var GlobalRegExp = NullaryTypeWithUrl\n    ('GlobalRegExp')\n    ([RegExp_])\n    (prop ('global'));\n\n  //# NonGlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `false`.\n  //.\n  //. See also [`GlobalRegExp`][].\n  var NonGlobalRegExp = NullaryTypeWithUrl\n    ('NonGlobalRegExp')\n    ([RegExp_])\n    (complement (prop ('global')));\n\n  //# StrMap :: Type -> Type\n  //.\n  //. Constructor for homogeneous Object types.\n  //.\n  //. `{foo: 1, bar: 2, baz: 3}`, for example, is a member of `StrMap Number`;\n  //. `{foo: 1, bar: 2, baz: 'XXX'}` is not.\n  var StrMap = UnaryTypeWithUrl\n    ('StrMap')\n    ([Object_])\n    (K (true))\n    (I);\n\n  //# String :: Type\n  //.\n  //. Type comprising every primitive String value.\n  var String_ = NullaryTypeWithUrl\n    ('String')\n    ([])\n    (typeofEq ('string'));\n\n  //# RegexFlags :: Type\n  //.\n  //. Type comprising the canonical RegExp flags:\n  //.\n  //.   - `''`\n  //.   - `'g'`\n  //.   - `'i'`\n  //.   - `'m'`\n  //.   - `'gi'`\n  //.   - `'gm'`\n  //.   - `'im'`\n  //.   - `'gim'`\n  var RegexFlags = NullaryTypeWithUrl\n    ('RegexFlags')\n    ([String_])\n    (function(s) { return /^g?i?m?$/.test (s); });\n\n  //# Symbol :: Type\n  //.\n  //. Type comprising every Symbol value.\n  var Symbol_ = NullaryTypeWithUrl\n    ('Symbol')\n    ([])\n    (typeofEq ('symbol'));\n\n  //# Type :: Type\n  //.\n  //. Type comprising every `Type` value.\n  var Type = NullaryTypeWithUrl\n    ('Type')\n    ([])\n    (typeEq ('sanctuary-def/Type@1'));\n\n  //# TypeClass :: Type\n  //.\n  //. Type comprising every [`TypeClass`][] value.\n  var TypeClass = NullaryTypeWithUrl\n    ('TypeClass')\n    ([])\n    (typeEq ('sanctuary-type-classes/TypeClass@1'));\n\n  //# Undefined :: Type\n  //.\n  //. Type whose sole member is `undefined`.\n  var Undefined = NullaryTypeWithUrl\n    ('Undefined')\n    ([])\n    (typeEq ('Undefined'));\n\n  //# env :: Array Type\n  //.\n  //. An array of [types][]:\n  //.\n  //.   - <code>[AnyFunction](#AnyFunction)</code>\n  //.   - <code>[Arguments](#Arguments)</code>\n  //.   - <code>[Array](#Array) ([Unknown][])</code>\n  //.   - <code>[Array2](#Array2) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[Boolean](#Boolean)</code>\n  //.   - <code>[Date](#Date)</code>\n  //.   - <code>[Descending](#Descending) ([Unknown][])</code>\n  //.   - <code>[Either](#Either) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[Error](#Error)</code>\n  //.   - <code>[Fn](#Fn) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[HtmlElement](#HtmlElement)</code>\n  //.   - <code>[Identity](#Identity) ([Unknown][])</code>\n  //.   - <code>[Maybe](#Maybe) ([Unknown][])</code>\n  //.   - <code>[Null](#Null)</code>\n  //.   - <code>[Number](#Number)</code>\n  //.   - <code>[Object](#Object)</code>\n  //.   - <code>[Pair](#Pair) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[RegExp](#RegExp)</code>\n  //.   - <code>[StrMap](#StrMap) ([Unknown][])</code>\n  //.   - <code>[String](#String)</code>\n  //.   - <code>[Symbol](#Symbol)</code>\n  //.   - <code>[Type](#Type)</code>\n  //.   - <code>[TypeClass](#TypeClass)</code>\n  //.   - <code>[Undefined](#Undefined)</code>\n  var env = [\n    AnyFunction,\n    Arguments,\n    Array_ (Unknown),\n    Array2 (Unknown) (Unknown),\n    Boolean_,\n    Date_,\n    Descending (Unknown),\n    Either_ (Unknown) (Unknown),\n    Error_,\n    Fn (Unknown) (Unknown),\n    HtmlElement,\n    Identity (Unknown),\n    Maybe (Unknown),\n    Null,\n    Number_,\n    Object_,\n    Pair (Unknown) (Unknown),\n    RegExp_,\n    StrMap (Unknown),\n    String_,\n    Symbol_,\n    Type,\n    TypeClass,\n    Undefined\n  ];\n\n  //  Unchecked :: String -> Type\n  function Unchecked(s) { return NullaryType (s) ('') ([]) (K (true)); }\n\n  //  production :: Boolean\n  var production =\n    typeof process !== 'undefined' &&\n    /* global process:false */\n    process != null &&\n    process.env != null &&\n    process.env.NODE_ENV === 'production';\n\n  //  numbers :: Array String\n  var numbers = [\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine'\n  ];\n\n  //  numArgs :: Integer -> String\n  function numArgs(n) {\n    return (n < numbers.length ? numbers[n] : show (n)) + ' ' +\n           (n === 1 ? 'argument' : 'arguments');\n  }\n\n  //  expandUnknown\n  //  :: Array Type\n  //  -> Array Object\n  //  -> Any\n  //  -> (a -> Array b)\n  //  -> Type\n  //  -> Array Type\n  function expandUnknown(env) {\n    return function(seen) {\n      return function(value) {\n        return function(extractor) {\n          return function(type) {\n            return type.type === UNKNOWN ?\n                   _determineActualTypes (env, seen, extractor (value)) :\n                   [type];\n          };\n        };\n      };\n    };\n  }\n\n  //  _determineActualTypes :: ... -> Array Type\n  function _determineActualTypes(\n    env,            // :: Array Type\n    seen,           // :: Array Object\n    values          // :: Array Any\n  ) {\n    var expandUnknown4 = expandUnknown (env);\n\n    function refine(types, value) {\n      var seen$;\n      if (typeof value === 'object' && value != null ||\n          typeof value === 'function') {\n        //  Abort if a circular reference is encountered; add the current\n        //  object to the array of seen objects otherwise.\n        if (seen.indexOf (value) >= 0) return [];\n        seen$ = Z.concat (seen, [value]);\n      } else {\n        seen$ = seen;\n      }\n      var expandUnknown2 = expandUnknown4 (seen$) (value);\n      return Z.chain (function(t) {\n        return (\n          (t.validate (env) (value)).isLeft ?\n            [] :\n          t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknown2 (t.extractors.$1) (t.types.$1)) :\n          t.type === BINARY ?\n            Z.lift2 (fromBinaryType (t),\n                     expandUnknown2 (t.extractors.$1) (t.types.$1),\n                     expandUnknown2 (t.extractors.$2) (t.types.$2)) :\n          // else\n            [t]\n        );\n      }, types);\n    }\n\n    return isEmpty (values) ?\n      [Unknown] :\n      or (Z.reduce (refine, env, values), [Inconsistent]);\n  }\n\n  //  isConsistent :: Type -> Boolean\n  function isConsistent(t) {\n    return t.type === UNARY   ? isConsistent (t.types.$1) :\n           t.type === BINARY  ? isConsistent (t.types.$1) &&\n                                isConsistent (t.types.$2) :\n           /* else */           t.type !== INCONSISTENT;\n  }\n\n  //  determineActualTypesStrict :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesStrict(env, values) {\n    return Z.filter (isConsistent,\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  determineActualTypesLoose :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesLoose(env, values) {\n    return Z.reject (function(t) { return t.type === INCONSISTENT; },\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  TypeInfo = { name :: String\n  //             , constraints :: StrMap (Array TypeClass)\n  //             , types :: NonEmpty (Array Type) }\n  //\n  //  TypeVarMap = StrMap { types :: Array Type\n  //                      , valuesByPath :: StrMap (Array Any) }\n  //\n  //  PropPath = Array (Number | String)\n\n  //  updateTypeVarMap :: ... -> TypeVarMap\n  function updateTypeVarMap(\n    env,            // :: Array Type\n    typeVarMap,     // :: TypeVarMap\n    typeVar,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var $typeVarMap = {};\n    for (var typeVarName in typeVarMap) {\n      var entry = typeVarMap[typeVarName];\n      var $entry = {types: entry.types.slice (), valuesByPath: {}};\n      for (var k in entry.valuesByPath) {\n        $entry.valuesByPath[k] = entry.valuesByPath[k].slice ();\n      }\n      $typeVarMap[typeVarName] = $entry;\n    }\n    if (!(hasOwnProperty.call ($typeVarMap, typeVar.name))) {\n      $typeVarMap[typeVar.name] = {\n        types: Z.filter (arityGte (typeVar.arity), env),\n        valuesByPath: {}\n      };\n    }\n\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    if (!(hasOwnProperty.call ($typeVarMap[typeVar.name].valuesByPath, key))) {\n      $typeVarMap[typeVar.name].valuesByPath[key] = [];\n    }\n\n    var isValid = test (env);\n\n    var expandUnknownStrict = B (B (B (filter (isConsistent))))\n                                (expandUnknown (env) ([]));\n\n    values.forEach (function(value) {\n      var expandUnknownStrict2 = expandUnknownStrict (value);\n      $typeVarMap[typeVar.name].valuesByPath[key].push (value);\n      $typeVarMap[typeVar.name].types = Z.chain (function(t) {\n        return (\n          !(isValid (t) (value)) ?\n            [] :\n          typeVar.arity === 0 && t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknownStrict2 (t.extractors.$1) (t.types.$1)) :\n          typeVar.arity === 0 && t.type === BINARY ?\n            Z.lift2 (fromBinaryType (t),\n                     expandUnknownStrict2 (t.extractors.$1) (t.types.$1),\n                     expandUnknownStrict2 (t.extractors.$2) (t.types.$2)) :\n          // else\n            [t]\n        );\n      }, $typeVarMap[typeVar.name].types);\n    });\n\n    return $typeVarMap;\n  }\n\n  //  underlineTypeVars :: (TypeInfo, StrMap (Array Any)) -> String\n  function underlineTypeVars(typeInfo, valuesByPath) {\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var paths = Z.map (JSON.parse, sortedKeys (valuesByPath));\n    return underline (\n      typeInfo,\n      K (K (_)),\n      function(index) {\n        return function(f) {\n          return function(t) {\n            return function(propPath) {\n              var indexedPropPath = Z.concat ([index], propPath);\n              return function(s) {\n                if (paths.some (isPrefix (indexedPropPath))) {\n                  var key = JSON.stringify (indexedPropPath);\n                  if (!(hasOwnProperty.call (valuesByPath, key))) return s;\n                  if (!(isEmpty (valuesByPath[key]))) return f (s);\n                }\n                return _ (s);\n              };\n            };\n          };\n        };\n      }\n    );\n  }\n\n  //  satisfactoryTypes :: ... -> Either (() -> Error)\n  //                                     { typeVarMap :: TypeVarMap\n  //                                     , types :: Array Type }\n  function satisfactoryTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeVarMap,     // :: TypeVarMap\n    expType,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var recur = satisfactoryTypes;\n\n    for (var idx = 0; idx < values.length; idx += 1) {\n      var result = expType.validate (env) (values[idx]);\n      if (result.isLeft) {\n        return Left (function() {\n          return invalidValue (env,\n                               typeInfo,\n                               index,\n                               Z.concat (propPath, result.value.propPath),\n                               result.value.value);\n        });\n      }\n    }\n\n    switch (expType.type) {\n\n      case VARIABLE:\n        var typeVarName = expType.name;\n        var constraints = typeInfo.constraints;\n        if (hasOwnProperty.call (constraints, typeVarName)) {\n          var typeClasses = constraints[typeVarName];\n          for (idx = 0; idx < values.length; idx += 1) {\n            for (var idx2 = 0; idx2 < typeClasses.length; idx2 += 1) {\n              if (!(typeClasses[idx2].test (values[idx]))) {\n                return Left (function() {\n                  return typeClassConstraintViolation (\n                    env,\n                    typeInfo,\n                    typeClasses[idx2],\n                    index,\n                    propPath,\n                    values[idx],\n                    typeVarMap\n                  );\n                });\n              }\n            }\n          }\n        }\n\n        var typeVarMap$ = updateTypeVarMap (env,\n                                            typeVarMap,\n                                            expType,\n                                            index,\n                                            propPath,\n                                            values);\n\n        var okTypes = typeVarMap$[typeVarName].types;\n        return isEmpty (okTypes) ?\n          Left (function() {\n            return typeVarConstraintViolation (\n              env,\n              typeInfo,\n              index,\n              propPath,\n              typeVarMap$[typeVarName].valuesByPath\n            );\n          }) :\n          Z.reduce (function(e, t) {\n            return Z.chain (function(r) {\n              //  The `a` in `Functor f => f a` corresponds to the `a`\n              //  in `Maybe a` but to the `b` in `Either a b`. A type\n              //  variable's $1 will correspond to either $1 or $2 of\n              //  the actual type depending on the actual type's arity.\n              var offset = t.arity - expType.arity;\n              return expType.keys.reduce (function(e, k, idx) {\n                var extractor = t.extractors[t.keys[offset + idx]];\n                return Z.reduce (function(e, x) {\n                  return Z.chain (function(r) {\n                    return recur (env,\n                                  typeInfo,\n                                  r.typeVarMap,\n                                  expType.types[k],\n                                  index,\n                                  Z.concat (propPath, [k]),\n                                  [x]);\n                  }, e);\n                }, e, Z.chain (extractor, values));\n              }, Right (r));\n            }, e);\n          }, Right ({typeVarMap: typeVarMap$, types: okTypes}), okTypes);\n\n      case UNARY:\n        return Z.map (\n          function(result) {\n            return {\n              typeVarMap: result.typeVarMap,\n              types: Z.map (fromUnaryType (expType),\n                            or (result.types, [expType.types.$1]))\n            };\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.extractors.$1, values))\n        );\n\n      case BINARY:\n        return Z.chain (\n          function(result) {\n            var $1s = result.types;\n            return Z.map (\n              function(result) {\n                var $2s = result.types;\n                return {\n                  typeVarMap: result.typeVarMap,\n                  types: Z.lift2 (fromBinaryType (expType),\n                                  or ($1s, [expType.types.$1]),\n                                  or ($2s, [expType.types.$2]))\n                };\n              },\n              recur (env,\n                     typeInfo,\n                     result.typeVarMap,\n                     expType.types.$2,\n                     index,\n                     Z.concat (propPath, ['$2']),\n                     Z.chain (expType.extractors.$2, values))\n            );\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.extractors.$1, values))\n        );\n\n      case RECORD:\n        return Z.reduce (function(e, k) {\n          return Z.chain (function(r) {\n            return recur (env,\n                          typeInfo,\n                          r.typeVarMap,\n                          expType.types[k],\n                          index,\n                          Z.concat (propPath, [k]),\n                          Z.chain (expType.extractors[k], values));\n          }, e);\n        }, Right ({typeVarMap: typeVarMap, types: [expType]}), expType.keys);\n\n      default:\n        return Right ({typeVarMap: typeVarMap, types: [expType]});\n    }\n  }\n\n  //# test :: Array Type -> Type -> a -> Boolean\n  //.\n  //. Takes an environment, a type, and any value. Returns `true` if the value\n  //. is a member of the type; `false` otherwise.\n  //.\n  //. The environment is only significant if the type contains\n  //. [type variables][].\n  function test(env) {\n    return function(t) {\n      return function(x) {\n        var typeInfo = {name: 'name', constraints: {}, types: [t]};\n        return (satisfactoryTypes (env, typeInfo, {}, t, 0, [], [x])).isRight;\n      };\n    };\n  }\n\n  //. ### Type constructors\n  //.\n  //. sanctuary-def provides several functions for defining types.\n\n  //# NullaryType :: String -> String -> Array Type -> (Any -> Boolean) -> Type\n  //.\n  //. Type constructor for types with no type variables (such as [`Number`][]).\n  //.\n  //. To define a nullary type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`); and\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Integer :: Type\n  //. const Integer = $.NullaryType\n  //.   ('Integer')\n  //.   ('http://example.com/my-package#Integer')\n  //.   ([])\n  //.   (x => typeof x === 'number' &&\n  //.         Math.floor (x) === x &&\n  //.         x >= Number.MIN_SAFE_INTEGER &&\n  //.         x <= Number.MAX_SAFE_INTEGER);\n  //.\n  //. //    NonZeroInteger :: Type\n  //. const NonZeroInteger = $.NullaryType\n  //.   ('NonZeroInteger')\n  //.   ('http://example.com/my-package#NonZeroInteger')\n  //.   ([Integer])\n  //.   (x => x !== 0);\n  //.\n  //. //    rem :: Integer -> NonZeroInteger -> Integer\n  //. const rem =\n  //. def ('rem')\n  //.     ({})\n  //.     ([Integer, NonZeroInteger, Integer])\n  //.     (x => y => x % y);\n  //.\n  //. rem (42) (5);\n  //. // => 2\n  //.\n  //. rem (0.5);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //          ^^^^^^^\n  //. //             1\n  //. //\n  //. //   1)  0.5 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Integer’.\n  //. //\n  //. //   See http://example.com/my-package#Integer for information about the Integer type.\n  //.\n  //. rem (42) (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //                     ^^^^^^^^^^^^^^\n  //. //                           1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘NonZeroInteger’.\n  //. //\n  //. //   See http://example.com/my-package#NonZeroInteger for information about the NonZeroInteger type.\n  //. ```\n  function NullaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return _Type (NULLARY, name, url, 0, null, supertypes, K (test), []);\n        };\n      };\n    };\n  }\n\n  //# UnaryType :: Foldable f => String -> String -> Array Type -> (Any -> Boolean) -> (t a -> f a) -> Type -> Type\n  //.\n  //. Type constructor for types with one type variable (such as [`Array`][]).\n  //.\n  //. To define a unary type `t a` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`);\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t x` for some type `x`;\n  //.\n  //.   - a function that takes any value of type `t a` and returns the values\n  //.     of type `a` contained in the `t`; and\n  //.\n  //.   - the type of `a`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const show = require ('sanctuary-show');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    MaybeTypeRep :: TypeRep Maybe\n  //. const MaybeTypeRep = {'@@type': 'my-package/Maybe'};\n  //.\n  //. //    Maybe :: Type -> Type\n  //. const Maybe = $.UnaryType\n  //.   ('Maybe')\n  //.   ('http://example.com/my-package#Maybe')\n  //.   ([])\n  //.   (x => type (x) === MaybeTypeRep['@@type'])\n  //.   (maybe => maybe.isJust ? [maybe.value] : []);\n  //.\n  //. //    Nothing :: Maybe a\n  //. const Nothing = {\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': false,\n  //.   'isNothing': true,\n  //.   '@@show': () => 'Nothing',\n  //. };\n  //.\n  //. //    Just :: a -> Maybe a\n  //. const Just = x => ({\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': true,\n  //.   'isNothing': false,\n  //.   '@@show': () => `Just (${show (x)})`,\n  //.   'value': x,\n  //. });\n  //.\n  //. //    fromMaybe :: a -> Maybe a -> a\n  //. const fromMaybe =\n  //. def ('fromMaybe')\n  //.     ({})\n  //.     ([a, Maybe (a), a])\n  //.     (x => m => m.isJust ? m.value : x);\n  //.\n  //. fromMaybe (0) (Just (42));\n  //. // => 42\n  //.\n  //. fromMaybe (0) (Nothing);\n  //. // => 0\n  //.\n  //. fromMaybe (0) (Just ('XXX'));\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   fromMaybe :: a -> Maybe a -> a\n  //. //                ^          ^\n  //. //                1          2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"XXX\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function UnaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return function(_1) {\n            return function($1) {\n              return _Type (UNARY,\n                            name,\n                            url,\n                            1,\n                            null,\n                            supertypes,\n                            K (test),\n                            [['$1', _1, $1]]);\n            };\n          };\n        };\n      };\n    };\n  }\n\n  //  fromUnaryType :: Type -> Type -> Type\n  function fromUnaryType(t) {\n    return UnaryType (t.name)\n                     (t.url)\n                     (t.supertypes)\n                     (t._test ([]))\n                     (t._extractors.$1);\n  }\n\n  //# BinaryType :: Foldable f => String -> String -> Array Type -> (Any -> Boolean) -> (t a b -> f a) -> (t a b -> f b) -> Type -> Type -> Type\n  //.\n  //. Type constructor for types with two type variables (such as\n  //. [`Array2`][]).\n  //.\n  //. To define a binary type `t a b` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`);\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t x y` for some types `x` and `y`;\n  //.\n  //.   - a function that takes any value of type `t a b` and returns the\n  //.     values of type `a` contained in the `t`;\n  //.\n  //.   - a function that takes any value of type `t a b` and returns the\n  //.     values of type `b` contained in the `t`;\n  //.\n  //.   - the type of `a`; and\n  //.\n  //.   - the type of `b`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    PairTypeRep :: TypeRep Pair\n  //. const PairTypeRep = {'@@type': 'my-package/Pair'};\n  //.\n  //. //    $Pair :: Type -> Type -> Type\n  //. const $Pair = $.BinaryType\n  //.   ('Pair')\n  //.   ('http://example.com/my-package#Pair')\n  //.   ([])\n  //.   (x => type (x) === PairTypeRep['@@type'])\n  //.   (({fst}) => [fst])\n  //.   (({snd}) => [snd]);\n  //.\n  //. //    Pair :: a -> b -> Pair a b\n  //. const Pair =\n  //. def ('Pair')\n  //.     ({})\n  //.     ([a, b, $Pair (a) (b)])\n  //.     (fst => snd => ({\n  //.        'constructor': PairTypeRep,\n  //.        'fst': fst,\n  //.        'snd': snd,\n  //.        '@@show': () => `Pair (${show (fst)}) (${show (snd)})`,\n  //.      }));\n  //.\n  //. //    Rank :: Type\n  //. const Rank = $.NullaryType\n  //.   ('Rank')\n  //.   ('http://example.com/my-package#Rank')\n  //.   ([$.String])\n  //.   (x => /^(A|2|3|4|5|6|7|8|9|10|J|Q|K)$/.test (x));\n  //.\n  //. //    Suit :: Type\n  //. const Suit = $.NullaryType\n  //.   ('Suit')\n  //.   ('http://example.com/my-package#Suit')\n  //.   ([$.String])\n  //.   (x => /^[\\u2660\\u2663\\u2665\\u2666]$/.test (x));\n  //.\n  //. //    Card :: Type\n  //. const Card = $Pair (Rank) (Suit);\n  //.\n  //. //    showCard :: Card -> String\n  //. const showCard =\n  //. def ('showCard')\n  //.     ({})\n  //.     ([Card, $.String])\n  //.     (card => card.fst + card.snd);\n  //.\n  //. showCard (Pair ('A') ('♠'));\n  //. // => 'A♠'\n  //.\n  //. showCard (Pair ('X') ('♠'));\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   showCard :: Pair Rank Suit -> String\n  //. //                    ^^^^\n  //. //                     1\n  //. //\n  //. //   1)  \"X\" :: String\n  //. //\n  //. //   The value at position 1 is not a member of ‘Rank’.\n  //. //\n  //. //   See http://example.com/my-package#Rank for information about the Rank type.\n  //. ```\n  function BinaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return function(_1) {\n            return function(_2) {\n              return function($1) {\n                return function($2) {\n                  return _Type (BINARY,\n                                name,\n                                url,\n                                2,\n                                null,\n                                supertypes,\n                                K (test),\n                                [['$1', _1, $1],\n                                 ['$2', _2, $2]]);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  }\n\n  //  fromBinaryType :: (Type -> Type -> Type) -> Type -> Type -> Type\n  function fromBinaryType(t) {\n    return BinaryType (t.name)\n                      (t.url)\n                      (t.supertypes)\n                      (t._test ([]))\n                      (t._extractors.$1)\n                      (t._extractors.$2);\n  }\n\n  //# EnumType :: String -> String -> Array Any -> Type\n  //.\n  //. Type constructor for [enumerated types][] (such as [`RegexFlags`][]).\n  //.\n  //. To define an enumerated type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`); and\n  //.\n  //.   - an array of distinct values.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Denomination :: Type\n  //. const Denomination = $.EnumType\n  //.   ('Denomination')\n  //.   ('http://example.com/my-package#Denomination')\n  //.   ([10, 20, 50, 100, 200]);\n  //. ```\n  function EnumType(name) {\n    return function(url) {\n      return B (NullaryType (name) (url) ([])) (memberOf);\n    };\n  }\n\n  //# RecordType :: StrMap Type -> Type\n  //.\n  //. `RecordType` is used to construct anonymous record types. The type\n  //. definition specifies the name and type of each required field. A field is\n  //. an enumerable property (either an own property or an inherited property).\n  //.\n  //. To define an anonymous record type one must provide:\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Point :: Type\n  //. const Point = $.RecordType ({x: $.FiniteNumber, y: $.FiniteNumber});\n  //.\n  //. //    dist :: Point -> Point -> FiniteNumber\n  //. const dist =\n  //. def ('dist')\n  //.     ({})\n  //.     ([Point, Point, $.FiniteNumber])\n  //.     (p => q => Math.sqrt (Math.pow (p.x - q.x, 2) +\n  //.                           Math.pow (p.y - q.y, 2)));\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4, color: 'red'});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: NaN, y: NaN});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //                                                              ^^^^^^^^^^^^\n  //. //                                                                   1\n  //. //\n  //. //   1)  NaN :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘FiniteNumber’.\n  //.\n  //. dist (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  //. //                              1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘{ x :: FiniteNumber, y :: FiniteNumber }’.\n  //. ```\n  function RecordType(fields) {\n    var keys = sortedKeys (fields);\n\n    function format(outer, inner) {\n      if (isEmpty (keys)) return outer ('{}');\n      var reprs = Z.map (function(k) {\n        var t = fields[k];\n        return outer (' ') +\n               outer (/^(?!\\d)[$\\w]+$/.test (k) ? k : show (k)) +\n               outer (' :: ') +\n               inner (k) (show (t));\n      }, keys);\n      return wrap (outer ('{')) (outer (' }')) (joinWith (outer (','), reprs));\n    }\n\n    function test(env) {\n      return function(x) {\n        if (x == null) return false;\n        var missing = {};\n        keys.forEach (function(k) { missing[k] = k; });\n        for (var k in x) delete missing[k];\n        return isEmpty (missing);\n      };\n    }\n\n    var tuples = keys.map (function(k) {\n      return [k, function(x) { return [x[k]]; }, fields[k]];\n    });\n\n    return _Type (RECORD, '', '', 0, format, [], test, tuples);\n  }\n\n  //# NamedRecordType :: NonEmpty String -> String -> Array Type -> StrMap Type -> Type\n  //.\n  //. `NamedRecordType` is used to construct named record types. The type\n  //. definition specifies the name and type of each required field. A field is\n  //. an enumerable property (either an own property or an inherited property).\n  //.\n  //. To define a named record type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`); and\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Circle :: Type\n  //. const Circle = $.NamedRecordType\n  //.   ('my-package/Circle')\n  //.   ('http://example.com/my-package#Circle')\n  //.   ([])\n  //.   ({radius: $.PositiveFiniteNumber});\n  //.\n  //. //    Cylinder :: Type\n  //. const Cylinder = $.NamedRecordType\n  //.   ('Cylinder')\n  //.   ('http://example.com/my-package#Cylinder')\n  //.   ([Circle])\n  //.   ({height: $.PositiveFiniteNumber});\n  //.\n  //. //    volume :: Cylinder -> PositiveFiniteNumber\n  //. const volume =\n  //. def ('volume')\n  //.     ({})\n  //.     ([Cylinder, $.FiniteNumber])\n  //.     (cyl => Math.PI * cyl.radius * cyl.radius * cyl.height);\n  //.\n  //. volume ({radius: 2, height: 10});\n  //. // => 125.66370614359172\n  //.\n  //. volume ({radius: 2});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   volume :: Cylinder -> FiniteNumber\n  //. //             ^^^^^^^^\n  //. //                1\n  //. //\n  //. //   1)  {\"radius\": 2} :: Object, StrMap Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Cylinder’.\n  //. //\n  //. //   See http://example.com/my-package#Cylinder for information about the Cylinder type.\n  //. ```\n  function NamedRecordType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(fields) {\n          var keys = sortedKeys (fields);\n\n          function format(outer, inner) {\n            return outer (name);\n          }\n\n          function test(env) {\n            var test2 = _test (env);\n            return function(x) {\n              if (x == null) return false;\n              var missing = {};\n              keys.forEach (function(k) { missing[k] = k; });\n              for (var k in x) delete missing[k];\n              return isEmpty (missing) &&\n                     keys.every (function(k) {\n                       return test2 (x[k]) (fields[k]);\n                     });\n            };\n          }\n\n          var tuples = keys.map (function(k) {\n            return [k, function(x) { return [x[k]]; }, fields[k]];\n          });\n\n          return _Type (RECORD,\n                        name,\n                        url,\n                        0,\n                        format,\n                        supertypes,\n                        test,\n                        tuples);\n        };\n      };\n    };\n  }\n\n  //  typeVarPred :: NonNegativeInteger -> Array Type -> Any -> Boolean\n  function typeVarPred(arity) {\n    var filter = arityGte (arity);\n    return function(env) {\n      var test2 = _test (env);\n      return function(x) {\n        var test1 = test2 (x);\n        return env.some (function(t) { return filter (t) && test1 (t); });\n      };\n    };\n  }\n\n  //# TypeVariable :: String -> Type\n  //.\n  //. Polymorphism is powerful. Not being able to define a function for\n  //. all types would be very limiting indeed: one couldn't even define the\n  //. identity function!\n  //.\n  //. Before defining a polymorphic function one must define one or more type\n  //. variables:\n  //.\n  //. ```javascript\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //.\n  //. //    id :: a -> a\n  //. const id = def ('id') ({}) ([a, a]) (x => x);\n  //.\n  //. id (42);\n  //. // => 42\n  //.\n  //. id (null);\n  //. // => null\n  //. ```\n  //.\n  //. The same type variable may be used in multiple positions, creating a\n  //. constraint:\n  //.\n  //. ```javascript\n  //. //    cmp :: a -> a -> Number\n  //. const cmp =\n  //. def ('cmp')\n  //.     ({})\n  //.     ([a, a, $.Number])\n  //.     (x => y => x < y ? -1 : x > y ? 1 : 0);\n  //.\n  //. cmp (42) (42);\n  //. // => 0\n  //.\n  //. cmp ('a') ('z');\n  //. // => -1\n  //.\n  //. cmp ('z') ('a');\n  //. // => 1\n  //.\n  //. cmp (0) ('1');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   cmp :: a -> a -> Number\n  //. //          ^    ^\n  //. //          1    2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"1\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function TypeVariable(name) {\n    var tuples = [];\n    var test = typeVarPred (tuples.length);\n    return _Type (VARIABLE, name, '', 0, always2 (name), [], test, tuples);\n  }\n\n  //# UnaryTypeVariable :: String -> Type -> Type\n  //.\n  //. Combines [`UnaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a unary type variable `t a` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`); and\n  //.\n  //.   - the type of `a`.\n  //.\n  //. Consider the type of a generalized `map`:\n  //.\n  //. ```haskell\n  //. map :: Functor f => (a -> b) -> f a -> f b\n  //. ```\n  //.\n  //. `f` is a unary type variable. With two (nullary) type variables, one\n  //. unary type variable, and one [type class][] it's possible to define a\n  //. fully polymorphic `map` function:\n  //.\n  //. ```javascript\n  //. const $ = require ('sanctuary-def');\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //. const f = $.UnaryTypeVariable ('f');\n  //.\n  //. //    map :: Functor f => (a -> b) -> f a -> f b\n  //. const map =\n  //. def ('map')\n  //.     ({f: [Z.Functor]})\n  //.     ([$.Function ([a, b]), f (a), f (b)])\n  //.     (f => functor => Z.map (f, functor));\n  //. ```\n  //.\n  //. Whereas a regular type variable is fully resolved (`a` might become\n  //. `Array (Array String)`, for example), a unary type variable defers to\n  //. its type argument, which may itself be a type variable. The type argument\n  //. corresponds to the type argument of a unary type or the *second* type\n  //. argument of a binary type. The second type argument of `Map k v`, for\n  //. example, is `v`. One could replace `Functor => f` with `Map k` or with\n  //. `Map Integer`, but not with `Map`.\n  //.\n  //. This shallow inspection makes it possible to constrain a value's \"outer\"\n  //. and \"inner\" types independently.\n  function UnaryTypeVariable(name) {\n    return function($1) {\n      var tuples = [['$1', K ([]), $1]];\n      var test = typeVarPred (tuples.length);\n      return _Type (VARIABLE, name, '', 1, null, [], test, tuples);\n    };\n  }\n\n  //# BinaryTypeVariable :: String -> Type -> Type -> Type\n  //.\n  //. Combines [`BinaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a binary type variable `t a b` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`);\n  //.\n  //.   - the type of `a`; and\n  //.\n  //.   - the type of `b`.\n  //.\n  //. The more detailed explanation of [`UnaryTypeVariable`][] also applies to\n  //. `BinaryTypeVariable`.\n  function BinaryTypeVariable(name) {\n    return function($1) {\n      return function($2) {\n        var tuples = [['$1', K ([]), $1],\n                      ['$2', K ([]), $2]];\n        var test = typeVarPred (tuples.length);\n        return _Type (VARIABLE, name, '', 2, null, [], test, tuples);\n      };\n    };\n  }\n\n  //# Thunk :: Type -> Type\n  //.\n  //. `$.Thunk (T)` is shorthand for `$.Function ([T])`, the type comprising\n  //. every nullary function (thunk) that returns a value of type `T`.\n  function Thunk(t) { return Function_ ([t]); }\n\n  //# Predicate :: Type -> Type\n  //.\n  //. `$.Predicate (T)` is shorthand for `$.Fn (T) ($.Boolean)`, the type\n  //. comprising every predicate function that takes a value of type `T`.\n  function Predicate(t) { return Fn (t) (Boolean_); }\n\n  //. ### Type classes\n  //.\n  //. One can trivially define a function of type `String -> String -> String`\n  //. that concatenates two strings. This is overly restrictive, though, since\n  //. other types support concatenation (`Array a`, for example).\n  //.\n  //. One could use a type variable to define a polymorphic \"concat\" function:\n  //.\n  //. ```javascript\n  //. //    _concat :: a -> a -> a\n  //. const _concat =\n  //. def ('_concat')\n  //.     ({})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. _concat ('fizz') ('buzz');\n  //. // => 'fizzbuzz'\n  //.\n  //. _concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. _concat ([1, 2]) ('buzz');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   _concat :: a -> a -> a\n  //. //              ^    ^\n  //. //              1    2\n  //. //\n  //. //   1)  [1, 2] :: Array Number\n  //. //\n  //. //   2)  \"buzz\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  //.\n  //. The type of `_concat` is misleading: it suggests that it can operate on\n  //. any two values of *any* one type. In fact there's an implicit constraint,\n  //. since the type must support concatenation (in [mathematical][semigroup]\n  //. terms, the type must have a [semigroup][FL:Semigroup]). Violating this\n  //. implicit constraint results in a run-time error in the implementation:\n  //.\n  //. ```javascript\n  //. _concat (null) (null);\n  //. // ! TypeError: Cannot read property 'concat' of null\n  //. ```\n  //.\n  //. The solution is to constrain `a` by first defining a [`TypeClass`][]\n  //. value, then specifying the constraint in the definition of the \"concat\"\n  //. function:\n  //.\n  //. ```javascript\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. //    Semigroup :: TypeClass\n  //. const Semigroup = Z.TypeClass (\n  //.   'my-package/Semigroup',\n  //.   'http://example.com/my-package#Semigroup',\n  //.   [],\n  //.   x => x != null && typeof x.concat === 'function'\n  //. );\n  //.\n  //. //    concat :: Semigroup a => a -> a -> a\n  //. const concat =\n  //. def ('concat')\n  //.     ({a: [Semigroup]})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. concat (null) (null);\n  //. // ! TypeError: Type-class constraint violation\n  //. //\n  //. //   concat :: Semigroup a => a -> a -> a\n  //. //             ^^^^^^^^^^^    ^\n  //. //                            1\n  //. //\n  //. //   1)  null :: Null\n  //. //\n  //. //   ‘concat’ requires ‘a’ to satisfy the Semigroup type-class constraint; the value at position 1 does not.\n  //. //\n  //. //   See http://example.com/my-package#Semigroup for information about the my-package/Semigroup type class.\n  //. ```\n  //.\n  //. Multiple constraints may be placed on a type variable by including\n  //. multiple `TypeClass` values in the array (e.g. `{a: [Foo, Bar, Baz]}`).\n\n  //  invalidArgumentsCount :: (TypeInfo, Integer, Integer, Array Any) -> Error\n  //\n  //  This function is used in `curry` when a function defined via `def`\n  //  is applied to too many arguments.\n  function invalidArgumentsCount(typeInfo, index, numArgsExpected, args) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) + ' applied to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return K (K (index_ === index ? f : _));\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  constraintsRepr :: ... -> String\n  function constraintsRepr(\n    constraints,    // :: StrMap (Array TypeClass)\n    outer,          // :: String -> String\n    inner           // :: String -> TypeClass -> String -> String\n  ) {\n    var $reprs = [];\n    (sortedKeys (constraints)).forEach (function(k) {\n      var f = inner (k);\n      constraints[k].forEach (function(typeClass) {\n        $reprs.push (f (typeClass) (stripNamespace (typeClass) + ' ' + k));\n      });\n    });\n    return when ($reprs.length > 0)\n                (wrap ('') (outer (' => ')))\n                (when ($reprs.length > 1)\n                      (parenthesize (outer))\n                      (joinWith (outer (', '), $reprs)));\n  }\n\n  //  label :: String -> String -> String\n  function label(label) {\n    return function(s) {\n      var delta = s.length - label.length;\n      return strRepeat (' ', Math.floor (delta / 2)) + label +\n             strRepeat (' ', Math.ceil (delta / 2));\n    };\n  }\n\n  //  typeVarNames :: Type -> Array String\n  function typeVarNames(t) {\n    return Z.concat (\n      t.type === VARIABLE ? [t.name] : [],\n      Z.chain (function(k) { return typeVarNames (t.types[k]); }, t.keys)\n    );\n  }\n\n  //  showTypeWith :: Array Type -> Type -> String\n  function showTypeWith(types) {\n    var names = Z.chain (typeVarNames, types);\n    return function(t) {\n      var code = 'a'.charCodeAt (0);\n      return when (t.type === FUNCTION)\n                  (parenthesize (I))\n                  ((show (t)).replace (/\\bUnknown\\b/g, function() {\n                     // eslint-disable-next-line no-plusplus\n                     do var name = String.fromCharCode (code++);\n                     while (names.indexOf (name) >= 0);\n                     return name;\n                   }));\n    };\n  }\n\n  //  showValuesAndTypes :: ... -> String\n  function showValuesAndTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    values,         // :: Array Any\n    pos             // :: Integer\n  ) {\n    var showType = showTypeWith (typeInfo.types);\n    return show (pos) + ')  ' + joinWith ('\\n    ', Z.map (function(x) {\n      return show (x) +\n             ' :: ' +\n             joinWith (', ',\n                       or (Z.map (showType,\n                                  determineActualTypesLoose (env, [x])),\n                           ['(no types)']));\n    }, values));\n  }\n\n  //  typeSignature :: TypeInfo -> String\n  function typeSignature(typeInfo) {\n    return typeInfo.name + ' :: ' +\n           constraintsRepr (typeInfo.constraints, I, K (K (I))) +\n           joinWith (' -> ',\n                     Z.map (showTypeWith (typeInfo.types), typeInfo.types));\n  }\n\n  //  _underline :: ... -> String\n  function _underline(\n    t,              // :: Type\n    propPath,       // :: PropPath\n    formatType3     // :: Type -> Array String -> String -> String\n  ) {\n    return formatType3 (t) (propPath) (t.format (_, function(k) {\n      return K (_underline (t.types[k],\n                            Z.concat (propPath, [k]),\n                            formatType3));\n    }));\n  }\n\n  //  underline :: ... -> String\n  function underline(\n    typeInfo,               // :: TypeInfo\n    underlineConstraint,    // :: String -> TypeClass -> String -> String\n    formatType5\n    // :: Integer -> (String -> String) -> Type -> PropPath -> String -> String\n  ) {\n    var st = typeInfo.types.reduce (function(st, t, index) {\n      var formatType4 = formatType5 (index);\n      function f(g) {\n        return function(type) {\n          return B (B (B (when (type.type === FUNCTION)\n                               (parenthesize (_)))))\n                   (formatType4 (g));\n        };\n      }\n      st.carets.push (_underline (t, [], W (f (r ('^')))));\n      st.numbers.push (_underline (t, [], W (f (function(s) {\n        return label (show (st.counter += 1)) (s);\n      }))));\n      return st;\n    }, {carets: [], numbers: [], counter: 0});\n\n    return typeSignature (typeInfo) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, underlineConstraint) +\n              joinWith (_ (' -> '), st.carets) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, K (K (_))) +\n              joinWith (_ (' -> '), st.numbers) + '\\n';\n  }\n\n  //  resolvePropPath :: (Type, Array String) -> Type\n  function resolvePropPath(t, propPath) {\n    return Z.reduce (function(t, prop) { return t.types[prop]; },\n                     t,\n                     propPath);\n  }\n\n  //  formatType6 ::\n  //    PropPath -> Integer -> (String -> String) ->\n  //      Type -> PropPath -> String -> String\n  function formatType6(indexedPropPath) {\n    return function(index_) {\n      return function(f) {\n        return function(t) {\n          return function(propPath_) {\n            var indexedPropPath_ = Z.concat ([index_], propPath_);\n            var p = isPrefix (indexedPropPath_) (indexedPropPath);\n            var q = isPrefix (indexedPropPath) (indexedPropPath_);\n            return p && q ? f : p ? I : _;\n          };\n        };\n      };\n    };\n  }\n\n  //  see :: (String, { name :: String, url :: String? }) -> String\n  function see(label, record) {\n    return record.url == null || record.url === '' ?\n           '' :\n           '\\nSee ' + record.url +\n           ' for information about the ' + record.name + ' ' + label + '.\\n';\n  }\n\n  //  typeClassConstraintViolation :: ... -> Error\n  function typeClassConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeClass,      // :: TypeClass\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value,          // :: Any\n    typeVarMap      // :: TypeVarMap\n  ) {\n    var expType = resolvePropPath (typeInfo.types[index], propPath);\n    return new TypeError (trimTrailingSpaces (\n      'Type-class constraint violation\\n\\n' +\n      underline (typeInfo,\n                 function(tvn) {\n                   return function(tc) {\n                     return (\n                       tvn === expType.name && tc.name === typeClass.name ?\n                         r ('^') :\n                         _\n                     );\n                   };\n                 },\n                 formatType6 (Z.concat ([index], propPath))) +\n      '\\n' +\n      showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n      q (typeInfo.name) + ' requires ' +\n      q (expType.name) + ' to satisfy the ' +\n      stripNamespace (typeClass) + ' type-class constraint; ' +\n      'the value at position 1 does not.\\n' +\n      see ('type class', typeClass)\n    ));\n  }\n\n  //  typeVarConstraintViolation :: ... -> Error\n  function typeVarConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    valuesByPath    // :: StrMap (Array Any)\n  ) {\n    //  If we apply an ‘a -> a -> a -> a’ function to Left ('x'), Right (1),\n    //  and Right (null) we'd like to avoid underlining the first argument\n    //  position, since Left ('x') is compatible with the other ‘a’ values.\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    var values = valuesByPath[key];\n\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var keys = Z.filter (function(k) {\n      var values_ = valuesByPath[k];\n      return (\n        //  Keep X, the position at which the violation was observed.\n        k === key ||\n        //  Keep positions whose values are incompatible with the values at X.\n        isEmpty (determineActualTypesStrict (env, Z.concat (values, values_)))\n      );\n    }, sortedKeys (valuesByPath));\n\n    var underlinedTypeVars =\n    underlineTypeVars (typeInfo,\n                       Z.reduce (function($valuesByPath, k) {\n                         $valuesByPath[k] = valuesByPath[k];\n                         return $valuesByPath;\n                       }, {}, keys));\n\n    return new TypeError (trimTrailingSpaces (\n      'Type-variable constraint violation\\n\\n' +\n      underlinedTypeVars + '\\n' +\n      (Z.reduce (function(st, k) {\n        var values = valuesByPath[k];\n        return isEmpty (values) ? st : {\n          idx: st.idx + 1,\n          s: st.s +\n             showValuesAndTypes (env, typeInfo, values, st.idx + 1) +\n             '\\n\\n'\n        };\n      }, {idx: 0, s: ''}, keys)).s +\n      'Since there is no type of which all the above values are ' +\n      'members, the type-variable constraint has been violated.\\n'\n    ));\n  }\n\n  //  invalidValue :: ... -> Error\n  function invalidValue(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value           // :: Any\n  ) {\n    var t = resolvePropPath (typeInfo.types[index], propPath);\n\n    var underlinedTypeVars =\n    underline (typeInfo,\n               K (K (_)),\n               formatType6 (Z.concat ([index], propPath)));\n\n    return new TypeError (trimTrailingSpaces (\n      t.type === VARIABLE &&\n      isEmpty (determineActualTypesLoose (env, [value])) ?\n        'Unrecognized value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n        toMarkdownList (\n          'The environment is empty! ' +\n          'Polymorphic functions require a non-empty environment.\\n',\n          'The value at position 1 is not a member of any type in ' +\n          'the environment.\\n\\n' +\n          'The environment contains the following types:\\n\\n',\n          showTypeWith (typeInfo.types),\n          env\n        ) :\n      // else\n        'Invalid value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n        'The value at position 1 is not a member of ' +\n        q (show (t)) + '.\\n' +\n        see (arityGte (1) (t) ? 'type constructor' : 'type', t)\n    ));\n  }\n\n  //  invalidArgumentsLength :: ... -> Error\n  //\n  //  This function is used in `wrapFunctionCond` to ensure that higher-order\n  //  functions defined via `def` only ever apply a function argument to the\n  //  correct number of arguments.\n  function invalidArgumentsLength(\n    typeInfo,           // :: TypeInfo\n    index,              // :: Integer\n    numArgsExpected,    // :: Integer\n    args                // :: Array Any\n  ) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) +\n      ' applied ' + q (show (typeInfo.types[index])) +\n      ' to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return function(t) {\n              return function(propPath) {\n                return function(s) {\n                  return index_ === index ?\n                    t.format (_, function(k) { return k === '$1' ? f : _; }) :\n                    _ (s);\n                };\n              };\n            };\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  assertRight :: Either (() -> Error) a -> a !\n  function assertRight(either) {\n    if (either.isLeft) throw either.value ();\n    return either.value;\n  }\n\n  //  withTypeChecking :: ... -> Function\n  function withTypeChecking(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    impl            // :: Function\n  ) {\n    var n = typeInfo.types.length - 1;\n\n    //  wrapFunctionCond :: (TypeVarMap, Integer, a) -> a\n    function wrapFunctionCond(_typeVarMap, index, value) {\n      var expType = typeInfo.types[index];\n      if (expType.type !== FUNCTION) return value;\n\n      //  checkValue :: (TypeVarMap, Integer, String, a) -> Either (() -> Error) TypeVarMap\n      function checkValue(typeVarMap, index, k, x) {\n        var propPath = [k];\n        var t = expType.types[k];\n        return (\n          t.type === VARIABLE ?\n            Z.chain (\n              function(typeVarMap) {\n                return isEmpty (typeVarMap[t.name].types) ?\n                  Left (function() {\n                    return typeVarConstraintViolation (\n                      env,\n                      typeInfo,\n                      index,\n                      propPath,\n                      typeVarMap[t.name].valuesByPath\n                    );\n                  }) :\n                  Right (typeVarMap);\n              },\n              Right (updateTypeVarMap (env,\n                                       typeVarMap,\n                                       t,\n                                       index,\n                                       propPath,\n                                       [x]))\n            ) :\n          // else\n            Z.map (\n              function(r) { return r.typeVarMap; },\n              satisfactoryTypes (env,\n                                 typeInfo,\n                                 typeVarMap,\n                                 t,\n                                 index,\n                                 propPath,\n                                 [x])\n            )\n        );\n      }\n\n      var typeVarMap = _typeVarMap;\n      return function(x) {\n        if (arguments.length !== expType.arity - 1) {\n          throw invalidArgumentsLength (typeInfo,\n                                        index,\n                                        expType.arity - 1,\n                                        slice.call (arguments));\n        }\n\n        var args = arguments;\n        typeVarMap = assertRight (\n          (init (expType.keys)).reduce (function(either, k, idx) {\n            var arg = args[idx];\n            return Z.chain (function(typeVarMap) {\n              return checkValue (typeVarMap, index, k, arg);\n            }, either);\n          }, Right (typeVarMap))\n        );\n\n        var output = value.apply (this, arguments);\n        var k = last (expType.keys);\n        typeVarMap = assertRight (checkValue (typeVarMap, index, k, output));\n        return output;\n      };\n    }\n\n    //  wrapNext :: (TypeVarMap, Array Any, Integer) -> (a -> b)\n    function wrapNext(_typeVarMap, _values, index) {\n      return function(x) {\n        var args = slice.call (arguments);\n        if (args.length !== 1) {\n          throw invalidArgumentsCount (typeInfo, index, 1, args);\n        }\n        var typeVarMap = (assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             _typeVarMap,\n                             typeInfo.types[index],\n                             index,\n                             [],\n                             args)\n        )).typeVarMap;\n\n        var values = Z.concat (_values, args);\n        if (index + 1 === n) {\n          var value = values.reduce (function(f, x, idx) {\n            return f (wrapFunctionCond (typeVarMap, idx, x));\n          }, impl);\n          typeVarMap = (assertRight (\n            satisfactoryTypes (env,\n                               typeInfo,\n                               typeVarMap,\n                               typeInfo.types[n],\n                               n,\n                               [],\n                               [value])\n          )).typeVarMap;\n          return wrapFunctionCond (typeVarMap, n, value);\n        } else {\n          return wrapNext (typeVarMap, values, index + 1);\n        }\n      };\n    }\n\n    var wrapped = typeInfo.types[0].type === NO_ARGUMENTS ?\n      function() {\n        if (arguments.length !== 0) {\n          throw invalidArgumentsCount (typeInfo, 0, 0, slice.call (arguments));\n        }\n        var value = impl ();\n        var typeVarMap = (assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             {},\n                             typeInfo.types[n],\n                             n,\n                             [],\n                             [value])\n        )).typeVarMap;\n        return wrapFunctionCond (typeVarMap, n, value);\n      } :\n      wrapNext ({}, [], 0);\n\n    wrapped[inspect] = wrapped.toString = always0 (typeSignature (typeInfo));\n\n    return wrapped;\n  }\n\n  //  defTypes :: NonEmpty (Array Type)\n  var defTypes = [\n    String_,\n    StrMap (Array_ (TypeClass)),\n    NonEmpty (Array_ (Type)),\n    AnyFunction,\n    AnyFunction\n  ];\n\n  function create(opts) {\n    function def(name) {\n      return function(constraints) {\n        return function(expTypes) {\n          return function(impl) {\n            return opts.checkTypes ?\n              withTypeChecking (opts.env,\n                                {name: name,\n                                 constraints: constraints,\n                                 types: expTypes.length === 1 ?\n                                        Z.concat ([NoArguments], expTypes) :\n                                        expTypes},\n                                impl) :\n              impl;\n          };\n        };\n      };\n    }\n    return def (def.name) ({}) (defTypes) (def);\n  }\n\n  var def = create ({checkTypes: !production, env: env});\n\n  //  fromUncheckedUnaryType :: (Type -> Type) -> Type -> Type\n  function fromUncheckedUnaryType(typeConstructor) {\n    var t = typeConstructor (Unknown);\n    return def (t.name) ({}) ([Type, Type]) (fromUnaryType (t));\n  }\n\n  //  fromUncheckedBinaryType :: (Type -> Type -> Type) -> Type -> Type -> Type\n  function fromUncheckedBinaryType(typeConstructor) {\n    var t = typeConstructor (Unknown) (Unknown);\n    return def (t.name) ({}) ([Type, Type, Type]) (fromBinaryType (t));\n  }\n\n  return {\n    Any: Any,\n    AnyFunction: AnyFunction,\n    Arguments: Arguments,\n    Array: fromUncheckedUnaryType (Array_),\n    Array0: Array0,\n    Array1: fromUncheckedUnaryType (Array1),\n    Array2: fromUncheckedBinaryType (Array2),\n    Boolean: Boolean_,\n    Date: Date_,\n    ValidDate: ValidDate,\n    Descending: fromUncheckedUnaryType (Descending),\n    Either: fromUncheckedBinaryType (Either_),\n    Error: Error_,\n    Fn:\n      def ('Fn')\n          ({})\n          ([Type, Type, Type])\n          (Fn),\n    Function:\n      def ('Function')\n          ({})\n          ([NonEmpty (Array_ (Type)), Type])\n          (Function_),\n    HtmlElement: HtmlElement,\n    Identity: fromUncheckedUnaryType (Identity),\n    Maybe: fromUncheckedUnaryType (Maybe),\n    NonEmpty: NonEmpty,\n    Null: Null,\n    Nullable: fromUncheckedUnaryType (Nullable),\n    Number: Number_,\n    PositiveNumber: PositiveNumber,\n    NegativeNumber: NegativeNumber,\n    ValidNumber: ValidNumber,\n    NonZeroValidNumber: NonZeroValidNumber,\n    FiniteNumber: FiniteNumber,\n    NonZeroFiniteNumber: NonZeroFiniteNumber,\n    PositiveFiniteNumber: PositiveFiniteNumber,\n    NegativeFiniteNumber: NegativeFiniteNumber,\n    Integer: Integer,\n    NonZeroInteger: NonZeroInteger,\n    NonNegativeInteger: NonNegativeInteger,\n    PositiveInteger: PositiveInteger,\n    NegativeInteger: NegativeInteger,\n    Object: Object_,\n    Pair: fromUncheckedBinaryType (Pair),\n    RegExp: RegExp_,\n    GlobalRegExp: GlobalRegExp,\n    NonGlobalRegExp: NonGlobalRegExp,\n    RegexFlags: RegexFlags,\n    StrMap: fromUncheckedUnaryType (StrMap),\n    String: String_,\n    Symbol: Symbol_,\n    Type: Type,\n    TypeClass: TypeClass,\n    Undefined: Undefined,\n    Unknown: Unknown,\n    env: env,\n    create:\n      def ('create')\n          ({})\n          ([RecordType ({checkTypes: Boolean_, env: Array_ (Type)}),\n            Unchecked (joinWith (' -> ', Z.map (show, defTypes)))])\n          (create),\n    test:\n      def ('test')\n          ({})\n          ([Array_ (Type), Type, Any, Boolean_])\n          (test),\n    NullaryType:\n      def ('NullaryType')\n          ({})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Type])\n          (NullaryType),\n    UnaryType:\n      def ('UnaryType')\n          ({f: [Z.Foldable]})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Unchecked ('(t a -> f a)'),\n            Unchecked ('Type -> Type')])\n          (function(name) {\n             return B (B (B (B (def (name) ({}) ([Type, Type])))))\n                      (UnaryType (name));\n           }),\n    BinaryType:\n      def ('BinaryType')\n          ({f: [Z.Foldable]})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Unchecked ('(t a b -> f a)'),\n            Unchecked ('(t a b -> f b)'),\n            Unchecked ('Type -> Type -> Type')])\n          (function(name) {\n             return B (B (B (B (B (def (name) ({}) ([Type, Type, Type]))))))\n                      (BinaryType (name));\n           }),\n    EnumType:\n      def ('EnumType')\n          ({})\n          ([String_, String_, Array_ (Any), Type])\n          (EnumType),\n    RecordType:\n      def ('RecordType')\n          ({})\n          ([StrMap (Type), Type])\n          (RecordType),\n    NamedRecordType:\n      def ('NamedRecordType')\n          ({})\n          ([NonEmpty (String_), String_, Array_ (Type), StrMap (Type), Type])\n          (NamedRecordType),\n    TypeVariable:\n      def ('TypeVariable')\n          ({})\n          ([String_, Type])\n          (TypeVariable),\n    UnaryTypeVariable:\n      def ('UnaryTypeVariable')\n          ({})\n          ([String_, Unchecked ('Type -> Type')])\n          (function(name) {\n             return def (name) ({}) ([Type, Type]) (UnaryTypeVariable (name));\n           }),\n    BinaryTypeVariable:\n      def ('BinaryTypeVariable')\n          ({})\n          ([String_, Unchecked ('Type -> Type -> Type')])\n          (function(name) {\n             return def (name)\n                        ({})\n                        ([Type, Type, Type])\n                        (BinaryTypeVariable (name));\n           }),\n    Thunk:\n      def ('Thunk')\n          ({})\n          ([Type, Type])\n          (Thunk),\n    Predicate:\n      def ('Predicate')\n          ({})\n          ([Type, Type])\n          (Predicate)\n  };\n\n}));\n\n//. [Descending]:           v:sanctuary-js/sanctuary-descending\n//. [Either]:               v:sanctuary-js/sanctuary-either\n//. [FL:Semigroup]:         https://github.com/fantasyland/fantasy-land#semigroup\n//. [HTML element]:         https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n//. [Identity]:             v:sanctuary-js/sanctuary-identity\n//. [Maybe]:                v:sanctuary-js/sanctuary-maybe\n//. [Monoid]:               https://github.com/fantasyland/fantasy-land#monoid\n//. [Pair]:                 v:sanctuary-js/sanctuary-pair\n//. [Setoid]:               https://github.com/fantasyland/fantasy-land#setoid\n//. [Unknown]:              #Unknown\n//. [`Array`]:              #Array\n//. [`Array2`]:             #Array2\n//. [`BinaryType`]:         #BinaryType\n//. [`Date`]:               #Date\n//. [`FiniteNumber`]:       #FiniteNumber\n//. [`GlobalRegExp`]:       #GlobalRegExp\n//. [`Integer`]:            #Integer\n//. [`NonGlobalRegExp`]:    #NonGlobalRegExp\n//. [`Number`]:             #Number\n//. [`Object.create`]:      https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n//. [`RegExp`]:             #RegExp\n//. [`RegexFlags`]:         #RegexFlags\n//. [`String`]:             #String\n//. [`SyntaxError`]:        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\n//. [`TypeClass`]:          https://github.com/sanctuary-js/sanctuary-type-classes#TypeClass\n//. [`TypeError`]:          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\n//. [`TypeVariable`]:       #TypeVariable\n//. [`UnaryType`]:          #UnaryType\n//. [`UnaryTypeVariable`]:  #UnaryTypeVariable\n//. [`Unknown`]:            #Unknown\n//. [`ValidNumber`]:        #ValidNumber\n//. [`env`]:                #env\n//. [arguments]:            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n//. [enumerated types]:     https://en.wikipedia.org/wiki/Enumerated_type\n//. [max]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n//. [min]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\n//. [semigroup]:            https://en.wikipedia.org/wiki/Semigroup\n//. [type class]:           #type-classes\n//. [type variables]:       #TypeVariable\n//. [types]:                #types\n","/*\n         _______    ___    _________    ___   ___    _______    ______\n        /  ____/\\  /  /\\  /__   ___/\\  /  /\\ /  /\\  /  ____/\\  /  __  \\\n       /  /\\___\\/ /  / /  \\_/  /\\__\\/ /  /_//  / / /  /\\___\\/ /  /\\/  /\\\n      /  ____/\\  /  / /    /  / /    /  ___   / / /  ____/\\  /      _/ /\n     /  /\\___\\/ /  / /    /  / /    /  /\\_/  / / /  /\\___\\/ /  /|  |\\\\/\n    /______/\\  /__/ /    /__/ /    /__/ //__/ / /______/\\  /__/ |__| |\n    \\______\\/  \\__\\/     \\__\\/     \\__\\/ \\__\\/  \\______\\/  \\__\\/ \\__\\|\n                                                                            */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-either\n//.\n//. The Either type represents values with two possibilities: a value of type\n//. `Either a b` is either a Left whose value is of type `a` or a Right whose\n//. value is of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryEither = f (util,\n                              self.sanctuaryShow,\n                              self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var EitherType = $.BinaryType\n        ('sanctuary-either/Either')\n        ('')\n        (function(x) { return type (x) === Either['@@type']; })\n        (function(e) { return e.isLeft ? [e.value] : []; })\n        (function(e) { return e.isLeft ? [] : [e.value]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, EitherType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Either = {};\n\n  var Left$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 true,\n    'isRight':                false,\n    '@@show':                 Left$prototype$show,\n    'fantasy-land/map':       Left$prototype$map,\n    'fantasy-land/bimap':     Left$prototype$bimap,\n    'fantasy-land/ap':        Left$prototype$ap,\n    'fantasy-land/chain':     Left$prototype$chain,\n    'fantasy-land/alt':       Left$prototype$alt,\n    'fantasy-land/reduce':    Left$prototype$reduce,\n    'fantasy-land/traverse':  Left$prototype$traverse,\n    'fantasy-land/extend':    Left$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Right$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 false,\n    'isRight':                true,\n    '@@show':                 Right$prototype$show,\n    'fantasy-land/map':       Right$prototype$map,\n    'fantasy-land/bimap':     Right$prototype$bimap,\n    'fantasy-land/ap':        Right$prototype$ap,\n    'fantasy-land/chain':     Right$prototype$chain,\n    'fantasy-land/alt':       Right$prototype$alt,\n    'fantasy-land/reduce':    Right$prototype$reduce,\n    'fantasy-land/traverse':  Right$prototype$traverse,\n    'fantasy-land/extend':    Right$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    Left$prototype[custom] = Left$prototype$show;\n    Right$prototype[custom] = Right$prototype$show;\n  } else {\n    Left$prototype.inspect = Left$prototype$show;\n    Right$prototype.inspect = Right$prototype$show;\n  }\n\n  //. `Either a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Right (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Right (['foo'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */               '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Either.Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Left ('sqrt undefined for -1')\n  //. Left ('sqrt undefined for -1')\n  //. ```\n  var Left = Either.Left = function(value) {\n    var left = Object.create (Left$prototype);\n    if (Z.Setoid.test (value)) {\n      left['fantasy-land/equals'] = Left$prototype$equals;\n      if (Z.Ord.test (value)) {\n        left['fantasy-land/lte'] = Left$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      left['fantasy-land/concat'] = Left$prototype$concat;\n    }\n    left.value = value;\n    return left;\n  };\n\n  //# Either.Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > Right (42)\n  //. Right (42)\n  //. ```\n  var Right = Either.Right = function Right(value) {\n    var right = Object.create (Right$prototype);\n    if (Z.Setoid.test (value)) {\n      right['fantasy-land/equals'] = Right$prototype$equals;\n      if (Z.Ord.test (value)) {\n        right['fantasy-land/lte'] = Right$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      right['fantasy-land/concat'] = Right$prototype$concat;\n    }\n    right.value = value;\n    return right;\n  };\n\n  //# Either.@@type :: String\n  //.\n  //. Either [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Right (42))\n  //. 'sanctuary-either/Either@1'\n  //.\n  //. > type.parse (type (Right (42)))\n  //. {namespace: 'sanctuary-either', name: 'Either', version: 1}\n  //. ```\n  Either['@@type'] = 'sanctuary-either/Either@1';\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //.   - `of (Either) (x)` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Either) (42)\n  //. Right (42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Either.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Either d c, a) -> Either d b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Left ('!!')\n  //.\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Right (65536)\n  //. ```\n  Either['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var either = f (next, done, r.value);\n      if (either.isLeft) return either;\n      r = either.value;\n    }\n    return Right (r.value);\n  };\n\n  //# Either#@@show :: (Showable a, Showable b) => Either a b ~> () -> String\n  //.\n  //.   - `show (Left (x))` is equivalent to `'Left (' + show (x) + ')'`\n  //.   - `show (Right (x))` is equivalent to `'Right (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Left ('sqrt undefined for -1'))\n  //. 'Left (\"sqrt undefined for -1\")'\n  //.\n  //. > show (Right ([1, 2, 3]))\n  //. 'Right ([1, 2, 3])'\n  //. ```\n  function Left$prototype$show() {\n    return 'Left (' + show (this.value) + ')';\n  }\n  function Right$prototype$show() {\n    return 'Right (' + show (this.value) + ')';\n  }\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is equal to `Left (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Right (x)` is equal to `Right (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Left (x)` is never equal to `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.equals (Left ([1, 2, 3])) (Left ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Right ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Left ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. false\n  //. ```\n  function Left$prototype$equals(other) {\n    return other.isLeft && Z.equals (this.value, other.value);\n  }\n  function Right$prototype$equals(other) {\n    return other.isRight && Z.equals (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is less than or equal to `Left (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Right (x)` is less than or equal to `Right (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Left (x)` is always less than `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Left (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1)]\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Right (0), Right (1), Right (2)])\n  //. [Right (0), Right (1)]\n  //.\n  //. > S.filter (S.lte (Left (1))) ([Right (0), Right (1), Right (2)])\n  //. []\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1), Left (2)]\n  //. ```\n  function Left$prototype$lte(other) {\n    return other.isRight || Z.lte (this.value, other.value);\n  }\n  function Right$prototype$lte(other) {\n    return other.isRight && Z.lte (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `concat (Left (x)) (Left (y))` is equivalent to\n  //.     `Left (concat (x) (y))`\n  //.   - `concat (Right (x)) (Right (y))` is equivalent to\n  //.     `Right (concat (x) (y))`\n  //.   - `concat (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `concat (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Left ('abc')) (Left ('def'))\n  //. Left ('abcdef')\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Right ([4, 5, 6]))\n  //. Right ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Left ('abc')) (Right ([1, 2, 3]))\n  //. Right ([1, 2, 3])\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Left ('abc'))\n  //. Right ([1, 2, 3])\n  //. ```\n  function Left$prototype$concat(other) {\n    return other.isLeft ? Left (Z.concat (this.value, other.value)) : other;\n  }\n  function Right$prototype$concat(other) {\n    return other.isRight ? Right (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //.   - `map (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `map (f) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (S.add (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.map (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$map(f) {\n    return this;\n  }\n  function Right$prototype$map(f) {\n    return Right (f (this.value));\n  }\n\n  //# Either#fantasy-land/bimap :: Either a c ~> (a -> b, c -> d) -> Either b d\n  //.\n  //.   - `bimap (f) (g) (Left (x))` is equivalent to `Left (f (x))`\n  //.   - `bimap (f) (g) (Right (x))` is equivalent to `Right (g (x))`\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (S.add (1)) (Left ('abc'))\n  //. Left ('ABC')\n  //.\n  //. > S.bimap (S.toUpper) (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$bimap(f, g) {\n    return Left (f (this.value));\n  }\n  function Right$prototype$bimap(f, g) {\n    return Right (g (this.value));\n  }\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //.   - `ap (Left (x)) (Left (y))` is equivalent to `Left (x)`\n  //.   - `ap (Left (x)) (Right (y))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Left (x))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Left ('div undefined for 0')) (Left ('sqrt undefined for -1'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Left ('div undefined for 0')) (Right (99))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Right (S.add (1))) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.ap (Right (S.add (1))) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$ap(other) {\n    return other.isLeft ? other : this;\n  }\n  function Right$prototype$ap(other) {\n    return other.isLeft ? other : Right (other.value (this.value));\n  }\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //.   - `chain (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `chain (f) (Right (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const sqrt = n => n < 0 ? Left ('sqrt undefined for ' + show (n))\n  //. .                         : Right (Math.sqrt (n))\n  //.\n  //. > S.chain (sqrt) (Left ('div undefined for 0'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.chain (sqrt) (Right (-1))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.chain (sqrt) (Right (25))\n  //. Right (5)\n  //. ```\n  function Left$prototype$chain(f) {\n    return this;\n  }\n  function Right$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `alt (Left (x)) (Left (y))` is equivalent to `Left (y)`\n  //.   - `alt (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `alt (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.   - `alt (Right (x)) (Right (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Left ('A')) (Left ('B'))\n  //. Left ('B')\n  //.\n  //. > S.alt (Left ('C')) (Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (Right (2)) (Left ('D'))\n  //. Right (2)\n  //.\n  //. > S.alt (Right (3)) (Right (4))\n  //. Right (3)\n  //. ```\n  function Left$prototype$alt(other) {\n    return other;\n  }\n  function Right$prototype$alt(other) {\n    return this;\n  }\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //.   - `reduce (f) (x) (Left (y))` is equivalent to `x`\n  //.   - `reduce (f) (x) (Right (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1]) (Left ('sqrt undefined for -1'))\n  //. [1]\n  //.\n  //. > S.reduce (S.concat) ([1]) (Right ([2]))\n  //. [1, 2]\n  //. ```\n  function Left$prototype$reduce(f, x) {\n    return x;\n  }\n  function Right$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //.   - `traverse (A) (f) (Left (x))` is equivalent to `of (A) (Left (x))`\n  //.   - `traverse (A) (f) (Right (x))` is equivalent to `map (Right) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Left ('sqrt undefined for -1'))\n  //. [Left ('sqrt undefined for -1')]\n  //.\n  //. > S.traverse (Array) (S.words) (Right ('foo bar baz'))\n  //. [Right ('foo'), Right ('bar'), Right ('baz')]\n  //. ```\n  function Left$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Right$prototype$traverse(typeRep, f) {\n    return Z.map (Right, f (this.value));\n  }\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //.   - `extend (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `extend (f) (Right (x))` is equivalent to `Right (f (Right (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$extend(f) {\n    return this;\n  }\n  function Right$prototype$extend(f) {\n    return Right (f (this));\n  }\n\n  return Either;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n    ,______  ______,  ,________,,_____,,_____,,__________  ,__________,\n    |      \\/      |  |        ||     ||     ||          \\ |          |\n    |_,          ,_|  |_      _||_    ||    _||_,   __    ||_,   _____|\n      |   \\  /   |     /      \\   \\   \\/   /    |        /   |      |\n    ,_|    ||    |_,,_/   /\\   \\_, \\      /   ,_|   __   \\ ,_|   ___|_,\n    |      ||      ||     ||     |  |    |    |           ||          |\n    |______||______||_____||_____|  |____|    |__________/ |__________|\n                                                                         */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-maybe\n//.\n//. The Maybe type represents optional values: a value of type `Maybe a` is\n//. either Nothing (the empty value) or a Just whose value is of type `a`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryMaybe = f (util,\n                             self.sanctuaryShow,\n                             self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var MaybeType = $.UnaryType\n        ('sanctuary-maybe/Maybe')\n        ('')\n        (function(x) { return type (x) === Maybe['@@type']; })\n        (function(m) { return m.isJust ? [m.value] : []; });\n      var env = Z.concat (S.env, [$.TypeClass, MaybeType ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Maybe = {};\n\n  var Nothing$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              true,\n    'isJust':                 false,\n    '@@show':                 Nothing$prototype$show,\n    'fantasy-land/equals':    Nothing$prototype$equals,\n    'fantasy-land/lte':       Nothing$prototype$lte,\n    'fantasy-land/concat':    Nothing$prototype$concat,\n    'fantasy-land/filter':    Nothing$prototype$filter,\n    'fantasy-land/map':       Nothing$prototype$map,\n    'fantasy-land/ap':        Nothing$prototype$ap,\n    'fantasy-land/chain':     Nothing$prototype$chain,\n    'fantasy-land/alt':       Nothing$prototype$alt,\n    'fantasy-land/reduce':    Nothing$prototype$reduce,\n    'fantasy-land/traverse':  Nothing$prototype$traverse,\n    'fantasy-land/extend':    Nothing$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Just$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              false,\n    'isJust':                 true,\n    '@@show':                 Just$prototype$show,\n    'fantasy-land/filter':    Just$prototype$filter,\n    'fantasy-land/map':       Just$prototype$map,\n    'fantasy-land/ap':        Just$prototype$ap,\n    'fantasy-land/chain':     Just$prototype$chain,\n    'fantasy-land/alt':       Just$prototype$alt,\n    'fantasy-land/reduce':    Just$prototype$reduce,\n    'fantasy-land/traverse':  Just$prototype$traverse,\n    'fantasy-land/extend':    Just$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    Nothing$prototype[custom] = Nothing$prototype$show;\n    Just$prototype[custom] = Just$prototype$show;\n  } else {\n    Nothing$prototype.inspect = Nothing$prototype$show;\n    Just$prototype.inspect = Just$prototype$show;\n  }\n\n  //. `Maybe a` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Just (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Nothing)        ? '\\u2705 * ' :\n  //. .              /* otherwise */              '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ satisfies Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ satisfies Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Monoid          ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ✅   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ❌   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ✅   ',\n  //. . 'Alternative     ✅   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Maybe.Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > Nothing\n  //. Nothing\n  //. ```\n  var Nothing = Maybe.Nothing = Object.create (Nothing$prototype);\n\n  //# Maybe.Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Just (42)\n  //. Just (42)\n  //. ```\n  var Just = Maybe.Just = function(value) {\n    var just = Object.create (Just$prototype);\n    if (Z.Setoid.test (value)) {\n      just['fantasy-land/equals'] = Just$prototype$equals;\n      if (Z.Ord.test (value)) {\n        just['fantasy-land/lte'] = Just$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      just['fantasy-land/concat'] = Just$prototype$concat;\n    }\n    just.value = value;\n    return just;\n  };\n\n  //# Maybe.@@type :: String\n  //.\n  //. Maybe [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Just (42))\n  //. 'sanctuary-maybe/Maybe@1'\n  //.\n  //. > type.parse (type (Just (42)))\n  //. {namespace: 'sanctuary-maybe', name: 'Maybe', version: 1}\n  //. ```\n  Maybe['@@type'] = 'sanctuary-maybe/Maybe@1';\n\n  //# Maybe.fantasy-land/empty :: () -> Maybe a\n  //.\n  //.   - `empty (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.empty (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/empty'] = function() { return Nothing; };\n\n  //# Maybe.fantasy-land/of :: a -> Maybe a\n  //.\n  //.   - `of (Maybe) (x)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Maybe) (42)\n  //. Just (42)\n  //. ```\n  Maybe['fantasy-land/of'] = Just;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Maybe.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Maybe c, a) -> Maybe b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Nothing\n  //.\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Just (65536)\n  //. ```\n  Maybe['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var maybe = f (next, done, r.value);\n      if (maybe.isNothing) return maybe;\n      r = maybe.value;\n    }\n    return Just (r.value);\n  };\n\n  //# Maybe.fantasy-land/zero :: () -> Maybe a\n  //.\n  //.   - `zero (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.zero (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/zero'] = function() { return Nothing; };\n\n  //# Maybe#@@show :: Showable a => Maybe a ~> () -> String\n  //.\n  //.   - `show (Nothing)` is equivalent to `'Nothing'`\n  //.   - `show (Just (x))` is equivalent to `'Just (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Nothing)\n  //. 'Nothing'\n  //.\n  //. > show (Just (['foo', 'bar', 'baz']))\n  //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n  //. ```\n  function Nothing$prototype$show() {\n    return 'Nothing';\n  }\n  function Just$prototype$show() {\n    return 'Just (' + show (this.value) + ')';\n  }\n\n  //# Maybe#fantasy-land/equals :: Setoid a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is equal to `Nothing`\n  //.   - `Just (x)` is equal to `Just (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Nothing` is never equal to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.equals (Nothing) (Nothing)\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([3, 2, 1]))\n  //. false\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Nothing)\n  //. false\n  //. ```\n  function Nothing$prototype$equals(other) {\n    return other.isNothing;\n  }\n  function Just$prototype$equals(other) {\n    return other.isJust && Z.equals (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/lte :: Ord a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is (less than or) equal to `Nothing`\n  //.   - `Just (x)` is less than or equal to `Just (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Nothing` is always less than `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Nothing)) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing]\n  //.\n  //. > S.filter (S.lte (Just (1))) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing, Just (0), Just (1)]\n  //. ```\n  function Nothing$prototype$lte(other) {\n    return true;\n  }\n  function Just$prototype$lte(other) {\n    return other.isJust && Z.lte (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/concat :: Semigroup a => Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `concat (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `concat (Just (x)) (Just (y))` is equivalent to\n  //.     `Just (concat (x) (y))`\n  //.   - `concat (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `concat (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Nothing) (Just ([1, 2, 3]))\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Nothing)\n  //. Just ([1, 2, 3])\n  //. ```\n  function Nothing$prototype$concat(other) {\n    return other;\n  }\n  function Just$prototype$concat(other) {\n    return other.isJust ? Just (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Maybe#fantasy-land/filter :: Maybe a ~> (a -> Boolean) -> Maybe a\n  //.\n  //.   - `filter (p) (Nothing)` is equivalent to `Nothing`\n  //.   - `filter (p) (Just (x))` is equivalent to `p (x) ? Just (x) : Nothing`\n  //.\n  //. ```javascript\n  //. > S.filter (isFinite) (Nothing)\n  //. Nothing\n  //.\n  //. > S.filter (isFinite) (Just (Infinity))\n  //. Nothing\n  //.\n  //. > S.filter (isFinite) (Just (Number.MAX_SAFE_INTEGER))\n  //. Just (9007199254740991)\n  //. ```\n  function Nothing$prototype$filter(pred) {\n    return this;\n  }\n  function Just$prototype$filter(pred) {\n    return pred (this.value) ? this : Nothing;\n  }\n\n  //# Maybe#fantasy-land/map :: Maybe a ~> (a -> b) -> Maybe b\n  //.\n  //.   - `map (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `map (f) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Nothing)\n  //. Nothing\n  //.\n  //. > S.map (Math.sqrt) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$map(f) {\n    return this;\n  }\n  function Just$prototype$map(f) {\n    return Just (f (this.value));\n  }\n\n  //# Maybe#fantasy-land/ap :: Maybe a ~> Maybe (a -> b) -> Maybe b\n  //.\n  //.   - `ap (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Nothing) (Just (x))` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Nothing) (Just (9))\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$ap(other) {\n    return this;\n  }\n  function Just$prototype$ap(other) {\n    return other.isJust ? Just (other.value (this.value)) : other;\n  }\n\n  //# Maybe#fantasy-land/chain :: Maybe a ~> (a -> Maybe b) -> Maybe b\n  //.\n  //.   - `chain (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `chain (f) (Just (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const head = xs => xs.length === 0 ? Nothing : Just (xs[0])\n  //.\n  //. > S.chain (head) (Nothing)\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just ([]))\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just (['foo', 'bar', 'baz']))\n  //. Just ('foo')\n  //. ```\n  function Nothing$prototype$chain(f) {\n    return this;\n  }\n  function Just$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Maybe#fantasy-land/alt :: Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `alt (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `alt (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Just (y))` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.alt (Nothing) (Just (1))\n  //. Just (1)\n  //.\n  //. > S.alt (Just (2)) (Nothing)\n  //. Just (2)\n  //.\n  //. > S.alt (Just (3)) (Just (4))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$alt(other) {\n    return other;\n  }\n  function Just$prototype$alt(other) {\n    return this;\n  }\n\n  //# Maybe#fantasy-land/reduce :: Maybe a ~> ((b, a) -> b, b) -> b\n  //.\n  //.   - `reduce (f) (x) (Nothing)` is equivalent to `x`\n  //.   - `reduce (f) (x) (Just (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ('abc') (Nothing)\n  //. 'abc'\n  //.\n  //. > S.reduce (S.concat) ('abc') (Just ('xyz'))\n  //. 'abcxyz'\n  //. ```\n  function Nothing$prototype$reduce(f, x) {\n    return x;\n  }\n  function Just$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Maybe#fantasy-land/traverse :: Applicative f => Maybe a ~> (TypeRep f, a -> f b) -> f (Maybe b)\n  //.\n  //.   - `traverse (A) (f) (Nothing)` is equivalent to `of (A) (Nothing)`\n  //.   - `traverse (A) (f) (Just (x))` is equivalent to `map (Just) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (Array) (S.words) (Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //. ```\n  function Nothing$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Just$prototype$traverse(typeRep, f) {\n    return Z.map (Just, f (this.value));\n  }\n\n  //# Maybe#fantasy-land/extend :: Maybe a ~> (Maybe a -> b) -> Maybe b\n  //.\n  //.   - `extend (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `extend (f) (Just (x))` is equivalent to `Just (f (Just (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Just (99))\n  //. Just (100)\n  //. ```\n  function Nothing$prototype$extend(f) {\n    return this;\n  }\n  function Just$prototype$extend(f) {\n    return Just (f (this));\n  }\n\n  return Maybe;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","       /*                   *\\\n      //                     \\\\\n     //   @@  @@     @@  @@   \\\\\n    //      @@       @@  @@    \\\\\n    \\\\      @@       @@  @@    //\n     \\\\   @@  @@  @    @@ @   //\n      \\\\          /       @  //\n       \\*             @@@@  */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-pair\n//.\n//. Pair is the canonical product type: a value of type `Pair a b` always\n//. contains exactly two values: one of type `a`; one of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryPair = f (util,\n                            self.sanctuaryShow,\n                            self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var PairType = $.BinaryType\n        ('sanctuary-pair/Pair')\n        ('')\n        (function(x) { return type (x) === Pair['@@type']; })\n        (function(p) { return [p.fst]; })\n        (function(p) { return [p.snd]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, PairType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Pair,\n    '@@show':                 Pair$prototype$show,\n    'fantasy-land/compose':   Pair$prototype$compose,\n    'fantasy-land/map':       Pair$prototype$map,\n    'fantasy-land/bimap':     Pair$prototype$bimap,\n    'fantasy-land/reduce':    Pair$prototype$reduce,\n    'fantasy-land/traverse':  Pair$prototype$traverse,\n    'fantasy-land/extend':    Pair$prototype$extend,\n    'fantasy-land/extract':   Pair$prototype$extract\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    prototype[custom] = Pair$prototype$show;\n  } else {\n    prototype.inspect = Pair$prototype$show;\n  }\n\n  /* istanbul ignore else */\n  if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n    prototype[Symbol.iterator] = function() {\n      return [this.fst, this.snd][Symbol.iterator] ();\n    };\n  }\n\n  //. `Pair a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Pair (Useless) (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Pair (['foo']) (['bar'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */                        '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ✅   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Applicative     ❌   ',\n  //. . 'Chain           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'ChainRec        ❌   ',\n  //. . 'Monad           ❌   ',\n  //. . 'Alt             ❌   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ✅   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > Pair (1) (2)\n  //. Pair (1) (2)\n  //. ```\n  function Pair(fst) {\n    return function(snd) {\n      var pair = Object.create (prototype);\n      if (Z.Setoid.test (fst) && Z.Setoid.test (snd)) {\n        pair['fantasy-land/equals'] = Pair$prototype$equals;\n        if (Z.Ord.test (fst) && Z.Ord.test (snd)) {\n          pair['fantasy-land/lte'] = Pair$prototype$lte;\n        }\n      }\n      if (Z.Semigroup.test (fst)) {\n        if (Z.Semigroup.test (snd)) {\n          pair['fantasy-land/concat'] = Pair$prototype$concat;\n        }\n        pair['fantasy-land/ap'] = Pair$prototype$ap;\n        pair['fantasy-land/chain'] = Pair$prototype$chain;\n      }\n      pair.fst = fst;\n      pair.snd = snd;\n      return pair;\n    };\n  }\n\n  //# Pair.fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > Pair.fst (Pair ('abc') ([1, 2, 3]))\n  //. 'abc'\n  //. ```\n  Pair.fst = function(p) { return p.fst; };\n\n  //# Pair.snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > Pair.snd (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  Pair.snd = function(p) { return p.snd; };\n\n  //# Pair.swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > Pair.swap (Pair ('abc') ([1, 2, 3]))\n  //. Pair ([1, 2, 3]) ('abc')\n  //. ```\n  Pair.swap = function(p) { return Pair (p.snd) (p.fst); };\n\n  //# Pair.@@type :: String\n  //.\n  //. Pair [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Pair ('abc') ([1, 2, 3]))\n  //. 'sanctuary-pair/Pair@1'\n  //.\n  //. > type.parse (type (Pair ('abc') ([1, 2, 3])))\n  //. {namespace: 'sanctuary-pair', name: 'Pair', version: 1}\n  //. ```\n  Pair['@@type'] = 'sanctuary-pair/Pair@1';\n\n  //# Pair#@@show :: (Showable a, Showable b) => Pair a b ~> () -> String\n  //.\n  //. `show (Pair (x) (y))` is equivalent to\n  //. `'Pair (' + show (x) + ') (' + show (y) + ')'`.\n  //.\n  //. ```javascript\n  //. > show (Pair ('abc') ([1, 2, 3]))\n  //. 'Pair (\"abc\") ([1, 2, 3])'\n  //. ```\n  function Pair$prototype$show() {\n    return 'Pair (' + show (this.fst) + ') (' + show (this.snd) + ')';\n  }\n\n  //# Pair#fantasy-land/equals :: (Setoid a, Setoid b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is equal to `Pair (v) (w)` [iff][] `x` is equal to `v`\n  //. and `y` is equal to `w` according to [`Z.equals`][].\n  //.\n  //. ```javascript\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([3, 2, 1]))\n  //. false\n  //. ```\n  function Pair$prototype$equals(other) {\n    return Z.equals (this.fst, other.fst) && Z.equals (this.snd, other.snd);\n  }\n\n  //# Pair#fantasy-land/lte :: (Ord a, Ord b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is less than or equal to `Pair (v) (w)` [iff][] `x` is\n  //. less than `v` or `x` is equal to `v` and `y` is less than or equal to\n  //. `w` according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Pair ('b') (2)))\n  //. .          ([Pair ('a') (1), Pair ('a') (2), Pair ('a') (3),\n  //. .            Pair ('b') (1), Pair ('b') (2), Pair ('b') (3),\n  //. .            Pair ('c') (1), Pair ('c') (2), Pair ('c') (3)])\n  //. [ Pair ('a') (1),\n  //. . Pair ('a') (2),\n  //. . Pair ('a') (3),\n  //. . Pair ('b') (1),\n  //. . Pair ('b') (2) ]\n  //. ```\n  function Pair$prototype$lte(other) {\n    return Z.equals (this.fst, other.fst) ? Z.lte (this.snd, other.snd)\n                                          : Z.lte (this.fst, other.fst);\n  }\n\n  //# Pair#fantasy-land/compose :: Pair a b ~> Pair b c -> Pair a c\n  //.\n  //. `compose (Pair (x) (y)) (Pair (v) (w))` is equivalent to `Pair (v) (y)`.\n  //.\n  //. ```javascript\n  //. > S.compose (Pair ('a') (0)) (Pair ([1, 2, 3]) ('b'))\n  //. Pair ([1, 2, 3]) (0)\n  //. ```\n  function Pair$prototype$compose(other) {\n    return Pair (this.fst) (other.snd);\n  }\n\n  //# Pair#fantasy-land/concat :: (Semigroup a, Semigroup b) => Pair a b ~> Pair a b -> Pair a b\n  //.\n  //. `concat (Pair (x) (y)) (Pair (v) (w))` is equivalent to\n  //. `Pair (concat (x) (v)) (concat (y) (w))`.\n  //.\n  //. ```javascript\n  //. > S.concat (Pair ('abc') ([1, 2, 3])) (Pair ('xyz') ([4, 5, 6]))\n  //. Pair ('abcxyz') ([1, 2, 3, 4, 5, 6])\n  //. ```\n  function Pair$prototype$concat(other) {\n    return Pair (Z.concat (this.fst, other.fst))\n                (Z.concat (this.snd, other.snd));\n  }\n\n  //# Pair#fantasy-land/map :: Pair a b ~> (b -> c) -> Pair a c\n  //.\n  //. `map (f) (Pair (x) (y))` is equivalent to `Pair (x) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('abc') (16)\n  //. ```\n  function Pair$prototype$map(f) {\n    return Pair (this.fst) (f (this.snd));\n  }\n\n  //# Pair#fantasy-land/bimap :: Pair a c ~> (a -> b, c -> d) -> Pair b d\n  //.\n  //. `bimap (f) (g) (Pair (x) (y))` is equivalent to `Pair (f (x)) (g (y))`.\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('ABC') (16)\n  //. ```\n  function Pair$prototype$bimap(f, g) {\n    return Pair (f (this.fst)) (g (this.snd));\n  }\n\n  //# Pair#fantasy-land/ap :: Semigroup a => Pair a b ~> Pair a (b -> c) -> Pair a c\n  //.\n  //. `ap (Pair (v) (f)) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (v) (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.ap (Pair ('abc') (Math.sqrt)) (Pair ('xyz') (256))\n  //. Pair ('abcxyz') (16)\n  //. ```\n  function Pair$prototype$ap(other) {\n    return Pair (Z.concat (other.fst, this.fst)) (other.snd (this.snd));\n  }\n\n  //# Pair#fantasy-land/chain :: Semigroup a => Pair a b ~> (b -> Pair a c) -> Pair a c\n  //.\n  //. `chain (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (x) (fst (f (y)))) (snd (f (y)))`.\n  //.\n  //. ```javascript\n  //. > S.chain (n => Pair (show (n)) (Math.sqrt (n))) (Pair ('abc') (256))\n  //. Pair ('abc256') (16)\n  //. ```\n  function Pair$prototype$chain(f) {\n    var other = f (this.snd);\n    return Pair (Z.concat (this.fst, other.fst)) (other.snd);\n  }\n\n  //# Pair#fantasy-land/reduce :: Pair a b ~> ((c, b) -> c, c) -> c\n  //.\n  //. `reduce (f) (x) (Pair (v) (w))` is equivalent to `f (x) (w)`.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1, 2, 3]) (Pair ('abc') ([4, 5, 6]))\n  //. [1, 2, 3, 4, 5, 6]\n  //. ```\n  function Pair$prototype$reduce(f, x) {\n    return f (x, this.snd);\n  }\n\n  //# Pair#fantasy-land/traverse :: Applicative f => Pair a b ~> (TypeRep f, b -> f c) -> f (Pair a c)\n  //.\n  //. `traverse (_) (f) (Pair (x) (y))` is equivalent to\n  //. `map (Pair (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Pair (123) ('foo bar baz'))\n  //. [Pair (123) ('foo'), Pair (123) ('bar'), Pair (123) ('baz')]\n  //. ```\n  function Pair$prototype$traverse(typeRep, f) {\n    return Z.map (Pair (this.fst), f (this.snd));\n  }\n\n  //# Pair#fantasy-land/extend :: Pair a b ~> (Pair a b -> c) -> Pair a c\n  //.\n  //. `extend (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (x) (f (Pair (x) (y)))`.\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Pair ('abc') (99))\n  //. Pair ('abc') (100)\n  //. ```\n  function Pair$prototype$extend(f) {\n    return Pair (this.fst) (f (this));\n  }\n\n  //# Pair#fantasy-land/extract :: Pair a b ~> () -> b\n  //.\n  //. `extract (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.extract (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  function Pair$prototype$extract() {\n    return this.snd;\n  }\n\n  return Pair;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*    #######\n   ####     ####\n ####   ###   ####\n#####   ###########   sanctuary\n########   ########   noun\n###########   #####   1 [ mass noun ] refuge from unsafe JavaScript\n ####   ###   ####\n   ####     ####\n      #######    */\n\n//. # Sanctuary\n//.\n//. [![npm](https://img.shields.io/npm/v/sanctuary.svg)](https://www.npmjs.com/package/sanctuary)\n//. [![CircleCI](https://img.shields.io/circleci/project/github/sanctuary-js/sanctuary/master.svg)](https://circleci.com/gh/sanctuary-js/sanctuary/tree/master)\n//. [![Gitter](https://img.shields.io/gitter/room/badges/shields.svg)](https://gitter.im/sanctuary-js/sanctuary)\n//.\n//. Sanctuary is a JavaScript functional programming library inspired by\n//. [Haskell][] and [PureScript][]. It's stricter than [Ramda][], and\n//. provides a similar suite of functions.\n//.\n//. Sanctuary promotes programs composed of simple, pure functions. Such\n//. programs are easier to comprehend, test, and maintain &ndash; they are\n//. also a pleasure to write.\n//.\n//. Sanctuary provides two data types, [Maybe][] and [Either][], both of\n//. which are compatible with [Fantasy Land][]. Thanks to these data types\n//. even Sanctuary functions that may fail, such as [`head`](#head), are\n//. composable.\n//.\n//. Sanctuary makes it possible to write safe code without null checks.\n//. In JavaScript it's trivial to introduce a possible run-time type error:\n//.\n//.     words[0].toUpperCase()\n//.\n//. If `words` is `[]` we'll get a familiar error at run-time:\n//.\n//.     TypeError: Cannot read property 'toUpperCase' of undefined\n//.\n//. Sanctuary gives us a fighting chance of avoiding such errors. We might\n//. write:\n//.\n//.     S.map (S.toUpper) (S.head (words))\n//.\n//. Sanctuary is designed to work in Node.js and in ES5-compatible browsers.\n//.\n//. ## Folktale\n//.\n//. [Folktale][], like Sanctuary, is a standard library for functional\n//. programming in JavaScript. It is well designed and well documented.\n//. Whereas Sanctuary treats JavaScript as a member of the ML language\n//. family, Folktale embraces JavaScript's object-oriented programming\n//. model. Programming with Folktale resembles programming with Scala.\n//.\n//. ## Ramda\n//.\n//. [Ramda][] provides several functions that return problematic values\n//. such as `undefined`, `Infinity`, or `NaN` when applied to unsuitable\n//. inputs. These are known as [partial functions][]. Partial functions\n//. necessitate the use of guards or null checks. In order to safely use\n//. `R.head`, for example, one must ensure that the array is non-empty:\n//.\n//.     if (R.isEmpty (xs)) {\n//.       // ...\n//.     } else {\n//.       return f (R.head (xs));\n//.     }\n//.\n//. Using the Maybe type renders such guards (and null checks) unnecessary.\n//. Changing functions such as `R.head` to return Maybe values was proposed\n//. in [ramda/ramda#683][], but was considered too much of a stretch for\n//. JavaScript programmers. Sanctuary was released the following month,\n//. in January 2015, as a companion library to Ramda.\n//.\n//. In addition to broadening in scope in the years since its release,\n//. Sanctuary's philosophy has diverged from Ramda's in several respects.\n//.\n//. ### Totality\n//.\n//. Every Sanctuary function is defined for every value that is a member of\n//. the function's input type. Such functions are known as [total functions][].\n//. Ramda, on the other hand, contains a number of [partial functions][].\n//.\n//. ### Information preservation\n//.\n//. Certain Sanctuary functions preserve more information than their Ramda\n//. counterparts. Examples:\n//.\n//.     |> R.tail ([])                      |> S.tail ([])\n//.     []                                  Nothing\n//.\n//.     |> R.tail (['foo'])                 |> S.tail (['foo'])\n//.     []                                  Just ([])\n//.\n//.     |> R.replace (/^x/) ('') ('abc')    |> S.stripPrefix ('x') ('abc')\n//.     'abc'                               Nothing\n//.\n//.     |> R.replace (/^x/) ('') ('xabc')   |> S.stripPrefix ('x') ('xabc')\n//.     'abc'                               Just ('abc')\n//.\n//. ### Invariants\n//.\n//. Sanctuary performs rigorous [type checking][] of inputs and outputs, and\n//. throws a descriptive error if a type error is encountered. This allows bugs\n//. to be caught and fixed early in the development cycle.\n//.\n//. Ramda operates on the [garbage in, garbage out][GIGO] principle. Functions\n//. are documented to take arguments of particular types, but these invariants\n//. are not enforced. The problem with this approach in a language as\n//. permissive as JavaScript is that there's no guarantee that garbage input\n//. will produce garbage output ([ramda/ramda#1413][]). Ramda performs ad hoc\n//. type checking in some such cases ([ramda/ramda#1419][]).\n//.\n//. Sanctuary can be configured to operate in garbage in, garbage out mode.\n//. Ramda cannot be configured to enforce its invariants.\n//.\n//. ### Currying\n//.\n//. Sanctuary functions are curried. There is, for example, exactly one way to\n//. apply `S.reduce` to `S.add`, `0`, and `xs`:\n//.\n//.   - `S.reduce (S.add) (0) (xs)`\n//.\n//. Ramda functions are also curried, but in a complex manner. There are four\n//. ways to apply `R.reduce` to `R.add`, `0`, and `xs`:\n//.\n//.   - `R.reduce (R.add) (0) (xs)`\n//.   - `R.reduce (R.add) (0, xs)`\n//.   - `R.reduce (R.add, 0) (xs)`\n//.   - `R.reduce (R.add, 0, xs)`\n//.\n//. Ramda supports all these forms because curried functions enable partial\n//. application, one of the library's tenets, but `f(x)(y)(z)` is considered\n//. too unfamiliar and too unattractive to appeal to JavaScript programmers.\n//.\n//. Sanctuary's developers prefer a simple, unfamiliar construct to a complex,\n//. familiar one. Familiarity can be acquired; complexity is intrinsic.\n//.\n//. The lack of breathing room in `f(x)(y)(z)` impairs readability. The simple\n//. solution to this problem, proposed in [#438][], is to include a space when\n//. applying a function: `f (x) (y) (z)`.\n//.\n//. Ramda also provides a special placeholder value, [`R.__`][], that removes\n//. the restriction that a function must be applied to its arguments in order.\n//. The following expressions are equivalent:\n//.\n//.   - `R.reduce (R.__, 0, xs) (R.add)`\n//.   - `R.reduce (R.add, R.__, xs) (0)`\n//.   - `R.reduce (R.__, 0) (R.add) (xs)`\n//.   - `R.reduce (R.__, 0) (R.add, xs)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add) (0)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add, 0)`\n//.\n//. ### Variadic functions\n//.\n//. Ramda provides several functions that take any number of arguments. These\n//. are known as [variadic functions][]. Additionally, Ramda provides several\n//. functions that take variadic functions as arguments. Although natural in\n//. a dynamically typed language, variadic functions are at odds with the type\n//. notation Ramda and Sanctuary both use, leading to some indecipherable type\n//. signatures such as this one:\n//.\n//.     R.lift :: (*... -> *...) -> ([*]... -> [*])\n//.\n//. Sanctuary has no variadic functions, nor any functions that take variadic\n//. functions as arguments. Sanctuary provides two \"lift\" functions, each with\n//. a helpful type signature:\n//.\n//.     S.lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n//.     S.lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n//.\n//. ### Implicit context\n//.\n//. Ramda provides [`R.bind`][] and [`R.invoker`][] for working with methods.\n//. Additionally, many Ramda functions use `Function#call` or `Function#apply`\n//. to preserve context. Sanctuary makes no allowances for `this`.\n//.\n//. ### Transducers\n//.\n//. Several Ramda functions act as transducers. Sanctuary provides no support\n//. for transducers.\n//.\n//. ### Modularity\n//.\n//. Whereas Ramda has no dependencies, Sanctuary has a modular design:\n//. [sanctuary-def][] provides type checking, [sanctuary-type-classes][]\n//. provides Fantasy Land functions and type classes, [sanctuary-show][]\n//. provides string representations, and algebraic data types are provided\n//. by [sanctuary-either][], [sanctuary-maybe][], and [sanctuary-pair][].\n//. Not only does this approach reduce the complexity of Sanctuary itself,\n//. but it allows these components to be reused in other contexts.\n//.\n//. ## Types\n//.\n//. Sanctuary uses Haskell-like type signatures to describe the types of\n//. values, including functions. `'foo'`, for example, is a member of `String`;\n//. `[1, 2, 3]` is a member of `Array Number`. The double colon (`::`) is used\n//. to mean \"is a member of\", so one could write:\n//.\n//.     'foo' :: String\n//.     [1, 2, 3] :: Array Number\n//.\n//. An identifier may appear to the left of the double colon:\n//.\n//.     Math.PI :: Number\n//.\n//. The arrow (`->`) is used to express a function's type:\n//.\n//.     Math.abs :: Number -> Number\n//.\n//. That states that `Math.abs` is a unary function that takes an argument\n//. of type `Number` and returns a value of type `Number`.\n//.\n//. Some functions are parametrically polymorphic: their types are not fixed.\n//. Type variables are used in the representations of such functions:\n//.\n//.     S.I :: a -> a\n//.\n//. `a` is a type variable. Type variables are not capitalized, so they\n//. are differentiable from type identifiers (which are always capitalized).\n//. By convention type variables have single-character names. The signature\n//. above states that `S.I` takes a value of any type and returns a value of\n//. the same type. Some signatures feature multiple type variables:\n//.\n//.     S.K :: a -> b -> a\n//.\n//. It must be possible to replace all occurrences of `a` with a concrete type.\n//. The same applies for each other type variable. For the function above, the\n//. types with which `a` and `b` are replaced may be different, but needn't be.\n//.\n//. Since all Sanctuary functions are curried (they accept their arguments\n//. one at a time), a binary function is represented as a unary function that\n//. returns a unary function: `* -> * -> *`. This aligns neatly with Haskell,\n//. which uses curried functions exclusively. In JavaScript, though, we may\n//. wish to represent the types of functions with arities less than or greater\n//. than one. The general form is `(<input-types>) -> <output-type>`, where\n//. `<input-types>` comprises zero or more comma–space (<code>, </code>)\n//. -separated type representations:\n//.\n//.   - `() -> String`\n//.   - `(a, b) -> a`\n//.   - `(a, b, c) -> d`\n//.\n//. `Number -> Number` can thus be seen as shorthand for `(Number) -> Number`.\n//.\n//. Sanctuary embraces types. JavaScript doesn't support algebraic data types,\n//. but these can be simulated by providing a group of data constructors that\n//. return values with the same set of methods. A value of the Either type, for\n//. example, is created via the Left constructor or the Right constructor.\n//.\n//. It's necessary to extend Haskell's notation to describe implicit arguments\n//. to the *methods* provided by Sanctuary's types. In `x.map(y)`, for example,\n//. the `map` method takes an implicit argument `x` in addition to the explicit\n//. argument `y`. The type of the value upon which a method is invoked appears\n//. at the beginning of the signature, separated from the arguments and return\n//. value by a squiggly arrow (`~>`). The type of the `fantasy-land/map` method\n//. of the Maybe type is written `Maybe a ~> (a -> b) -> Maybe b`. One could\n//. read this as:\n//.\n//. _When the `fantasy-land/map` method is invoked on a value of type `Maybe a`\n//. (for any type `a`) with an argument of type `a -> b` (for any type `b`),\n//. it returns a value of type `Maybe b`._\n//.\n//. The squiggly arrow is also used when representing non-function properties.\n//. `Maybe a ~> Boolean`, for example, represents a Boolean property of a value\n//. of type `Maybe a`.\n//.\n//. Sanctuary supports type classes: constraints on type variables. Whereas\n//. `a -> a` implicitly supports every type, `Functor f => (a -> b) -> f a ->\n//. f b` requires that `f` be a type that satisfies the requirements of the\n//. Functor type class. Type-class constraints appear at the beginning of a\n//. type signature, separated from the rest of the signature by a fat arrow\n//. (`=>`).\n//.\n//. ## Type checking\n//.\n//. Sanctuary functions are defined via [sanctuary-def][] to provide run-time\n//. type checking. This is tremendously useful during development: type errors\n//. are reported immediately, avoiding circuitous stack traces (at best) and\n//. silent failures due to type coercion (at worst). For example:\n//.\n//. ```javascript\n//. S.add (2) (true);\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n//. //                          ^^^^^^^^^^^^\n//. //                               1\n//. //\n//. //   1)  true :: Boolean\n//. //\n//. //   The value at position 1 is not a member of ‘FiniteNumber’.\n//. //\n//. //   See v:sanctuary-js/sanctuary-def#FiniteNumber for information about the FiniteNumber type.\n//. ```\n//.\n//. Compare this to the behaviour of Ramda's unchecked equivalent:\n//.\n//. ```javascript\n//. R.add (2) (true);\n//. // => 3\n//. ```\n//.\n//. There is a performance cost to run-time type checking. Type checking is\n//. disabled by default if `process.env.NODE_ENV` is `'production'`. If this\n//. rule is unsuitable for a given program, one may use [`create`](#create)\n//. to create a Sanctuary module based on a different rule. For example:\n//.\n//. ```javascript\n//. const S = sanctuary.create ({\n//.   checkTypes: localStorage.getItem ('SANCTUARY_CHECK_TYPES') === 'true',\n//.   env: sanctuary.env,\n//. });\n//. ```\n//.\n//. Occasionally one may wish to perform an operation that is not type safe,\n//. such as mapping over an object with heterogeneous values. This is possible\n//. via selective use of [`unchecked`](#unchecked) functions.\n//.\n//. ## Installation\n//.\n//. `npm install sanctuary` will install Sanctuary for use in Node.js.\n//.\n//. Running Sanctuary in the browser is more involved. One must include a\n//. `<script>` for each dependency in addition to one for Sanctuary itself:\n//.\n//. ```html\n//. <script src=\"vendor/sanctuary-show.js\"></script>\n//. <script src=\"vendor/sanctuary-type-identifiers.js\"></script>\n//. <script src=\"vendor/sanctuary-type-classes.js\"></script>\n//. <script src=\"vendor/sanctuary-either.js\"></script>\n//. <script src=\"vendor/sanctuary-maybe.js\"></script>\n//. <script src=\"vendor/sanctuary-pair.js\"></script>\n//. <script src=\"vendor/sanctuary-def.js\"></script>\n//. <script src=\"vendor/sanctuary.js\"></script>\n//. ```\n//.\n//. To ensure compatibility one should use the dependency versions specified\n//. in __package.json__.\n//.\n//. For convenience one could define aliases for various modules:\n//.\n//. ```javascript\n//. const S = window.sanctuary;\n//. const $ = window.sanctuaryDef;\n//. // ...\n//. ```\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-def'),\n                        require ('sanctuary-either'),\n                        require ('sanctuary-maybe'),\n                        require ('sanctuary-pair'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-def',\n             'sanctuary-either',\n             'sanctuary-maybe',\n             'sanctuary-pair',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            f);\n  } else {\n    self.sanctuary = f (self.sanctuaryDef,\n                        self.sanctuaryEither,\n                        self.sanctuaryMaybe,\n                        self.sanctuaryPair,\n                        self.sanctuaryShow,\n                        self.sanctuaryTypeClasses,\n                        self.sanctuaryTypeIdentifiers);\n  }\n\n} (function($, Either, Maybe, Pair, show, Z, type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Descending = __doctest.require ('sanctuary-descending');\n    var Nil = (__doctest.require ('./test/internal/List')).Nil;\n    var Cons = (__doctest.require ('./test/internal/List')).Cons;\n    var Sum = __doctest.require ('./test/internal/Sum');\n    var S = (function(S) {\n      var S_ = S.create ({\n        checkTypes: true,\n        env: S.env.concat ([\n          (__doctest.require ('./test/internal/List')).Type ($.Unknown),\n          Sum.Type\n        ])\n      });\n      S_.env = S.env;  // see S.env doctest\n      return S_;\n    } (require ('.')));\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  Nothing :: Maybe a\n  var Nothing = Maybe.Nothing;\n\n  //  Just :: a -> Maybe a\n  var Just = Maybe.Just;\n\n  //  B :: (b -> c) -> (a -> b) -> a -> c\n  function B(f) {\n    return function(g) {\n      return function(x) {\n        return f (g (x));\n      };\n    };\n  }\n\n  //  C :: (a -> b -> c) -> b -> a -> c\n  function C(f) {\n    return function(y) {\n      return function(x) {\n        return f (x) (y);\n      };\n    };\n  }\n\n  //  get_ :: String -> a -> Maybe b\n  function get_(key) {\n    return B (function(obj) { return key in obj ? Just (obj[key]) : Nothing; })\n             (toObject);\n  }\n\n  //  invoke0 :: String -> a -> b\n  function invoke0(name) {\n    return function(target) {\n      return target[name] ();\n    };\n  }\n\n  //  invoke1 :: String -> a -> b -> c\n  function invoke1(name) {\n    return function(x) {\n      return function(target) {\n        return target[name] (x);\n      };\n    };\n  }\n\n  //  toObject :: a -> Object\n  function toObject(x) {\n    return x == null ? Object.create (null) : Object (x);\n  }\n\n  //  :: Type\n  var a = $.TypeVariable ('a');\n  var b = $.TypeVariable ('b');\n  var c = $.TypeVariable ('c');\n  var d = $.TypeVariable ('d');\n  var e = $.TypeVariable ('e');\n  var g = $.TypeVariable ('g');\n  var r = $.TypeVariable ('r');\n\n  //  :: Type -> Type\n  var f = $.UnaryTypeVariable ('f');\n  var m = $.UnaryTypeVariable ('m');\n  var t = $.UnaryTypeVariable ('t');\n  var w = $.UnaryTypeVariable ('w');\n\n  //  :: Type -> Type -> Type\n  var p = $.BinaryTypeVariable ('p');\n  var s = $.BinaryTypeVariable ('s');\n\n  //  TypeRep :: Type -> Type\n  var TypeRep = $.UnaryType\n    ('TypeRep')\n    ('https://github.com/fantasyland/fantasy-land#type-representatives')\n    ([])\n    (function(x) {\n       return $.test ([]) ($.AnyFunction) (x) ||\n              x != null && $.test ([]) ($.String) (x['@@type']);\n     })\n    (K ([]));\n\n  //  Options :: Type\n  var Options = $.RecordType ({checkTypes: $.Boolean, env: $.Array ($.Any)});\n\n  var _ = {};\n\n  //. ### Configure\n\n  //# create :: { checkTypes :: Boolean, env :: Array Type } -> Module\n  //.\n  //. Takes an options record and returns a Sanctuary module. `checkTypes`\n  //. specifies whether to enable type checking. The module's polymorphic\n  //. functions (such as [`I`](#I)) require each value associated with a\n  //. type variable to be a member of at least one type in the environment.\n  //.\n  //. A well-typed application of a Sanctuary function will produce the same\n  //. result regardless of whether type checking is enabled. If type checking\n  //. is enabled, a badly typed application will produce an exception with a\n  //. descriptive error message.\n  //.\n  //. The following snippet demonstrates defining a custom type and using\n  //. `create` to produce a Sanctuary module that is aware of that type:\n  //.\n  //. ```javascript\n  //. const {create, env} = require ('sanctuary');\n  //. const $ = require ('sanctuary-def');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    Identity :: a -> Identity a\n  //. const Identity = x => {\n  //.   const identity = Object.create (Identity$prototype);\n  //.   identity.value = x;\n  //.   return identity;\n  //. };\n  //.\n  //. Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. const Identity$prototype = {\n  //.   'constructor': Identity,\n  //.   '@@show': function() { return `Identity (${S.show (this.value)})`; },\n  //.   'fantasy-land/map': function(f) { return Identity (f (this.value)); },\n  //. };\n  //.\n  //. //    IdentityType :: Type -> Type\n  //. const IdentityType = $.UnaryType\n  //.   ('Identity')\n  //.   ('http://example.com/my-package#Identity')\n  //.   ([])\n  //.   (x => type (x) === Identity['@@type'])\n  //.   (identity => [identity.value]);\n  //.\n  //. const S = create ({\n  //.   checkTypes: process.env.NODE_ENV !== 'production',\n  //.   env: env.concat ([IdentityType ($.Unknown)]),\n  //. });\n  //.\n  //. S.map (S.sub (1)) (Identity (43));\n  //. // => Identity (42)\n  //. ```\n  //.\n  //. See also [`env`](#env).\n  function create(opts) {\n    var def = $.create (opts);\n    var S = {\n      env: opts.env,\n      is: def ('is') ({}) ([$.Type, $.Any, $.Boolean]) ($.test (opts.env)),\n      Maybe: Maybe,\n      Nothing: Nothing,\n      Either: Either\n    };\n    (Object.keys (_)).forEach (function(name) {\n      S[name] = def (name) (_[name].consts) (_[name].types) (_[name].impl);\n    });\n    S.unchecked = opts.checkTypes ? create ({checkTypes: false, env: opts.env})\n                                  : S;\n    return S;\n  }\n  _.create = {\n    consts: {},\n    types: [Options, $.Object],\n    impl: create\n  };\n\n  //# env :: Array Type\n  //.\n  //. The Sanctuary module's environment (`(S.create ({checkTypes, env})).env`\n  //. is a reference to `env`). Useful in conjunction with [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.env\n  //. [ $.AnyFunction,\n  //. . $.Arguments,\n  //. . $.Array ($.Unknown),\n  //. . $.Array2 ($.Unknown) ($.Unknown),\n  //. . $.Boolean,\n  //. . $.Date,\n  //. . $.Descending ($.Unknown),\n  //. . $.Either ($.Unknown) ($.Unknown),\n  //. . $.Error,\n  //. . $.Fn ($.Unknown) ($.Unknown),\n  //. . $.HtmlElement,\n  //. . $.Identity ($.Unknown),\n  //. . $.Maybe ($.Unknown),\n  //. . $.Null,\n  //. . $.Number,\n  //. . $.Object,\n  //. . $.Pair ($.Unknown) ($.Unknown),\n  //. . $.RegExp,\n  //. . $.StrMap ($.Unknown),\n  //. . $.String,\n  //. . $.Symbol,\n  //. . $.Type,\n  //. . $.TypeClass,\n  //. . $.Undefined ]\n  //. ```\n\n  //# unchecked :: Module\n  //.\n  //. A complete Sanctuary module that performs no type checking. This is\n  //. useful as it permits operations that Sanctuary's type checking would\n  //. disallow, such as mapping over an object with heterogeneous values.\n  //.\n  //. See also [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.unchecked.map (S.show) ({x: 'foo', y: true, z: 42})\n  //. {x: '\"foo\"', y: 'true', z: '42'}\n  //. ```\n  //.\n  //. Opting out of type checking may cause type errors to go unnoticed.\n  //.\n  //. ```javascript\n  //. > S.unchecked.add (2) ('2')\n  //. '22'\n  //. ```\n\n  //. ### Classify\n\n  //# type :: Any -> { namespace :: Maybe String, name :: String, version :: NonNegativeInteger }\n  //.\n  //. Returns the result of parsing the [type identifier][] of the given value.\n  //.\n  //. ```javascript\n  //. > S.type (S.Just (42))\n  //. {namespace: Just ('sanctuary-maybe'), name: 'Maybe', version: 1}\n  //.\n  //. > S.type ([1, 2, 3])\n  //. {namespace: Nothing, name: 'Array', version: 0}\n  //. ```\n  function type_(x) {\n    var r = type.parse (type (x));\n    r.namespace = Z.reject (equals (null), Just (r.namespace));\n    return r;\n  }\n  _.type = {\n    consts: {},\n    types: [$.Any,\n            $.RecordType ({namespace: $.Maybe ($.String),\n                           name: $.String,\n                           version: $.NonNegativeInteger})],\n    impl: type_\n  };\n\n  //# is :: Type -> Any -> Boolean\n  //.\n  //. Returns `true` [iff][] the given value is a member of the specified type.\n  //. See [`$.test`][] for details.\n  //.\n  //. ```javascript\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3])\n  //. true\n  //.\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3.14])\n  //. false\n  //. ```\n\n  //. ### Showable\n\n  //# show :: Any -> String\n  //.\n  //. Alias of [`show`][].\n  //.\n  //. ```javascript\n  //. > S.show (-0)\n  //. '-0'\n  //.\n  //. > S.show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > S.show ({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > S.show (S.Left (S.Right (S.Just (S.Nothing))))\n  //. 'Left (Right (Just (Nothing)))'\n  //. ```\n  _.show = {\n    consts: {},\n    types: [$.Any, $.String],\n    impl: show\n  };\n\n  //. ### Fantasy Land\n  //.\n  //. Sanctuary is compatible with the [Fantasy Land][] specification.\n\n  //# equals :: Setoid a => a -> a -> Boolean\n  //.\n  //. Curried version of [`Z.equals`][] that requires two arguments of the\n  //. same type.\n  //.\n  //. To compare values of different types first use [`create`](#create) to\n  //. create a Sanctuary module with type checking disabled, then use that\n  //. module's `equals` function.\n  //.\n  //. ```javascript\n  //. > S.equals (0) (-0)\n  //. true\n  //.\n  //. > S.equals (NaN) (NaN)\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 4]))\n  //. false\n  //. ```\n  function equals(x) {\n    return function(y) {\n      return Z.equals (x, y);\n    };\n  }\n  _.equals = {\n    consts: {a: [Z.Setoid]},\n    types: [a, a, $.Boolean],\n    impl: equals\n  };\n\n  //# lt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than the first\n  //. according to [`Z.lt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lt (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2]\n  //. ```\n  function lt(y) {\n    return function(x) {\n      return Z.lt (x, y);\n    };\n  }\n  _.lt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lt\n  };\n\n  //# lte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than or equal to\n  //. the first according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2, 3]\n  //. ```\n  function lte(y) {\n    return function(x) {\n      return Z.lte (x, y);\n    };\n  }\n  _.lte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lte\n  };\n\n  //# gt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than the first\n  //. according to [`Z.gt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gt (3)) ([1, 2, 3, 4, 5])\n  //. [4, 5]\n  //. ```\n  function gt(y) {\n    return function(x) {\n      return Z.gt (x, y);\n    };\n  }\n  _.gt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gt\n  };\n\n  //# gte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than or equal\n  //. to the first according to [`Z.gte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gte (3)) ([1, 2, 3, 4, 5])\n  //. [3, 4, 5]\n  //. ```\n  function gte(y) {\n    return function(x) {\n      return Z.gte (x, y);\n    };\n  }\n  _.gte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gte\n  };\n\n  //# min :: Ord a => a -> a -> a\n  //.\n  //. Returns the smaller of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.min (10) (2)\n  //. 2\n  //.\n  //. > S.min (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > S.min ('10') ('2')\n  //. '10'\n  //. ```\n  _.min = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.min)\n  };\n\n  //# max :: Ord a => a -> a -> a\n  //.\n  //. Returns the larger of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > S.max (10) (2)\n  //. 10\n  //.\n  //. > S.max (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > S.max ('10') ('2')\n  //. '2'\n  //. ```\n  _.max = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.max)\n  };\n\n  //# clamp :: Ord a => a -> a -> a -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. See also [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.clamp (0) (100) (42)\n  //. 42\n  //.\n  //. > S.clamp (0) (100) (-1)\n  //. 0\n  //.\n  //. > S.clamp ('A') ('Z') ('~')\n  //. 'Z'\n  //. ```\n  _.clamp = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a, a],\n    impl: curry3 (Z.clamp)\n  };\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.id`][].\n  //.\n  //. ```javascript\n  //. > S.id (Function) (42)\n  //. 42\n  //. ```\n  _.id = {\n    consts: {c: [Z.Category]},\n    types: [TypeRep (c), c],\n    impl: Z.id\n  };\n\n  //# concat :: Semigroup a => a -> a -> a\n  //.\n  //. Curried version of [`Z.concat`][].\n  //.\n  //. ```javascript\n  //. > S.concat ('abc') ('def')\n  //. 'abcdef'\n  //.\n  //. > S.concat ([1, 2, 3]) ([4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > S.concat ({x: 1, y: 2}) ({y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > S.concat (S.Just ([1, 2, 3])) (S.Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Sum (18)) (Sum (24))\n  //. Sum (42)\n  //. ```\n  _.concat = {\n    consts: {a: [Z.Semigroup]},\n    types: [a, a, a],\n    impl: curry2 (Z.concat)\n  };\n\n  //# empty :: Monoid a => TypeRep a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.empty`][].\n  //.\n  //. ```javascript\n  //. > S.empty (String)\n  //. ''\n  //.\n  //. > S.empty (Array)\n  //. []\n  //.\n  //. > S.empty (Object)\n  //. {}\n  //.\n  //. > S.empty (Sum)\n  //. Sum (0)\n  //. ```\n  _.empty = {\n    consts: {a: [Z.Monoid]},\n    types: [TypeRep (a), a],\n    impl: Z.empty\n  };\n\n  //# invert :: Group g => g -> g\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.invert`][].\n  //.\n  //. ```javascript\n  //. > S.invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  _.invert = {\n    consts: {g: [Z.Group]},\n    types: [g, g],\n    impl: Z.invert\n  };\n\n  //# filter :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.filter`][]. Discards every element that does not\n  //. satisfy the predicate.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > S.filter (S.odd) ([1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > S.filter (S.odd) ({x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > S.filter (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (0))\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred) {\n    return function(filterable) {\n      return Z.filter (pred, filterable);\n    };\n  }\n  _.filter = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: filter\n  };\n\n  //# reject :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.reject`][]. Discards every element that satisfies\n  //. the predicate.\n  //.\n  //. See also [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > S.reject (S.odd) ([1, 2, 3])\n  //. [2]\n  //.\n  //. > S.reject (S.odd) ({x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > S.reject (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.reject (S.odd) (S.Just (0))\n  //. Just (0)\n  //.\n  //. > S.reject (S.odd) (S.Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred) {\n    return function(filterable) {\n      return Z.reject (pred, filterable);\n    };\n  }\n  _.reject = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: reject\n  };\n\n  //# map :: Functor f => (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.map`][].\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) ([1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > S.map (Math.sqrt) ({x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > S.map (Math.sqrt) (S.Just (9))\n  //. Just (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Right (9))\n  //. Right (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Pair (99980001) (99980001))\n  //. Pair (99980001) (9999)\n  //. ```\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the B combinator\n  //. from combinatory logic (i.e. [`compose`](#compose)):\n  //.\n  //.     Functor f => (a -> b) -> f a -> f b\n  //.     (a -> b) -> Function x a -> Function x b\n  //.     (a -> c) -> Function x a -> Function x c\n  //.     (b -> c) -> Function x b -> Function x c\n  //.     (b -> c) -> Function a b -> Function a c\n  //.     (b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  function map(f) {\n    return function(functor) {\n      return Z.map (f, functor);\n    };\n  }\n  _.map = {\n    consts: {f: [Z.Functor]},\n    types: [$.Fn (a) (b), f (a), f (b)],\n    impl: map\n  };\n\n  //# flip :: Functor f => f (a -> b) -> a -> f b\n  //.\n  //. Curried version of [`Z.flip`][]. Maps over the given functions, applying\n  //. each to the given value.\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the C combinator\n  //. from combinatory logic:\n  //.\n  //.     Functor f => f (a -> b) -> a -> f b\n  //.     Function x (a -> b) -> a -> Function x b\n  //.     Function x (a -> c) -> a -> Function x c\n  //.     Function x (b -> c) -> b -> Function x c\n  //.     Function a (b -> c) -> b -> Function a c\n  //.     (a -> b -> c) -> b -> a -> c\n  //.\n  //. ```javascript\n  //. > S.flip (S.concat) ('!') ('foo')\n  //. 'foo!'\n  //.\n  //. > S.flip ([Math.floor, Math.ceil]) (1.5)\n  //. [1, 2]\n  //.\n  //. > S.flip ({floor: Math.floor, ceil: Math.ceil}) (1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > S.flip (Cons (Math.floor) (Cons (Math.ceil) (Nil))) (1.5)\n  //. Cons (1) (Cons (2) (Nil))\n  //. ```\n  _.flip = {\n    consts: {f: [Z.Functor]},\n    types: [f ($.Fn (a) (b)), a, f (b)],\n    impl: curry2 (Z.flip)\n  };\n\n  //# bimap :: Bifunctor f => (a -> b) -> (c -> d) -> f a c -> f b d\n  //.\n  //. Curried version of [`Z.bimap`][].\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Right (64))\n  //. Right (8)\n  //. ```\n  _.bimap = {\n    consts: {p: [Z.Bifunctor]},\n    types: [$.Fn (a) (b), $.Fn (c) (d), p (a) (c), p (b) (d)],\n    impl: curry3 (Z.bimap)\n  };\n\n  //# mapLeft :: Bifunctor f => (a -> b) -> f a c -> f b c\n  //.\n  //. Curried version of [`Z.mapLeft`][]. Maps the given function over the left\n  //. side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > S.mapLeft (S.toUpper) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (64)\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Right (64))\n  //. Right (64)\n  //. ```\n  _.mapLeft = {\n    consts: {p: [Z.Bifunctor]},\n    types: [$.Fn (a) (b), p (a) (c), p (b) (c)],\n    impl: curry2 (Z.mapLeft)\n  };\n\n  //# promap :: Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n  //.\n  //. Curried version of [`Z.promap`][].\n  //.\n  //. ```javascript\n  //. > S.promap (Math.abs) (S.add (1)) (Math.sqrt) (-100)\n  //. 11\n  //. ```\n  _.promap = {\n    consts: {p: [Z.Profunctor]},\n    types: [$.Fn (a) (b), $.Fn (c) (d), p (b) (c), p (a) (d)],\n    impl: curry3 (Z.promap)\n  };\n\n  //# alt :: Alt f => f a -> f a -> f a\n  //.\n  //. Curried version of [`Z.alt`][] with arguments flipped to facilitate\n  //. partial application.\n  //.\n  //. ```javascript\n  //. > S.alt (S.Just ('default')) (S.Nothing)\n  //. Just ('default')\n  //.\n  //. > S.alt (S.Just ('default')) (S.Just ('hello'))\n  //. Just ('hello')\n  //.\n  //. > S.alt (S.Right (0)) (S.Left ('X'))\n  //. Right (0)\n  //.\n  //. > S.alt (S.Right (0)) (S.Right (1))\n  //. Right (1)\n  //. ```\n  function alt(y) {\n    return function(x) {\n      return Z.alt (x, y);\n    };\n  }\n  _.alt = {\n    consts: {f: [Z.Alt]},\n    types: [f (a), f (a), f (a)],\n    impl: alt\n  };\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.zero`][].\n  //.\n  //. ```javascript\n  //. > S.zero (Array)\n  //. []\n  //.\n  //. > S.zero (Object)\n  //. {}\n  //.\n  //. > S.zero (S.Maybe)\n  //. Nothing\n  //. ```\n  _.zero = {\n    consts: {f: [Z.Plus]},\n    types: [TypeRep (f (a)), f (a)],\n    impl: Z.zero\n  };\n\n  //# reduce :: Foldable f => (b -> a -> b) -> b -> f a -> b\n  //.\n  //. Takes a curried binary function, an initial value, and a [Foldable][],\n  //. and applies the function to the initial value and the Foldable's first\n  //. value, then applies the function to the result of the previous\n  //. application and the Foldable's second value. Repeats this process\n  //. until each of the Foldable's values has been used. Returns the initial\n  //. value if the Foldable is empty; the result of the final application\n  //. otherwise.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.add) (0) ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.reduce (xs => x => S.prepend (x) (xs)) ([]) ([1, 2, 3, 4, 5])\n  //. [5, 4, 3, 2, 1]\n  //. ```\n  function reduce(f) {\n    return function(initial) {\n      return function(foldable) {\n        return Z.reduce (function(y, x) { return f (y) (x); },\n                         initial,\n                         foldable);\n      };\n    };\n  }\n  _.reduce = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Fn (a) ($.Fn (b) (a)), a, f (b), a],\n    impl: reduce\n  };\n\n  //# traverse :: (Applicative f, Traversable t) => TypeRep f -> (a -> f b) -> t a -> f (t b)\n  //.\n  //. Curried version of [`Z.traverse`][].\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (S.Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //.\n  //. > S.traverse (Array) (S.words) (S.Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C'])\n  //. Just ([10, 11, 12])\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C', 'X'])\n  //. Nothing\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C'})\n  //. Just ({a: 10, b: 11, c: 12})\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C', x: 'X'})\n  //. Nothing\n  //. ```\n  _.traverse = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep (f (b)), $.Fn (a) (f (b)), t (a), f (t (b))],\n    impl: curry3 (Z.traverse)\n  };\n\n  //# sequence :: (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n  //.\n  //. Curried version of [`Z.sequence`][]. Inverts the given `t (f a)`\n  //. to produce an `f (t a)`.\n  //.\n  //. ```javascript\n  //. > S.sequence (Array) (S.Just ([1, 2, 3]))\n  //. [Just (1), Just (2), Just (3)]\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Just (3)])\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Nothing])\n  //. Nothing\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Just (3)})\n  //. Just ({a: 1, b: 2, c: 3})\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Nothing})\n  //. Nothing\n  //. ```\n  _.sequence = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep (f (a)), t (f (a)), f (t (a))],\n    impl: curry2 (Z.sequence)\n  };\n\n  //# ap :: Apply f => f (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.ap`][].\n  //.\n  //. ```javascript\n  //. > S.ap ([Math.sqrt, x => x * x]) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > S.ap ({x: Math.sqrt, y: S.add (1), z: S.sub (1)}) ({w: 4, x: 4, y: 4})\n  //. {x: 2, y: 5}\n  //.\n  //. > S.ap (S.Just (Math.sqrt)) (S.Just (64))\n  //. Just (8)\n  //. ```\n  //.\n  //. Replacing `Apply f => f` with `Function x` produces the S combinator\n  //. from combinatory logic:\n  //.\n  //.     Apply f => f (a -> b) -> f a -> f b\n  //.     Function x (a -> b) -> Function x a -> Function x b\n  //.     Function x (a -> c) -> Function x a -> Function x c\n  //.     Function x (b -> c) -> Function x b -> Function x c\n  //.     Function a (b -> c) -> Function a b -> Function a c\n  //.     (a -> b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.ap (s => n => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //. ```\n  _.ap = {\n    consts: {f: [Z.Apply]},\n    types: [f ($.Fn (a) (b)), f (a), f (b)],\n    impl: curry2 (Z.ap)\n  };\n\n  //# lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n  //.\n  //. Promotes a curried binary function to a function that operates on two\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Just (3))\n  //. Just (5)\n  //.\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (true))\n  //. Just (true)\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (false))\n  //. Just (false)\n  //. ```\n  _.lift2 = {\n    consts: {f: [Z.Apply]},\n    types: [$.Fn (a) ($.Fn (b) (c)), f (a), f (b), f (c)],\n    impl: curry3 (Z.lift2)\n  };\n\n  //# lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n  //.\n  //. Promotes a curried ternary function to a function that operates on three\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Just ([1, 2, 3]))\n  //. Just (6)\n  //.\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Nothing)\n  //. Nothing\n  //. ```\n  _.lift3 = {\n    consts: {f: [Z.Apply]},\n    types: [$.Fn (a) ($.Fn (b) ($.Fn (c) (d))), f (a), f (b), f (c), f (d)],\n    impl: curry4 (Z.lift3)\n  };\n\n  //# apFirst :: Apply f => f a -> f b -> f a\n  //.\n  //. Curried version of [`Z.apFirst`][]. Combines two effectful actions,\n  //. keeping only the result of the first. Equivalent to Haskell's `(<*)`\n  //. function.\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > S.apFirst ([1, 2]) ([3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > S.apFirst (S.Just (1)) (S.Just (2))\n  //. Just (1)\n  //. ```\n  _.apFirst = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (a)],\n    impl: curry2 (Z.apFirst)\n  };\n\n  //# apSecond :: Apply f => f a -> f b -> f b\n  //.\n  //. Curried version of [`Z.apSecond`][]. Combines two effectful actions,\n  //. keeping only the result of the second. Equivalent to Haskell's `(*>)`\n  //. function.\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > S.apSecond ([1, 2]) ([3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > S.apSecond (S.Just (1)) (S.Just (2))\n  //. Just (2)\n  //. ```\n  _.apSecond = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (b)],\n    impl: curry2 (Z.apSecond)\n  };\n\n  //# of :: Applicative f => TypeRep f -> a -> f a\n  //.\n  //. Curried version of [`Z.of`][].\n  //.\n  //. ```javascript\n  //. > S.of (Array) (42)\n  //. [42]\n  //.\n  //. > S.of (Function) (42) (null)\n  //. 42\n  //.\n  //. > S.of (S.Maybe) (42)\n  //. Just (42)\n  //.\n  //. > S.of (S.Either) (42)\n  //. Right (42)\n  //. ```\n  function of(typeRep) {\n    return function(x) {\n      return Z.of (typeRep, x);\n    };\n  }\n  _.of = {\n    consts: {f: [Z.Applicative]},\n    types: [TypeRep (f (a)), a, f (a)],\n    impl: of\n  };\n\n  //# chain :: Chain m => (a -> m b) -> m a -> m b\n  //.\n  //. Curried version of [`Z.chain`][].\n  //.\n  //. ```javascript\n  //. > S.chain (x => [x, x]) ([1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > S.chain (n => s => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('slice')\n  //. 'sli'\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('123'))\n  //. Just (123)\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('XXX'))\n  //. Nothing\n  //. ```\n  _.chain = {\n    consts: {m: [Z.Chain]},\n    types: [$.Fn (a) (m (b)), m (a), m (b)],\n    impl: curry2 (Z.chain)\n  };\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.join`][].\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. ```javascript\n  //. > S.join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > S.join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > S.join (S.Just (S.Just (1)))\n  //. Just (1)\n  //.\n  //. > S.join (S.Pair ('foo') (S.Pair ('bar') ('baz')))\n  //. Pair ('foobar') ('baz')\n  //. ```\n  //.\n  //. Replacing `Chain m => m` with `Function x` produces the W combinator\n  //. from combinatory logic:\n  //.\n  //.     Chain m => m (m a) -> m a\n  //.     Function x (Function x a) -> Function x a\n  //.     (x -> x -> a) -> (x -> a)\n  //.\n  //. ```javascript\n  //. > S.join (S.concat) ('abc')\n  //. 'abcabc'\n  //. ```\n  _.join = {\n    consts: {m: [Z.Chain]},\n    types: [m (m (a)), m (a)],\n    impl: Z.join\n  };\n\n  //# chainRec :: ChainRec m => TypeRep m -> (a -> m (Either a b)) -> a -> m b\n  //.\n  //. Performs a [`chain`](#chain)-like computation with constant stack usage.\n  //. Similar to [`Z.chainRec`][], but curried and more convenient due to the\n  //. use of the Either type to indicate completion (via a Right).\n  //.\n  //. ```javascript\n  //. > S.chainRec (Array)\n  //. .            (s => s.length === 2 ? S.map (S.Right) ([s + '!', s + '?'])\n  //. .                                 : S.map (S.Left) ([s + 'o', s + 'n']))\n  //. .            ('')\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep) {\n    return function(f) {\n      return function(x) {\n        return Z.chainRec (typeRep, step, x);\n      };\n      function step(next, done, x) {\n        return Z.map (either (next) (done), f (x));\n      }\n    };\n  }\n  _.chainRec = {\n    consts: {m: [Z.ChainRec]},\n    types: [TypeRep (m (b)), $.Fn (a) (m ($.Either (a) (b))), a, m (b)],\n    impl: chainRec\n  };\n\n  //# extend :: Extend w => (w a -> b) -> w a -> w b\n  //.\n  //. Curried version of [`Z.extend`][].\n  //.\n  //. ```javascript\n  //. > S.extend (S.joinWith ('')) (['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > S.extend (f => f ([3, 4])) (S.reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.extend = {\n    consts: {w: [Z.Extend]},\n    types: [$.Fn (w (a)) (b), w (a), w (b)],\n    impl: curry2 (Z.extend)\n  };\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.duplicate`][].\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. ```javascript\n  //. > S.duplicate (S.Just (1))\n  //. Just (Just (1))\n  //.\n  //. > S.duplicate ([1])\n  //. [[1]]\n  //.\n  //. > S.duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > S.duplicate (S.reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.duplicate = {\n    consts: {w: [Z.Extend]},\n    types: [w (a), w (w (a))],\n    impl: Z.duplicate\n  };\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.extract`][].\n  //.\n  //. ```javascript\n  //. > S.extract (S.Pair ('foo') ('bar'))\n  //. 'bar'\n  //. ```\n  _.extract = {\n    consts: {w: [Z.Comonad]},\n    types: [w (a), a],\n    impl: Z.extract\n  };\n\n  //# contramap :: Contravariant f => (b -> a) -> f a -> f b\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.contramap`][].\n  //.\n  //. ```javascript\n  //. > S.contramap (s => s.length) (Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  _.contramap = {\n    consts: {f: [Z.Contravariant]},\n    types: [$.Fn (b) (a), f (a), f (b)],\n    impl: curry2 (Z.contramap)\n  };\n\n  //. ### Combinator\n\n  //# I :: a -> a\n  //.\n  //. The I combinator. Returns its argument. Equivalent to Haskell's `id`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.I ('foo')\n  //. 'foo'\n  //. ```\n  function I(x) {\n    return x;\n  }\n  _.I = {\n    consts: {},\n    types: [a, a],\n    impl: I\n  };\n\n  //# K :: a -> b -> a\n  //.\n  //. The K combinator. Takes two values and returns the first. Equivalent to\n  //. Haskell's `const` function.\n  //.\n  //. ```javascript\n  //. > S.K ('foo') ('bar')\n  //. 'foo'\n  //.\n  //. > S.map (S.K (42)) (S.range (0) (5))\n  //. [42, 42, 42, 42, 42]\n  //. ```\n  function K(x) {\n    return function(y) {\n      return x;\n    };\n  }\n  _.K = {\n    consts: {},\n    types: [a, b, a],\n    impl: K\n  };\n\n  //# T :: a -> (a -> b) -> b\n  //.\n  //. The T ([thrush][]) combinator. Takes a value and a function, and returns\n  //. the result of applying the function to the value. Equivalent to Haskell's\n  //. `(&)` function.\n  //.\n  //. ```javascript\n  //. > S.T (42) (S.add (1))\n  //. 43\n  //.\n  //. > S.map (S.T (100)) ([S.add (1), Math.sqrt])\n  //. [101, 10]\n  //. ```\n  function T(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n  _.T = {\n    consts: {},\n    types: [a, $.Fn (a) (b), b],\n    impl: T\n  };\n\n  //. ### Function\n\n  //# curry2 :: ((a, b) -> c) -> a -> b -> c\n  //.\n  //. Curries the given binary function.\n  //.\n  //. ```javascript\n  //. > S.map (S.curry2 (Math.pow) (10)) ([1, 2, 3])\n  //. [10, 100, 1000]\n  //. ```\n  function curry2(f) {\n    return function(x) {\n      return function(y) {\n        return f (x, y);\n      };\n    };\n  }\n  _.curry2 = {\n    consts: {},\n    types: [$.Function ([a, b, c]), a, b, c],\n    impl: curry2\n  };\n\n  //# curry3 :: ((a, b, c) -> d) -> a -> b -> c -> d\n  //.\n  //. Curries the given ternary function.\n  //.\n  //. ```javascript\n  //. > const replaceString = S.curry3 ((what, replacement, string) =>\n  //. .   string.replace (what, replacement)\n  //. . )\n  //.\n  //. > replaceString ('banana') ('orange') ('banana icecream')\n  //. 'orange icecream'\n  //. ```\n  function curry3(f) {\n    return function(x) {\n      return function(y) {\n        return function(z) {\n          return f (x, y, z);\n        };\n      };\n    };\n  }\n  _.curry3 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d]), a, b, c, d],\n    impl: curry3\n  };\n\n  //# curry4 :: ((a, b, c, d) -> e) -> a -> b -> c -> d -> e\n  //.\n  //. Curries the given quaternary function.\n  //.\n  //. ```javascript\n  //. > const createRect = S.curry4 ((x, y, width, height) =>\n  //. .   ({x, y, width, height})\n  //. . )\n  //.\n  //. > createRect (0) (0) (10) (10)\n  //. {x: 0, y: 0, width: 10, height: 10}\n  //. ```\n  function curry4(f) {\n    return function(w) {\n      return function(x) {\n        return function(y) {\n          return function(z) {\n            return f (w, x, y, z);\n          };\n        };\n      };\n    };\n  }\n  _.curry4 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e]), a, b, c, d, e],\n    impl: curry4\n  };\n\n  //# curry5 :: ((a, b, c, d, e) -> f) -> a -> b -> c -> d -> e -> f\n  //.\n  //. Curries the given quinary function.\n  //.\n  //. ```javascript\n  //. > const toUrl = S.curry5 ((protocol, creds, hostname, port, pathname) =>\n  //. .   protocol + '//' +\n  //. .   S.maybe ('') (S.flip (S.concat) ('@')) (creds) +\n  //. .   hostname +\n  //. .   S.maybe ('') (S.concat (':')) (port) +\n  //. .   pathname\n  //. . )\n  //.\n  //. > toUrl ('https:') (S.Nothing) ('example.com') (S.Just ('443')) ('/foo/bar')\n  //. 'https://example.com:443/foo/bar'\n  //. ```\n  function curry5(f) {\n    return function(v) {\n      return function(w) {\n        return function(x) {\n          return function(y) {\n            return function(z) {\n              return f (v, w, x, y, z);\n            };\n          };\n        };\n      };\n    };\n  }\n  _.curry5 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e, r]), a, b, c, d, e, r],\n    impl: curry5\n  };\n\n  //. ### Composition\n\n  //# compose :: Semigroupoid s => s b c -> s a b -> s a c\n  //.\n  //. Curried version of [`Z.compose`][].\n  //.\n  //. When specialized to Function, `compose` composes two unary functions,\n  //. from right to left (this is the B combinator from combinatory logic).\n  //.\n  //. The generalized type signature indicates that `compose` is compatible\n  //. with any [Semigroupoid][].\n  //.\n  //. See also [`pipe`](#pipe).\n  //.\n  //. ```javascript\n  //. > S.compose (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  _.compose = {\n    consts: {s: [Z.Semigroupoid]},\n    types: [s (b) (c), s (a) (b), s (a) (c)],\n    impl: curry2 (Z.compose)\n  };\n\n  //# pipe :: Foldable f => f (Any -> Any) -> a -> b\n  //.\n  //. Takes a sequence of functions assumed to be unary and a value of any\n  //. type, and returns the result of applying the sequence of transformations\n  //. to the initial value.\n  //.\n  //. In general terms, `pipe` performs left-to-right composition of a sequence\n  //. of functions. `pipe ([f, g, h]) (x)` is equivalent to `h (g (f (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipe ([S.add (1), Math.sqrt, S.sub (1)]) (99)\n  //. 9\n  //. ```\n  function pipe(fs) {\n    return function(x) {\n      return reduce (T) (x) (fs);\n    };\n  }\n  _.pipe = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Fn ($.Any) ($.Any)), a, b],\n    impl: pipe\n  };\n\n  //# pipeK :: (Foldable f, Chain m) => f (Any -> m Any) -> m a -> m b\n  //.\n  //. Takes a sequence of functions assumed to be unary that return values\n  //. with a [Chain][], and a value of that Chain, and returns the result\n  //. of applying the sequence of transformations to the initial value.\n  //.\n  //. In general terms, `pipeK` performs left-to-right [Kleisli][] composition\n  //. of an sequence of functions. `pipeK ([f, g, h]) (x)` is equivalent to\n  //. `chain (h) (chain (g) (chain (f) (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipeK ([S.tail, S.tail, S.head]) (S.Just ([1, 2, 3, 4]))\n  //. Just (3)\n  //. ```\n  function pipeK(fs) {\n    return function(x) {\n      return Z.reduce (function(x, f) { return Z.chain (f, x); }, x, fs);\n    };\n  }\n  _.pipeK = {\n    consts: {f: [Z.Foldable], m: [Z.Chain]},\n    types: [f ($.Fn ($.Any) (m ($.Any))), m (a), m (b)],\n    impl: pipeK\n  };\n\n  //# on :: (b -> b -> c) -> (a -> b) -> a -> a -> c\n  //.\n  //. Takes a binary function `f`, a unary function `g`, and two\n  //. values `x` and `y`. Returns `f (g (x)) (g (y))`.\n  //.\n  //. This is the P combinator from combinatory logic.\n  //.\n  //. ```javascript\n  //. > S.on (S.concat) (S.reverse) ([1, 2, 3]) ([4, 5, 6])\n  //. [3, 2, 1, 6, 5, 4]\n  //. ```\n  function on(f) {\n    return function(g) {\n      return function(x) {\n        return function(y) {\n          return f (g (x)) (g (y));\n        };\n      };\n    };\n  }\n  _.on = {\n    consts: {},\n    types: [$.Fn (b) ($.Fn (b) (c)), $.Fn (a) (b), a, a, c],\n    impl: on\n  };\n\n  //. ### Pair type\n  //.\n  //. Pair is the canonical product type: a value of type `Pair a b` always\n  //. contains exactly two values: one of type `a`; one of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-pair][].\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > S.Pair ('foo') (42)\n  //. Pair ('foo') (42)\n  //. ```\n  _.Pair = {\n    consts: {},\n    types: [a, b, $.Pair (a) (b)],\n    impl: Pair\n  };\n\n  //# pair :: (a -> b -> c) -> Pair a b -> c\n  //.\n  //. Case analysis for the `Pair a b` type.\n  //.\n  //. ```javascript\n  //. > S.pair (S.concat) (S.Pair ('foo') ('bar'))\n  //. 'foobar'\n  //. ```\n  function pair(f) {\n    return function(pair) {\n      return f (pair.fst) (pair.snd);\n    };\n  }\n  _.pair = {\n    consts: {},\n    types: [$.Fn (a) ($.Fn (b) (c)), $.Pair (a) (b), c],\n    impl: pair\n  };\n\n  //# fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > S.fst (S.Pair ('foo') (42))\n  //. 'foo'\n  //. ```\n  _.fst = {\n    consts: {},\n    types: [$.Pair (a) (b), a],\n    impl: pair (K)\n  };\n\n  //# snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.snd (S.Pair ('foo') (42))\n  //. 42\n  //. ```\n  _.snd = {\n    consts: {},\n    types: [$.Pair (a) (b), b],\n    impl: pair (C (K))\n  };\n\n  //# swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > S.swap (S.Pair ('foo') (42))\n  //. Pair (42) ('foo')\n  //. ```\n  _.swap = {\n    consts: {},\n    types: [$.Pair (a) (b), $.Pair (b) (a)],\n    impl: pair (C (Pair))\n  };\n\n  //. ### Maybe type\n  //.\n  //. The Maybe type represents optional values: a value of type `Maybe a` is\n  //. either Nothing (the empty value) or a Just whose value is of type `a`.\n  //.\n  //. The implementation is provided by [sanctuary-maybe][].\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > S.Nothing\n  //. Nothing\n  //. ```\n\n  //# Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Just (42)\n  //. Just (42)\n  //. ```\n  _.Just = {\n    consts: {},\n    types: [a, $.Maybe (a)],\n    impl: Just\n  };\n\n  //# isNothing :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is Nothing; `false` if it is a Just.\n  //.\n  //. ```javascript\n  //. > S.isNothing (S.Nothing)\n  //. true\n  //.\n  //. > S.isNothing (S.Just (42))\n  //. false\n  //. ```\n  function isNothing(maybe) {\n    return maybe.isNothing;\n  }\n  _.isNothing = {\n    consts: {},\n    types: [$.Maybe (a), $.Boolean],\n    impl: isNothing\n  };\n\n  //# isJust :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is a Just; `false` if it is Nothing.\n  //.\n  //. ```javascript\n  //. > S.isJust (S.Just (42))\n  //. true\n  //.\n  //. > S.isJust (S.Nothing)\n  //. false\n  //. ```\n  function isJust(maybe) {\n    return maybe.isJust;\n  }\n  _.isJust = {\n    consts: {},\n    types: [$.Maybe (a), $.Boolean],\n    impl: isJust\n  };\n\n  //# fromMaybe :: a -> Maybe a -> a\n  //.\n  //. Takes a default value and a Maybe, and returns the Maybe's value\n  //. if the Maybe is a Just; the default value otherwise.\n  //.\n  //. See also [`fromMaybe_`](#fromMaybe_) and\n  //. [`maybeToNullable`](#maybeToNullable).\n  //.\n  //. ```javascript\n  //. > S.fromMaybe (0) (S.Just (42))\n  //. 42\n  //.\n  //. > S.fromMaybe (0) (S.Nothing)\n  //. 0\n  //. ```\n  _.fromMaybe = {\n    consts: {},\n    types: [a, $.Maybe (a), a],\n    impl: C (maybe) (I)\n  };\n\n  //# fromMaybe_ :: (() -> a) -> Maybe a -> a\n  //.\n  //. Variant of [`fromMaybe`](#fromMaybe) that takes a thunk so the default\n  //. value is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Just (1000000))\n  //. 1000000\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Nothing)\n  //. 832040\n  //. ```\n  _.fromMaybe_ = {\n    consts: {},\n    types: [$.Thunk (a), $.Maybe (a), a],\n    impl: C (maybe_) (I)\n  };\n\n  //# maybeToNullable :: Maybe a -> Nullable a\n  //.\n  //. Returns the given Maybe's value if the Maybe is a Just; `null` otherwise.\n  //. [Nullable][] is defined in [sanctuary-def][].\n  //.\n  //. See also [`fromMaybe`](#fromMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToNullable (S.Just (42))\n  //. 42\n  //.\n  //. > S.maybeToNullable (S.Nothing)\n  //. null\n  //. ```\n  function maybeToNullable(maybe) {\n    return maybe.isJust ? maybe.value : null;\n  }\n  _.maybeToNullable = {\n    consts: {},\n    types: [$.Maybe (a), $.Nullable (a)],\n    impl: maybeToNullable\n  };\n\n  //# maybe :: b -> (a -> b) -> Maybe a -> b\n  //.\n  //. Takes a value of any type, a function, and a Maybe. If the Maybe is\n  //. a Just, the return value is the result of applying the function to\n  //. the Just's value. Otherwise, the first argument is returned.\n  //.\n  //. See also [`maybe_`](#maybe_).\n  //.\n  //. ```javascript\n  //. > S.maybe (0) (S.prop ('length')) (S.Just ('refuge'))\n  //. 6\n  //.\n  //. > S.maybe (0) (S.prop ('length')) (S.Nothing)\n  //. 0\n  //. ```\n  function maybe(x) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : x;\n      };\n    };\n  }\n  _.maybe = {\n    consts: {},\n    types: [b, $.Fn (a) (b), $.Maybe (a), b],\n    impl: maybe\n  };\n\n  //# maybe_ :: (() -> b) -> (a -> b) -> Maybe a -> b\n  //.\n  //. Variant of [`maybe`](#maybe) that takes a thunk so the default value\n  //. is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Just (1000000))\n  //. 1000\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Nothing)\n  //. 832040\n  //. ```\n  function maybe_(thunk) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : thunk ();\n      };\n    };\n  }\n  _.maybe_ = {\n    consts: {},\n    types: [$.Thunk (b), $.Fn (a) (b), $.Maybe (a), b],\n    impl: maybe_\n  };\n\n  //# justs :: (Filterable f, Functor f) => f (Maybe a) -> f a\n  //.\n  //. Discards each element that is Nothing, and unwraps each element that is\n  //. a Just. Related to Haskell's `catMaybes` function.\n  //.\n  //. See also [`lefts`](#lefts) and [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.justs ([S.Just ('foo'), S.Nothing, S.Just ('baz')])\n  //. ['foo', 'baz']\n  //. ```\n  function justs(maybes) {\n    return map (prop ('value')) (filter (isJust) (maybes));\n  }\n  _.justs = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Maybe (a)), f (a)],\n    impl: justs\n  };\n\n  //# mapMaybe :: (Filterable f, Functor f) => (a -> Maybe b) -> f a -> f b\n  //.\n  //. Takes a function and a structure, applies the function to each element\n  //. of the structure, and returns the \"successful\" results. If the result of\n  //. applying the function to an element is Nothing, the result is discarded;\n  //. if the result is a Just, the Just's value is included.\n  //.\n  //. ```javascript\n  //. > S.mapMaybe (S.head) ([[], [1, 2, 3], [], [4, 5, 6], []])\n  //. [1, 4]\n  //.\n  //. > S.mapMaybe (S.head) ({x: [1, 2, 3], y: [], z: [4, 5, 6]})\n  //. {x: 1, z: 4}\n  //. ```\n  _.mapMaybe = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [$.Fn (a) ($.Maybe (b)), f (a), f (b)],\n    impl: B (B (justs)) (map)\n  };\n\n  //# maybeToEither :: a -> Maybe b -> Either a b\n  //.\n  //. Converts a Maybe to an Either. Nothing becomes a Left (containing the\n  //. first argument); a Just becomes a Right.\n  //.\n  //. See also [`eitherToMaybe`](#eitherToMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('xyz'))\n  //. Left ('Expecting an integer')\n  //.\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('42'))\n  //. Right (42)\n  //. ```\n  function maybeToEither(x) {\n    return maybe (Left (x)) (Right);\n  }\n  _.maybeToEither = {\n    consts: {},\n    types: [a, $.Maybe (b), $.Either (a) (b)],\n    impl: maybeToEither\n  };\n\n  //. ### Either type\n  //.\n  //. The Either type represents values with two possibilities: a value of type\n  //. `Either a b` is either a Left whose value is of type `a` or a Right whose\n  //. value is of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-either][].\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Left ('Cannot divide by zero')\n  //. Left ('Cannot divide by zero')\n  //. ```\n  _.Left = {\n    consts: {},\n    types: [a, $.Either (a) (b)],\n    impl: Left\n  };\n\n  //# Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > S.Right (42)\n  //. Right (42)\n  //. ```\n  _.Right = {\n    consts: {},\n    types: [b, $.Either (a) (b)],\n    impl: Right\n  };\n\n  //# isLeft :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Left; `false` if it is a Right.\n  //.\n  //. ```javascript\n  //. > S.isLeft (S.Left ('Cannot divide by zero'))\n  //. true\n  //.\n  //. > S.isLeft (S.Right (42))\n  //. false\n  //. ```\n  function isLeft(either) {\n    return either.isLeft;\n  }\n  _.isLeft = {\n    consts: {},\n    types: [$.Either (a) (b), $.Boolean],\n    impl: isLeft\n  };\n\n  //# isRight :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Right; `false` if it is a Left.\n  //.\n  //. ```javascript\n  //. > S.isRight (S.Right (42))\n  //. true\n  //.\n  //. > S.isRight (S.Left ('Cannot divide by zero'))\n  //. false\n  //. ```\n  function isRight(either) {\n    return either.isRight;\n  }\n  _.isRight = {\n    consts: {},\n    types: [$.Either (a) (b), $.Boolean],\n    impl: isRight\n  };\n\n  //# fromEither :: b -> Either a b -> b\n  //.\n  //. Takes a default value and an Either, and returns the Right value\n  //. if the Either is a Right; the default value otherwise.\n  //.\n  //. ```javascript\n  //. > S.fromEither (0) (S.Right (42))\n  //. 42\n  //.\n  //. > S.fromEither (0) (S.Left (42))\n  //. 0\n  //. ```\n  function fromEither(x) {\n    return either (K (x)) (I);\n  }\n  _.fromEither = {\n    consts: {},\n    types: [b, $.Either (a) (b), b],\n    impl: fromEither\n  };\n\n  //# either :: (a -> c) -> (b -> c) -> Either a b -> c\n  //.\n  //. Takes two functions and an Either, and returns the result of\n  //. applying the first function to the Left's value, if the Either\n  //. is a Left, or the result of applying the second function to the\n  //. Right's value, if the Either is a Right.\n  //.\n  //. ```javascript\n  //. > S.either (S.toUpper) (S.show) (S.Left ('Cannot divide by zero'))\n  //. 'CANNOT DIVIDE BY ZERO'\n  //.\n  //. > S.either (S.toUpper) (S.show) (S.Right (42))\n  //. '42'\n  //. ```\n  function either(l) {\n    return function(r) {\n      return function(either) {\n        return (either.isLeft ? l : r) (either.value);\n      };\n    };\n  }\n  _.either = {\n    consts: {},\n    types: [$.Fn (a) (c), $.Fn (b) (c), $.Either (a) (b), c],\n    impl: either\n  };\n\n  //# lefts :: (Filterable f, Functor f) => f (Either a b) -> f a\n  //.\n  //. Discards each element that is a Right, and unwraps each element that is\n  //. a Left.\n  //.\n  //. See also [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.lefts ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. ['foo', 'bar']\n  //. ```\n  _.lefts = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Either (a) (b)), f (a)],\n    impl: B (map (prop ('value'))) (filter (isLeft))\n  };\n\n  //# rights :: (Filterable f, Functor f) => f (Either a b) -> f b\n  //.\n  //. Discards each element that is a Left, and unwraps each element that is\n  //. a Right.\n  //.\n  //. See also [`lefts`](#lefts).\n  //.\n  //. ```javascript\n  //. > S.rights ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. [20, 10]\n  //. ```\n  _.rights = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Either (a) (b)), f (b)],\n    impl: B (map (prop ('value'))) (filter (isRight))\n  };\n\n  //# tagBy :: (a -> Boolean) -> a -> Either a a\n  //.\n  //. Takes a predicate and a value, and returns a Right of the value if it\n  //. satisfies the predicate; a Left of the value otherwise.\n  //.\n  //. ```javascript\n  //. > S.tagBy (S.odd) (0)\n  //. Left (0)\n  //\n  //. > S.tagBy (S.odd) (1)\n  //. Right (1)\n  //. ```\n  function tagBy(pred) {\n    return ifElse (pred) (Right) (Left);\n  }\n  _.tagBy = {\n    consts: {},\n    types: [$.Predicate (a), a, $.Either (a) (a)],\n    impl: tagBy\n  };\n\n  //# encase :: (a -> b) -> a -> Either Error b\n  //.\n  //. Takes a function that may throw and returns a pure function.\n  //.\n  //. ```javascript\n  //. > S.encase (JSON.parse) ('[\"foo\",\"bar\",\"baz\"]')\n  //. Right (['foo', 'bar', 'baz'])\n  //.\n  //. > S.encase (JSON.parse) ('[')\n  //. Left (new SyntaxError ('Unexpected end of JSON input'))\n  //. ```\n  function encase(f) {\n    return function(x) {\n      try {\n        return Right (f (x));\n      } catch (err) {\n        return Left (err);\n      }\n    };\n  }\n  _.encase = {\n    consts: {},\n    types: [$.Fn (a) (b), a, $.Either ($.Error) (b)],\n    impl: encase\n  };\n\n  //# eitherToMaybe :: Either a b -> Maybe b\n  //.\n  //. Converts an Either to a Maybe. A Left becomes Nothing; a Right becomes\n  //. a Just.\n  //.\n  //. See also [`maybeToEither`](#maybeToEither).\n  //.\n  //. ```javascript\n  //. > S.eitherToMaybe (S.Left ('Cannot divide by zero'))\n  //. Nothing\n  //.\n  //. > S.eitherToMaybe (S.Right (42))\n  //. Just (42)\n  //. ```\n  function eitherToMaybe(either) {\n    return either.isLeft ? Nothing : Just (either.value);\n  }\n  _.eitherToMaybe = {\n    consts: {},\n    types: [$.Either (a) (b), $.Maybe (b)],\n    impl: eitherToMaybe\n  };\n\n  //. ### Logic\n\n  //# and :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"and\".\n  //.\n  //. ```javascript\n  //. > S.and (false) (false)\n  //. false\n  //.\n  //. > S.and (false) (true)\n  //. false\n  //.\n  //. > S.and (true) (false)\n  //. false\n  //.\n  //. > S.and (true) (true)\n  //. true\n  //. ```\n  function and(x) {\n    return function(y) {\n      return x && y;\n    };\n  }\n  _.and = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: and\n  };\n\n  //# or :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"or\".\n  //.\n  //. ```javascript\n  //. > S.or (false) (false)\n  //. false\n  //.\n  //. > S.or (false) (true)\n  //. true\n  //.\n  //. > S.or (true) (false)\n  //. true\n  //.\n  //. > S.or (true) (true)\n  //. true\n  //. ```\n  function or(x) {\n    return function(y) {\n      return x || y;\n    };\n  }\n  _.or = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: or\n  };\n\n  //# not :: Boolean -> Boolean\n  //.\n  //. Boolean \"not\".\n  //.\n  //. See also [`complement`](#complement).\n  //.\n  //. ```javascript\n  //. > S.not (false)\n  //. true\n  //.\n  //. > S.not (true)\n  //. false\n  //. ```\n  function not(x) {\n    return !x;\n  }\n  _.not = {\n    consts: {},\n    types: [$.Boolean, $.Boolean],\n    impl: not\n  };\n\n  //# complement :: (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a unary predicate and a value of any type, and returns the logical\n  //. negation of applying the predicate to the value.\n  //.\n  //. See also [`not`](#not).\n  //.\n  //. ```javascript\n  //. > Number.isInteger (42)\n  //. true\n  //.\n  //. > S.complement (Number.isInteger) (42)\n  //. false\n  //. ```\n  _.complement = {\n    consts: {},\n    types: [$.Predicate (a), a, $.Boolean],\n    impl: B (not)\n  };\n\n  //# boolean :: a -> a -> Boolean -> a\n  //.\n  //. Case analysis for the `Boolean` type. `boolean (x) (y) (b)` evaluates\n  //. to `x` if `b` is `false`; to `y` if `b` is `true`.\n  //.\n  //. ```javascript\n  //. > S.boolean ('no') ('yes') (false)\n  //. 'no'\n  //.\n  //. > S.boolean ('no') ('yes') (true)\n  //. 'yes'\n  //. ```\n  function boolean(x) {\n    return function(y) {\n      return function(b) {\n        return b ? y : x;\n      };\n    };\n  }\n  _.boolean = {\n    consts: {},\n    types: [a, a, $.Boolean, a],\n    impl: boolean\n  };\n\n  //# ifElse :: (a -> Boolean) -> (a -> b) -> (a -> b) -> a -> b\n  //.\n  //. Takes a unary predicate, a unary \"if\" function, a unary \"else\"\n  //. function, and a value of any type, and returns the result of\n  //. applying the \"if\" function to the value if the value satisfies\n  //. the predicate; the result of applying the \"else\" function to the\n  //. value otherwise.\n  //.\n  //. See also [`when`](#when) and [`unless`](#unless).\n  //.\n  //. ```javascript\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (-1)\n  //. 1\n  //.\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (16)\n  //. 4\n  //. ```\n  function ifElse(pred) {\n    return function(f) {\n      return function(g) {\n        return function(x) {\n          return (pred (x) ? f : g) (x);\n        };\n      };\n    };\n  }\n  _.ifElse = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (b), $.Fn (a) (b), a, b],\n    impl: ifElse\n  };\n\n  //# when :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. satisfies the predicate; the value otherwise.\n  //.\n  //. See also [`unless`](#unless) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.when (x => x >= 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.when (x => x >= 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function when(pred) {\n    return C (ifElse (pred)) (I);\n  }\n  _.when = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (a), a, a],\n    impl: when\n  };\n\n  //# unless :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. does not satisfy the predicate; the value otherwise.\n  //.\n  //. See also [`when`](#when) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.unless (x => x < 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.unless (x => x < 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function unless(pred) {\n    return ifElse (pred) (I);\n  }\n  _.unless = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (a), a, a],\n    impl: unless\n  };\n\n  //. ### Array\n\n  //# array :: b -> (a -> Array a -> b) -> Array a -> b\n  //.\n  //. Case analysis for the `Array a` type.\n  //.\n  //. ```javascript\n  //. > S.array (S.Nothing) (head => tail => S.Just (head)) ([])\n  //. Nothing\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (head)) ([1, 2, 3])\n  //. Just (1)\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (tail)) ([])\n  //. Nothing\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (tail)) ([1, 2, 3])\n  //. Just ([2, 3])\n  //. ```\n  function array(y) {\n    return function(f) {\n      return function(xs) {\n        return xs.length === 0 ? y : f (xs[0]) (xs.slice (1));\n      };\n    };\n  }\n  _.array = {\n    consts: {},\n    types: [b, $.Fn (a) ($.Fn ($.Array (a)) (b)), $.Array (a), b],\n    impl: array\n  };\n\n  //# head :: Foldable f => f a -> Maybe a\n  //.\n  //. Returns Just the first element of the given structure if the structure\n  //. contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.head ([1, 2, 3])\n  //. Just (1)\n  //.\n  //. > S.head ([])\n  //. Nothing\n  //.\n  //. > S.head (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (1)\n  //.\n  //. > S.head (Nil)\n  //. Nothing\n  //. ```\n  function head(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable[0]) : Nothing;\n    }\n    return Z.reduce (function(m, x) { return m.isJust ? m : Just (x); },\n                     Nothing,\n                     foldable);\n  }\n  _.head = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Maybe (a)],\n    impl: head\n  };\n\n  //# last :: Foldable f => f a -> Maybe a\n  //.\n  //. Returns Just the last element of the given structure if the structure\n  //. contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.last ([1, 2, 3])\n  //. Just (3)\n  //.\n  //. > S.last ([])\n  //. Nothing\n  //.\n  //. > S.last (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (3)\n  //.\n  //. > S.last (Nil)\n  //. Nothing\n  //. ```\n  function last(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable[foldable.length - 1])\n                                 : Nothing;\n    }\n    return Z.reduce (function(_, x) { return Just (x); }, Nothing, foldable);\n  }\n  _.last = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Maybe (a)],\n    impl: last\n  };\n\n  //# tail :: (Applicative f, Foldable f, Monoid (f a)) => f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the first of the given structure's elements if the\n  //. structure contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.tail ([1, 2, 3])\n  //. Just ([2, 3])\n  //.\n  //. > S.tail ([])\n  //. Nothing\n  //.\n  //. > S.tail (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (Cons (2) (Cons (3) (Nil)))\n  //\n  //. > S.tail (Nil)\n  //. Nothing\n  //. ```\n  function tail(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable.slice (1)) : Nothing;\n    }\n    var empty = Z.empty (foldable.constructor);\n    return Z.reduce (function(m, x) {\n      return Just (maybe (empty) (append (x)) (m));\n    }, Nothing, foldable);\n  }\n  _.tail = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), $.Maybe (f (a))],\n    impl: tail\n  };\n\n  //# init :: (Applicative f, Foldable f, Monoid (f a)) => f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the last of the given structure's elements if the\n  //. structure contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.init ([1, 2, 3])\n  //. Just ([1, 2])\n  //.\n  //. > S.init ([])\n  //. Nothing\n  //.\n  //. > S.init (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (Cons (1) (Cons (2) (Nil)))\n  //.\n  //. > S.init (Nil)\n  //. Nothing\n  //. ```\n  function init(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable.slice (0, -1)) : Nothing;\n    }\n    var empty = Z.empty (foldable.constructor);\n    return Z.map (Pair.snd, Z.reduce (function(m, x) {\n      return Just (Pair (x) (maybe (empty) (pair (append)) (m)));\n    }, Nothing, foldable));\n  }\n  _.init = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), $.Maybe (f (a))],\n    impl: init\n  };\n\n  //# take :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just the first N elements of the given structure if N is\n  //. non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.take (0) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.take (1) (['foo', 'bar'])\n  //. Just (['foo'])\n  //.\n  //. > S.take (2) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.take (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.take (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Cons (5) (Nil))))))\n  //. Just (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. ```\n  function _takeDrop(arrayCase, generalCase) {\n    return function(n) {\n      return function(xs) {\n        if (n < 0) return Nothing;\n\n        //  Fast path for arrays.\n        if (Array.isArray (xs)) {\n          return n <= xs.length ? Just (arrayCase (n, xs)) : Nothing;\n        }\n\n        //  m :: Maybe (Pair Integer (f a))\n        var m = Z.reduce (function(m, x) {\n          return Z.map (function(pair) {\n            var n = pair.fst;\n            var xs = pair.snd;\n            return Pair (n - 1) (generalCase (n, xs, x));\n          }, m);\n        }, Just (Pair (n) (Z.empty (xs.constructor))), xs);\n\n        return Z.map (Pair.snd, Z.reject (B (gt (0)) (Pair.fst), m));\n      };\n    };\n  }\n  var take = _takeDrop (\n    function(n, xs) { return xs.slice (0, n); },\n    function(n, xs, x) { return n > 0 ? Z.append (x, xs) : xs; }\n  );\n  _.take = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: take\n  };\n\n  //# drop :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the first N elements of the given structure if\n  //. N is non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.drop (0) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.drop (1) (['foo', 'bar'])\n  //. Just (['bar'])\n  //.\n  //. > S.drop (2) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.drop (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.drop (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Cons (5) (Nil))))))\n  //. Just (Cons (4) (Cons (5) (Nil)))\n  //. ```\n  var drop = _takeDrop (\n    function(n, xs) { return xs.slice (n); },\n    function(n, xs, x) { return n > 0 ? xs : Z.append (x, xs); }\n  );\n  _.drop = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: drop\n  };\n\n  //# takeLast :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just the last N elements of the given structure if N is\n  //. non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.takeLast (0) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.takeLast (1) (['foo', 'bar'])\n  //. Just (['bar'])\n  //.\n  //. > S.takeLast (2) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.takeLast (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.takeLast (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Nil)))))\n  //. Just (Cons (2) (Cons (3) (Cons (4) (Nil))))\n  //. ```\n  function takeLast(n) {\n    return function(xs) {\n      return Z.map (Z.reverse, take (n) (Z.reverse (xs)));\n    };\n  }\n  _.takeLast = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: takeLast\n  };\n\n  //# dropLast :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the last N elements of the given structure if\n  //. N is non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.dropLast (0) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.dropLast (1) (['foo', 'bar'])\n  //. Just (['foo'])\n  //.\n  //. > S.dropLast (2) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.dropLast (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.dropLast (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Nil)))))\n  //. Just (Cons (1) (Nil))\n  //. ```\n  function dropLast(n) {\n    return function(xs) {\n      return Z.map (Z.reverse, drop (n) (Z.reverse (xs)));\n    };\n  }\n  _.dropLast = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: dropLast\n  };\n\n  //# takeWhile :: (a -> Boolean) -> Array a -> Array a\n  //.\n  //. Discards the first element that does not satisfy the predicate,\n  //. and all subsequent elements.\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > S.takeWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7]\n  //.\n  //. > S.takeWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. []\n  //. ```\n  function takeWhile(pred) {\n    return function(xs) {\n      var idx = 0;\n      while (idx < xs.length && pred (xs[idx])) idx += 1;\n      return xs.slice (0, idx);\n    };\n  }\n  _.takeWhile = {\n    consts: {},\n    types: [$.Predicate (a), $.Array (a), $.Array (a)],\n    impl: takeWhile\n  };\n\n  //# dropWhile :: (a -> Boolean) -> Array a -> Array a\n  //.\n  //. Retains the first element that does not satisfy the predicate,\n  //. and all subsequent elements.\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > S.dropWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [6, 3, 5, 4]\n  //.\n  //. > S.dropWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7, 6, 3, 5, 4]\n  //. ```\n  function dropWhile(pred) {\n    return function(xs) {\n      var idx = 0;\n      while (idx < xs.length && pred (xs[idx])) idx += 1;\n      return xs.slice (idx);\n    };\n  }\n  _.dropWhile = {\n    consts: {},\n    types: [$.Predicate (a), $.Array (a), $.Array (a)],\n    impl: dropWhile\n  };\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.size ([])\n  //. 0\n  //.\n  //. > S.size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > S.size (Nil)\n  //. 0\n  //.\n  //. > S.size (Cons ('foo') (Cons ('bar') (Cons ('baz') (Nil))))\n  //. 3\n  //.\n  //. > S.size (S.Nothing)\n  //. 0\n  //.\n  //. > S.size (S.Just ('quux'))\n  //. 1\n  //.\n  //. > S.size (S.Pair ('ignored!') ('counted!'))\n  //. 1\n  //. ```\n  _.size = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Integer],\n    impl: Z.size\n  };\n\n  //# all :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] all the elements of the structure satisfy the\n  //. predicate.\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > S.all (S.odd) ([])\n  //. true\n  //.\n  //. > S.all (S.odd) ([1, 3, 5])\n  //. true\n  //.\n  //. > S.all (S.odd) ([1, 2, 3])\n  //. false\n  //. ```\n  _.all = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.all)\n  };\n\n  //# any :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] any element of the structure satisfies the\n  //. predicate.\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > S.any (S.odd) ([])\n  //. false\n  //.\n  //. > S.any (S.odd) ([2, 4, 6])\n  //. false\n  //.\n  //. > S.any (S.odd) ([1, 2, 3])\n  //. true\n  //. ```\n  _.any = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.any)\n  };\n\n  //# none :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] none of the elements of the structure satisfies\n  //. the predicate.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: a -> Boolean, xs :: Foldable f => f a.\n  //.      S.none (p) (xs) = S.not (S.any (p) (xs))`\n  //.\n  //.   - `forall p :: a -> Boolean, xs :: Foldable f => f a.\n  //.      S.none (p) (xs) = S.all (S.complement (p)) (xs)`\n  //.\n  //. See also [`all`](#all) and [`any`](#any).\n  //.\n  //. ```javascript\n  //. > S.none (S.odd) ([])\n  //. true\n  //.\n  //. > S.none (S.odd) ([2, 4, 6])\n  //. true\n  //.\n  //. > S.none (S.odd) ([1, 2, 3])\n  //. false\n  //. ```\n  _.none = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.none)\n  };\n\n  //# append :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > S.append (3) ([1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > S.append (3) (Cons (1) (Cons (2) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.append ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.append ([3]) (S.Just ([1, 2]))\n  //. Just ([1, 2, 3])\n  //. ```\n  function append(x) {\n    return function(xs) {\n      return Z.append (x, xs);\n    };\n  }\n  _.append = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: append\n  };\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > S.prepend (1) ([2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > S.prepend (1) (Cons (2) (Cons (3) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.prepend ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.prepend ([1]) (S.Just ([2, 3]))\n  //. Just ([1, 2, 3])\n  //. ```\n  _.prepend = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: curry2 (Z.prepend)\n  };\n\n  //# joinWith :: String -> Array String -> String\n  //.\n  //. Joins the strings of the second argument separated by the first argument.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s) (S.splitOn (s) (t)) = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.joinWith (':') (['foo', 'bar', 'baz'])\n  //. 'foo:bar:baz'\n  //. ```\n  _.joinWith = {\n    consts: {},\n    types: [$.String, $.Array ($.String), $.String],\n    impl: invoke1 ('join')\n  };\n\n  //# elem :: (Setoid a, Foldable f) => a -> f a -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` [iff][] the value is an\n  //. element of the structure.\n  //.\n  //. See also [`find`](#find).\n  //.\n  //. ```javascript\n  //. > S.elem ('c') (['a', 'b', 'c'])\n  //. true\n  //.\n  //. > S.elem ('x') (['a', 'b', 'c'])\n  //. false\n  //.\n  //. > S.elem (3) ({x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > S.elem (8) ({x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > S.elem (0) (S.Just (0))\n  //. true\n  //.\n  //. > S.elem (0) (S.Just (1))\n  //. false\n  //.\n  //. > S.elem (0) (S.Nothing)\n  //. false\n  //. ```\n  _.elem = {\n    consts: {a: [Z.Setoid], f: [Z.Foldable]},\n    types: [a, f (a), $.Boolean],\n    impl: curry2 (Z.elem)\n  };\n\n  //# find :: Foldable f => (a -> Boolean) -> f a -> Maybe a\n  //.\n  //. Takes a predicate and a structure and returns Just the leftmost element\n  //. of the structure that satisfies the predicate; Nothing if there is no\n  //. such element.\n  //.\n  //. See also [`elem`](#elem).\n  //.\n  //. ```javascript\n  //. > S.find (S.lt (0)) ([1, -2, 3, -4, 5])\n  //. Just (-2)\n  //.\n  //. > S.find (S.lt (0)) ([1, 2, 3, 4, 5])\n  //. Nothing\n  //. ```\n  function find(pred) {\n    return function(xs) {\n      return Z.reduce (\n        function(m, x) {\n          return m.isJust ? m : pred (x) ? Just (x) : Nothing;\n        },\n        Nothing,\n        xs\n      );\n    };\n  }\n  _.find = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Maybe (a)],\n    impl: find\n  };\n\n  //# foldMap :: (Monoid m, Foldable f) => TypeRep m -> (a -> m) -> f a -> m\n  //.\n  //. Curried version of [`Z.foldMap`][]. Deconstructs a foldable by mapping\n  //. every element to a monoid and concatenating the results.\n  //.\n  //. ```javascript\n  //. > S.foldMap (String) (f => f.name) ([Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //.\n  //. > S.foldMap (Array) (x => [x + 1, x + 2]) ([10, 20, 30])\n  //. [11, 12, 21, 22, 31, 32]\n  //. ```\n  _.foldMap = {\n    consts: {b: [Z.Monoid], f: [Z.Foldable]},\n    types: [TypeRep (b), $.Fn (a) (b), f (a), b],\n    impl: curry3 (Z.foldMap)\n  };\n\n  //# unfoldr :: (b -> Maybe (Pair a b)) -> b -> Array a\n  //.\n  //. Takes a function and a seed value, and returns an array generated by\n  //. applying the function repeatedly. The array is initially empty. The\n  //. function is initially applied to the seed value. Each application\n  //. of the function should result in either:\n  //.\n  //.   - Nothing, in which case the array is returned; or\n  //.\n  //.   - Just a pair, in which case the first element is appended to\n  //.     the array and the function is applied to the second element.\n  //.\n  //. ```javascript\n  //. > S.unfoldr (n => n < 1000 ? S.Just (S.Pair (n) (2 * n)) : S.Nothing) (1)\n  //. [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]\n  //. ```\n  function unfoldr(f) {\n    return function(x) {\n      var result = [];\n      for (var m = f (x); m.isJust; m = f (m.value.snd)) {\n        result.push (m.value.fst);\n      }\n      return result;\n    };\n  }\n  _.unfoldr = {\n    consts: {},\n    types: [$.Fn (b) ($.Maybe ($.Pair (a) (b))), b, $.Array (a)],\n    impl: unfoldr\n  };\n\n  //# range :: Integer -> Integer -> Array Integer\n  //.\n  //. Returns an array of consecutive integers starting with the first argument\n  //. and ending with the second argument minus one. Returns `[]` if the second\n  //. argument is less than or equal to the first argument.\n  //.\n  //. ```javascript\n  //. > S.range (0) (10)\n  //. [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  //.\n  //. > S.range (-5) (0)\n  //. [-5, -4, -3, -2, -1]\n  //.\n  //. > S.range (0) (-5)\n  //. []\n  //. ```\n  function range(from) {\n    return function(to) {\n      var result = [];\n      for (var n = from; n < to; n += 1) result.push (n);\n      return result;\n    };\n  }\n  _.range = {\n    consts: {},\n    types: [$.Integer, $.Integer, $.Array ($.Integer)],\n    impl: range\n  };\n\n  //# groupBy :: (a -> a -> Boolean) -> Array a -> Array (Array a)\n  //.\n  //. Splits its array argument into an array of arrays of equal,\n  //. adjacent elements. Equality is determined by the function\n  //. provided as the first argument. Its behaviour can be surprising\n  //. for functions that aren't reflexive, transitive, and symmetric\n  //. (see [equivalence][] relation).\n  //.\n  //. Properties:\n  //.\n  //.   - `forall f :: a -> a -> Boolean, xs :: Array a.\n  //.      S.join (S.groupBy (f) (xs)) = xs`\n  //.\n  //. ```javascript\n  //. > S.groupBy (S.equals) ([1, 1, 2, 1, 1])\n  //. [[1, 1], [2], [1, 1]]\n  //.\n  //. > S.groupBy (x => y => x + y === 0) ([2, -3, 3, 3, 3, 4, -4, 4])\n  //. [[2], [-3, 3, 3, 3], [4, -4], [4]]\n  //. ```\n  function groupBy(f) {\n    return function(xs) {\n      if (xs.length === 0) return [];\n      var x0 = xs[0];         // :: a\n      var active = [x0];      // :: Array a\n      var result = [active];  // :: Array (Array a)\n      for (var idx = 1; idx < xs.length; idx += 1) {\n        var x = xs[idx];\n        if (f (x0) (x)) active.push (x); else result.push (active = [x0 = x]);\n      }\n      return result;\n    };\n  }\n  _.groupBy = {\n    consts: {},\n    types: [$.Fn (a) ($.Predicate (a)), $.Array (a), $.Array ($.Array (a))],\n    impl: groupBy\n  };\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > S.reverse (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Cons (3) (Cons (2) (Cons (1) (Nil)))\n  //.\n  //. > S.pipe ([S.splitOn (''), S.reverse, S.joinWith ('')]) ('abc')\n  //. 'cba'\n  //. ```\n  _.reverse = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), f (a)],\n    impl: Z.reverse\n  };\n\n  //# sort :: (Ord a, Applicative m, Foldable m, Monoid (m a)) => m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] for comparisons.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sort (S.sort (m)) = S.sort (m)` (idempotence)\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > S.sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > S.sort ([S.Left (4), S.Right (3), S.Left (2), S.Right (1)])\n  //. [Left (2), Left (4), Right (1), Right (3)]\n  //. ```\n  _.sort = {\n    consts: {a: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [m (a), m (a)],\n    impl: Z.sort\n  };\n\n  //# sortBy :: (Ord b, Applicative m, Foldable m, Monoid (m a)) => (a -> b) -> m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] to compare the values produced by applying the given function\n  //. to each element of the structure.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sortBy (f) (S.sortBy (f) (m)) = S.sortBy (f) (m)` (idempotence)\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > S.sortBy (S.prop ('rank')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 2, suit: 'hearts'},\n  //. . {rank: 5, suit: 'hearts'},\n  //. . {rank: 5, suit: 'spades'},\n  //. . {rank: 7, suit: 'spades'} ]\n  //.\n  //. > S.sortBy (S.prop ('suit')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 5, suit: 'hearts'},\n  //. . {rank: 2, suit: 'hearts'},\n  //. . {rank: 7, suit: 'spades'},\n  //. . {rank: 5, suit: 'spades'} ]\n  //. ```\n  //.\n  //. If descending order is desired, one may use [`Descending`][]:\n  //.\n  //. ```javascript\n  //. > S.sortBy (Descending) ([83, 97, 110, 99, 116, 117, 97, 114, 121])\n  //. [121, 117, 116, 114, 110, 99, 97, 97, 83]\n  //. ```\n  _.sortBy = {\n    consts: {b: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Fn (a) (b), m (a), m (a)],\n    impl: curry2 (Z.sortBy)\n  };\n\n  //# zip :: Array a -> Array b -> Array (Pair a b)\n  //.\n  //. Returns an array of pairs of corresponding elements from the given\n  //. arrays. The length of the resulting array is equal to the length of\n  //. the shorter input array.\n  //.\n  //. See also [`zipWith`](#zipWith).\n  //.\n  //. ```javascript\n  //. > S.zip (['a', 'b']) (['x', 'y', 'z'])\n  //. [Pair ('a') ('x'), Pair ('b') ('y')]\n  //.\n  //. > S.zip ([1, 3, 5]) ([2, 4])\n  //. [Pair (1) (2), Pair (3) (4)]\n  //. ```\n  _.zip = {\n    consts: {},\n    types: [$.Array (a), $.Array (b), $.Array ($.Pair (a) (b))],\n    impl: zipWith (Pair)\n  };\n\n  //# zipWith :: (a -> b -> c) -> Array a -> Array b -> Array c\n  //.\n  //. Returns the result of combining, pairwise, the given arrays using the\n  //. given binary function. The length of the resulting array is equal to the\n  //. length of the shorter input array.\n  //.\n  //. See also [`zip`](#zip).\n  //.\n  //. ```javascript\n  //. > S.zipWith (a => b => a + b) (['a', 'b']) (['x', 'y', 'z'])\n  //. ['ax', 'by']\n  //.\n  //. > S.zipWith (a => b => [a, b]) ([1, 3, 5]) ([2, 4])\n  //. [[1, 2], [3, 4]]\n  //. ```\n  function zipWith(f) {\n    return function(xs) {\n      return function(ys) {\n        var result = [];\n        var len = Math.min (xs.length, ys.length);\n        for (var idx = 0; idx < len; idx += 1) {\n          result.push (f (xs[idx]) (ys[idx]));\n        }\n        return result;\n      };\n    };\n  }\n  _.zipWith = {\n    consts: {},\n    types: [$.Fn (a) ($.Fn (b) (c)), $.Array (a), $.Array (b), $.Array (c)],\n    impl: zipWith\n  };\n\n  //. ### Object\n\n  //# prop :: String -> a -> b\n  //.\n  //. Takes a property name and an object with known properties and returns\n  //. the value of the specified property. If for some reason the object\n  //. lacks the specified property, a type error is thrown.\n  //.\n  //. For accessing properties of uncertain objects, use [`get`](#get) instead.\n  //. For accessing string map values by key, use [`value`](#value) instead.\n  //.\n  //. ```javascript\n  //. > S.prop ('a') ({a: 1, b: 2})\n  //. 1\n  //. ```\n  function prop(key) {\n    return function(x) {\n      var obj = toObject (x);\n      if (key in obj) return obj[key];\n      throw new TypeError ('‘prop’ expected object to have a property named ' +\n                           '‘' + key + '’; ' + show (x) + ' does not');\n    };\n  }\n  _.prop = {\n    consts: {},\n    types: [$.String, a, b],\n    impl: prop\n  };\n\n  //# props :: Array String -> a -> b\n  //.\n  //. Takes a property path (an array of property names) and an object with\n  //. known structure and returns the value at the given path. If for some\n  //. reason the path does not exist, a type error is thrown.\n  //.\n  //. For accessing property paths of uncertain objects, use [`gets`](#gets)\n  //. instead.\n  //.\n  //. ```javascript\n  //. > S.props (['a', 'b', 'c']) ({a: {b: {c: 1}}})\n  //. 1\n  //. ```\n  function props(path) {\n    return function(x) {\n      return path.reduce (function(x, key) {\n        var obj = toObject (x);\n        if (key in obj) return obj[key];\n        throw new TypeError ('‘props’ expected object to have a property at ' +\n                             show (path) + '; ' + show (x) + ' does not');\n      }, x);\n    };\n  }\n  _.props = {\n    consts: {},\n    types: [$.Array ($.String), a, b],\n    impl: props\n  };\n\n  //# get :: (Any -> Boolean) -> String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property name, and an object and returns Just the\n  //. value of the specified object property if it exists and the value\n  //. satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`gets`](#gets), [`prop`](#prop), and [`value`](#value).\n  //.\n  //. ```javascript\n  //. > S.get (S.is ($.Number)) ('x') ({x: 1, y: 2})\n  //. Just (1)\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({x: '1', y: '2'})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3]})\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3, null]})\n  //. Nothing\n  //. ```\n  function get(pred) {\n    return B (B (filter (pred))) (get_);\n  }\n  _.get = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, a, $.Maybe (b)],\n    impl: get\n  };\n\n  //# gets :: (Any -> Boolean) -> Array String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property path (an array of property names), and\n  //. an object and returns Just the value at the given path if such a path\n  //. exists and the value satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: 42}}})\n  //. Just (42)\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: '42'}}})\n  //. Nothing\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({})\n  //. Nothing\n  //. ```\n  function gets(pred) {\n    return function(keys) {\n      return function(x) {\n        return Z.filter (pred, keys.reduce (function(maybe, key) {\n          return Z.chain (get_ (key), maybe);\n        }, Just (x)));\n      };\n    };\n  }\n  _.gets = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.Array ($.String), a, $.Maybe (b)],\n    impl: gets\n  };\n\n  //. ### StrMap\n  //.\n  //. StrMap is an abbreviation of _string map_. A string map is an object,\n  //. such as `{foo: 1, bar: 2, baz: 3}`, whose values are all members of\n  //. the same type. Formally, a value is a member of type `StrMap a` if its\n  //. [type identifier][] is `'Object'` and the values of its enumerable own\n  //. properties are all members of type `a`.\n\n  //# value :: String -> StrMap a -> Maybe a\n  //.\n  //. Retrieve the value associated with the given key in the given string map.\n  //.\n  //. Formally, `value (k) (m)` evaluates to `Just (m[k])` if `k` is an\n  //. enumerable own property of `m`; `Nothing` otherwise.\n  //.\n  //. See also [`prop`](#prop) and [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.value ('foo') ({foo: 1, bar: 2})\n  //. Just (1)\n  //.\n  //. > S.value ('bar') ({foo: 1, bar: 2})\n  //. Just (2)\n  //.\n  //. > S.value ('baz') ({foo: 1, bar: 2})\n  //. Nothing\n  //. ```\n  function value(key) {\n    return function(strMap) {\n      return Object.prototype.propertyIsEnumerable.call (strMap, key) ?\n             Just (strMap[key]) :\n             Nothing;\n    };\n  }\n  _.value = {\n    consts: {},\n    types: [$.String, $.StrMap (a), $.Maybe (a)],\n    impl: value\n  };\n\n  //# singleton :: String -> a -> StrMap a\n  //.\n  //. Takes a string and a value of any type, and returns a string map with\n  //. a single entry (mapping the key to the value).\n  //.\n  //. ```javascript\n  //. > S.singleton ('foo') (42)\n  //. {foo: 42}\n  //. ```\n  function singleton(key) {\n    return function(val) {\n      var strMap = {};\n      strMap[key] = val;\n      return strMap;\n    };\n  }\n  _.singleton = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a)],\n    impl: singleton\n  };\n\n  //# insert :: String -> a -> StrMap a -> StrMap a\n  //.\n  //. Takes a string, a value of any type, and a string map, and returns a\n  //. string map comprising all the entries of the given string map plus the\n  //. entry specified by the first two arguments (which takes precedence).\n  //.\n  //. Equivalent to Haskell's `insert` function. Similar to Clojure's `assoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.insert ('c') (3) ({a: 1, b: 2})\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.insert ('a') (4) ({a: 1, b: 2})\n  //. {a: 4, b: 2}\n  //. ```\n  function insert(key) {\n    return function(val) {\n      return function(strMap) {\n        return Z.concat (strMap, singleton (key) (val));\n      };\n    };\n  }\n  _.insert = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a), $.StrMap (a)],\n    impl: insert\n  };\n\n  //# remove :: String -> StrMap a -> StrMap a\n  //.\n  //. Takes a string and a string map, and returns a string map comprising all\n  //. the entries of the given string map except the one whose key matches the\n  //. given string (if such a key exists).\n  //.\n  //. Equivalent to Haskell's `delete` function. Similar to Clojure's `dissoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.remove ('c') ({a: 1, b: 2, c: 3})\n  //. {a: 1, b: 2}\n  //.\n  //. > S.remove ('c') ({})\n  //. {}\n  //. ```\n  function remove(key) {\n    return function(strMap) {\n      var result = Z.concat (strMap, {});\n      delete result[key];\n      return result;\n    };\n  }\n  _.remove = {\n    consts: {},\n    types: [$.String, $.StrMap (a), $.StrMap (a)],\n    impl: remove\n  };\n\n  //# keys :: StrMap a -> Array String\n  //.\n  //. Returns the keys of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.keys ({b: 2, c: 3, a: 1}))\n  //. ['a', 'b', 'c']\n  //. ```\n  _.keys = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($.String)],\n    impl: Object.keys\n  };\n\n  //# values :: StrMap a -> Array a\n  //.\n  //. Returns the values of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.values ({a: 1, c: 3, b: 2}))\n  //. [1, 2, 3]\n  //. ```\n  function values(strMap) {\n    return Z.map (function(k) { return strMap[k]; }, Object.keys (strMap));\n  }\n  _.values = {\n    consts: {},\n    types: [$.StrMap (a), $.Array (a)],\n    impl: values\n  };\n\n  //# pairs :: StrMap a -> Array (Pair String a)\n  //.\n  //. Returns the key–value pairs of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.pairs ({b: 2, a: 1, c: 3}))\n  //. [Pair ('a') (1), Pair ('b') (2), Pair ('c') (3)]\n  //. ```\n  function pairs(strMap) {\n    return Z.map (function(k) { return Pair (k) (strMap[k]); },\n                  Object.keys (strMap));\n  }\n  _.pairs = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($.Pair ($.String) (a))],\n    impl: pairs\n  };\n\n  //# fromPairs :: Foldable f => f (Pair String a) -> StrMap a\n  //.\n  //. Returns a string map containing the key–value pairs specified by the\n  //. given [Foldable][]. If a key appears in multiple pairs, the rightmost\n  //. pair takes precedence.\n  //.\n  //. ```javascript\n  //. > S.fromPairs ([S.Pair ('a') (1), S.Pair ('b') (2), S.Pair ('c') (3)])\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.fromPairs ([S.Pair ('x') (1), S.Pair ('x') (2)])\n  //. {x: 2}\n  //. ```\n  function fromPairs(pairs) {\n    return Z.reduce (function(strMap, pair) {\n      strMap[pair.fst] = pair.snd;\n      return strMap;\n    }, {}, pairs);\n  }\n  _.fromPairs = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Pair ($.String) (a)), $.StrMap (a)],\n    impl: fromPairs\n  };\n\n  //. ### Number\n\n  //# negate :: ValidNumber -> ValidNumber\n  //.\n  //. Negates its argument.\n  //.\n  //. ```javascript\n  //. > S.negate (12.5)\n  //. -12.5\n  //.\n  //. > S.negate (-42)\n  //. 42\n  //. ```\n  function negate(n) {\n    return -n;\n  }\n  _.negate = {\n    consts: {},\n    types: [$.ValidNumber, $.ValidNumber],\n    impl: negate\n  };\n\n  //# add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.add (1) (1)\n  //. 2\n  //. ```\n  function add(x) {\n    return function(y) {\n      return x + y;\n    };\n  }\n  _.add = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: add\n  };\n\n  //# sum :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.sum ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.sum ([])\n  //. 0\n  //.\n  //. > S.sum (S.Just (42))\n  //. 42\n  //.\n  //. > S.sum (S.Nothing)\n  //. 0\n  //. ```\n  _.sum = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (add) (0)\n  };\n\n  //# sub :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _subtract `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.sub (1)) ([1, 2, 3])\n  //. [0, 1, 2]\n  //. ```\n  function sub(y) {\n    return function(x) {\n      return x - y;\n    };\n  }\n  _.sub = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: sub\n  };\n\n  //# mult :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mult (4) (2)\n  //. 8\n  //. ```\n  function mult(x) {\n    return function(y) {\n      return x * y;\n    };\n  }\n  _.mult = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: mult\n  };\n\n  //# product :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.product ([1, 2, 3, 4, 5])\n  //. 120\n  //.\n  //. > S.product ([])\n  //. 1\n  //.\n  //. > S.product (S.Just (42))\n  //. 42\n  //.\n  //. > S.product (S.Nothing)\n  //. 1\n  //. ```\n  _.product = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (mult) (1)\n  };\n\n  //# div :: NonZeroFiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a non-zero finite number `n` and returns the _divide by `n`_\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.map (S.div (2)) ([0, 1, 2, 3])\n  //. [0, 0.5, 1, 1.5]\n  //. ```\n  function div(y) {\n    return function(x) {\n      return x / y;\n    };\n  }\n  _.div = {\n    consts: {},\n    types: [$.NonZeroFiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: div\n  };\n\n  //# pow :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _power of `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.pow (2)) ([-3, -2, -1, 0, 1, 2, 3])\n  //. [9, 4, 1, 0, 1, 4, 9]\n  //.\n  //. > S.map (S.pow (0.5)) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5]\n  //. ```\n  function pow(exp) {\n    return function(base) {\n      return Math.pow (base, exp);\n    };\n  }\n  _.pow = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: pow\n  };\n\n  //# mean :: Foldable f => f FiniteNumber -> Maybe FiniteNumber\n  //.\n  //. Returns the mean of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mean ([1, 2, 3, 4, 5])\n  //. Just (3)\n  //.\n  //. > S.mean ([])\n  //. Nothing\n  //.\n  //. > S.mean (S.Just (42))\n  //. Just (42)\n  //.\n  //. > S.mean (S.Nothing)\n  //. Nothing\n  //. ```\n  function mean(foldable) {\n    var result = Z.reduce (\n      function(acc, n) {\n        acc.total += n;\n        acc.count += 1;\n        return acc;\n      },\n      {total: 0, count: 0},\n      foldable\n    );\n    return result.count > 0 ? Just (result.total / result.count) : Nothing;\n  }\n  _.mean = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.Maybe ($.FiniteNumber)],\n    impl: mean\n  };\n\n  //. ### Integer\n\n  //# even :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is even; `false` if it is odd.\n  //.\n  //. ```javascript\n  //. > S.even (42)\n  //. true\n  //.\n  //. > S.even (99)\n  //. false\n  //. ```\n  function even(n) {\n    return n % 2 === 0;\n  }\n  _.even = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: even\n  };\n\n  //# odd :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is odd; `false` if it is even.\n  //.\n  //. ```javascript\n  //. > S.odd (99)\n  //. true\n  //.\n  //. > S.odd (42)\n  //. false\n  //. ```\n  function odd(n) {\n    return n % 2 !== 0;\n  }\n  _.odd = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: odd\n  };\n\n  //. ### Parse\n\n  //# parseDate :: String -> Maybe ValidDate\n  //.\n  //. Takes a string `s` and returns `Just (new Date (s))` if `new Date (s)`\n  //. evaluates to a [`ValidDate`][ValidDate] value; Nothing otherwise.\n  //.\n  //. As noted in [#488][], this function's behaviour is unspecified for some\n  //. inputs! [MDN][date parsing] warns against using the `Date` constructor\n  //. to parse date strings:\n  //.\n  //. > __Note:__ parsing of date strings with the `Date` constructor […] is\n  //. > strongly discouraged due to browser differences and inconsistencies.\n  //. > Support for RFC 2822 format strings is by convention only. Support for\n  //. > ISO 8601 formats differs in that date-only strings (e.g. \"1970-01-01\")\n  //. > are treated as UTC, not local.\n  //.\n  //. ```javascript\n  //. > S.parseDate ('2011-01-19T17:40:00Z')\n  //. Just (new Date ('2011-01-19T17:40:00.000Z'))\n  //.\n  //. > S.parseDate ('today')\n  //. Nothing\n  //. ```\n  function parseDate(s) {\n    var date = new Date (s);\n    return isNaN (date.valueOf ()) ? Nothing : Just (date);\n  }\n  _.parseDate = {\n    consts: {},\n    types: [$.String, $.Maybe ($.ValidDate)],\n    impl: parseDate\n  };\n\n  //  requiredNonCapturingGroup :: Array String -> String\n  function requiredNonCapturingGroup(xs) {\n    return '(?:' + xs.join ('|') + ')';\n  }\n\n  //  optionalNonCapturingGroup :: Array String -> String\n  function optionalNonCapturingGroup(xs) {\n    return requiredNonCapturingGroup (xs) + '?';\n  }\n\n  //  validFloatRepr :: RegExp\n  var validFloatRepr = new RegExp (\n    '^' +                     // start-of-string anchor\n    '\\\\s*' +                  // any number of leading whitespace characters\n    '[+-]?' +                 // optional sign\n    requiredNonCapturingGroup ([\n      'Infinity',             // \"Infinity\"\n      'NaN',                  // \"NaN\"\n      requiredNonCapturingGroup ([\n        '[0-9]+',             // number\n        '[0-9]+[.][0-9]+',    // number with interior decimal point\n        '[0-9]+[.]',          // number with trailing decimal point\n        '[.][0-9]+'           // number with leading decimal point\n      ]) +\n      optionalNonCapturingGroup ([\n        '[Ee]' +              // \"E\" or \"e\"\n        '[+-]?' +             // optional sign\n        '[0-9]+'              // exponent\n      ])\n    ]) +\n    '\\\\s*' +                  // any number of trailing whitespace characters\n    '$'                       // end-of-string anchor\n  );\n\n  //# parseFloat :: String -> Maybe Number\n  //.\n  //. Takes a string and returns Just the number represented by the string\n  //. if it does in fact represent a number; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseFloat ('-123.45')\n  //. Just (-123.45)\n  //.\n  //. > S.parseFloat ('foo.bar')\n  //. Nothing\n  //. ```\n  function parseFloat_(s) {\n    return validFloatRepr.test (s) ? Just (parseFloat (s)) : Nothing;\n  }\n  _.parseFloat = {\n    consts: {},\n    types: [$.String, $.Maybe ($.Number)],\n    impl: parseFloat_\n  };\n\n  //  Radix :: Type\n  var Radix = $.NullaryType\n    ('Radix')\n    ('')\n    ([$.Integer])\n    (function(x) { return x >= 2 && x <= 36; });\n\n  //# parseInt :: Radix -> String -> Maybe Integer\n  //.\n  //. Takes a radix (an integer between 2 and 36 inclusive) and a string,\n  //. and returns Just the number represented by the string if it does in\n  //. fact represent a number in the base specified by the radix; Nothing\n  //. otherwise.\n  //.\n  //. This function is stricter than [`parseInt`][parseInt]: a string\n  //. is considered to represent an integer only if all its non-prefix\n  //. characters are members of the character set specified by the radix.\n  //.\n  //. ```javascript\n  //. > S.parseInt (10) ('-42')\n  //. Just (-42)\n  //.\n  //. > S.parseInt (16) ('0xFF')\n  //. Just (255)\n  //.\n  //. > S.parseInt (16) ('0xGG')\n  //. Nothing\n  //. ```\n  function parseInt_(radix) {\n    return function(s) {\n      var charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'.slice (0, radix);\n      var pattern = new RegExp ('^[' + charset + ']+$', 'i');\n\n      var t = s.replace (/^[+-]/, '');\n      if (pattern.test (radix === 16 ? t.replace (/^0x/i, '') : t)) {\n        var n = parseInt (s, radix);\n        if ($.test ([]) ($.Integer) (n)) return Just (n);\n      }\n      return Nothing;\n    };\n  }\n  _.parseInt = {\n    consts: {},\n    types: [Radix, $.String, $.Maybe ($.Integer)],\n    impl: parseInt_\n  };\n\n  //# parseJson :: (Any -> Boolean) -> String -> Maybe a\n  //.\n  //. Takes a predicate and a string that may or may not be valid JSON, and\n  //. returns Just the result of applying `JSON.parse` to the string *if* the\n  //. result satisfies the predicate; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[\"1\",\"2\",\"3\"]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[0,1.5,3,4.5]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[1,2,3]')\n  //. Just ([1, 2, 3])\n  //. ```\n  function parseJson(pred) {\n    return B (filter (pred)) (B (eitherToMaybe) (encase (JSON.parse)));\n  }\n  _.parseJson = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, $.Maybe (a)],\n    impl: parseJson\n  };\n\n  //. ### RegExp\n\n  //  Match :: Type\n  var Match = $.RecordType ({\n    match: $.String,\n    groups: $.Array ($.Maybe ($.String))\n  });\n\n  //  toMatch :: Array String? -> Match\n  function toMatch(ss) {\n    return {\n      match: ss[0],\n      groups: Z.map (B (reject (equals (undefined))) (Just), ss.slice (1))\n    };\n  }\n\n  //  withRegex :: (RegExp, () -> a) -> a\n  function withRegex(pattern, thunk) {\n    var lastIndex = pattern.lastIndex;\n    var result = thunk ();\n    pattern.lastIndex = lastIndex;\n    return result;\n  }\n\n  //# regex :: RegexFlags -> String -> RegExp\n  //.\n  //. Takes a [RegexFlags][] and a pattern, and returns a RegExp.\n  //.\n  //. ```javascript\n  //. > S.regex ('g') (':\\\\d+:')\n  //. /:\\d+:/g\n  //. ```\n  function regex(flags) {\n    return function(source) {\n      return new RegExp (source, flags);\n    };\n  }\n  _.regex = {\n    consts: {},\n    types: [$.RegexFlags, $.String, $.RegExp],\n    impl: regex\n  };\n\n  //# regexEscape :: String -> String\n  //.\n  //. Takes a string that may contain regular expression metacharacters,\n  //. and returns a string with those metacharacters escaped.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String.\n  //.      S.test (S.regex ('') (S.regexEscape (s))) (s) = true`\n  //.\n  //. ```javascript\n  //. > S.regexEscape ('-=*{XYZ}*=-')\n  //. '\\\\-=\\\\*\\\\{XYZ\\\\}\\\\*=\\\\-'\n  //. ```\n  function regexEscape(s) {\n    return s.replace (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  _.regexEscape = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: regexEscape\n  };\n\n  //# test :: RegExp -> String -> Boolean\n  //.\n  //. Takes a pattern and a string, and returns `true` [iff][] the pattern\n  //. matches the string.\n  //.\n  //. ```javascript\n  //. > S.test (/^a/) ('abacus')\n  //. true\n  //.\n  //. > S.test (/^a/) ('banana')\n  //. false\n  //. ```\n  function test(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() { return pattern.test (s); });\n    };\n  }\n  _.test = {\n    consts: {},\n    types: [$.RegExp, $.String, $.Boolean],\n    impl: test\n  };\n\n  //# match :: NonGlobalRegExp -> String -> Maybe { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns Just a match record if the\n  //. pattern matches the string; Nothing otherwise.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: Pattern, s :: String.\n  //.      S.head (S.matchAll (S.regex ('g') (p)) (s))\n  //.      = S.match (S.regex ('') (p)) (s)`\n  //.\n  //. See also [`matchAll`](#matchAll).\n  //.\n  //. ```javascript\n  //. > S.match (/(good)?bye/) ('goodbye')\n  //. Just ({match: 'goodbye', groups: [Just ('good')]})\n  //.\n  //. > S.match (/(good)?bye/) ('bye')\n  //. Just ({match: 'bye', groups: [Nothing]})\n  //. ```\n  function match(pattern) {\n    return function(s) {\n      return Z.map (toMatch,\n                    Z.reject (equals (null), Just (s.match (pattern))));\n    };\n  }\n  _.match = {\n    consts: {},\n    types: [$.NonGlobalRegExp, $.String, $.Maybe (Match)],\n    impl: match\n  };\n\n  //# matchAll :: GlobalRegExp -> String -> Array { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns an array of match records.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. See also [`match`](#match).\n  //.\n  //. ```javascript\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, world!')\n  //. []\n  //.\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, @foo! Hello, @bar! Hello, @baz!')\n  //. [ {match: '@foo', groups: [Just ('foo')]},\n  //. . {match: '@bar', groups: [Just ('bar')]},\n  //. . {match: '@baz', groups: [Just ('baz')]} ]\n  //. ```\n  function matchAll(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        return unfoldr (function(_) {\n          return Z.map (function(ss) {\n            return Pair (toMatch (ss)) (null);\n          }, Z.reject (equals (null), Just (pattern.exec (s))));\n        }) ([]);\n      });\n    };\n  }\n  _.matchAll = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array (Match)],\n    impl: matchAll\n  };\n\n  //. ### String\n\n  //# toUpper :: String -> String\n  //.\n  //. Returns the upper-case equivalent of its argument.\n  //.\n  //. See also [`toLower`](#toLower).\n  //.\n  //. ```javascript\n  //. > S.toUpper ('ABC def 123')\n  //. 'ABC DEF 123'\n  //. ```\n  _.toUpper = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toUpperCase')\n  };\n\n  //# toLower :: String -> String\n  //.\n  //. Returns the lower-case equivalent of its argument.\n  //.\n  //. See also [`toUpper`](#toUpper).\n  //.\n  //. ```javascript\n  //. > S.toLower ('ABC def 123')\n  //. 'abc def 123'\n  //. ```\n  _.toLower = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toLowerCase')\n  };\n\n  //# trim :: String -> String\n  //.\n  //. Strips leading and trailing whitespace characters.\n  //.\n  //. ```javascript\n  //. > S.trim ('\\t\\t foo bar \\n')\n  //. 'foo bar'\n  //. ```\n  _.trim = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('trim')\n  };\n\n  //# stripPrefix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given prefix (the first argument) if the string starts\n  //. with the prefix; Nothing otherwise.\n  //.\n  //. See also [`stripSuffix`](#stripSuffix).\n  //.\n  //. ```javascript\n  //. > S.stripPrefix ('https://') ('https://sanctuary.js.org')\n  //. Just ('sanctuary.js.org')\n  //.\n  //. > S.stripPrefix ('https://') ('http://sanctuary.js.org')\n  //. Nothing\n  //. ```\n  function stripPrefix(prefix) {\n    return function(s) {\n      var idx = prefix.length;\n      return s.slice (0, idx) === prefix ? Just (s.slice (idx)) : Nothing;\n    };\n  }\n  _.stripPrefix = {\n    consts: {},\n    types: [$.String, $.String, $.Maybe ($.String)],\n    impl: stripPrefix\n  };\n\n  //# stripSuffix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given suffix (the first argument) if the string ends\n  //. with the suffix; Nothing otherwise.\n  //.\n  //. See also [`stripPrefix`](#stripPrefix).\n  //.\n  //. ```javascript\n  //. > S.stripSuffix ('.md') ('README.md')\n  //. Just ('README')\n  //.\n  //. > S.stripSuffix ('.md') ('README')\n  //. Nothing\n  //. ```\n  function stripSuffix(suffix) {\n    return function(s) {\n      var idx = s.length - suffix.length;  // value may be negative\n      return s.slice (idx) === suffix ? Just (s.slice (0, idx)) : Nothing;\n    };\n  }\n  _.stripSuffix = {\n    consts: {},\n    types: [$.String, $.String, $.Maybe ($.String)],\n    impl: stripSuffix\n  };\n\n  //# words :: String -> Array String\n  //.\n  //. Takes a string and returns the array of words the string contains\n  //. (words are delimited by whitespace characters).\n  //.\n  //. See also [`unwords`](#unwords).\n  //.\n  //. ```javascript\n  //. > S.words (' foo bar baz ')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function words(s) {\n    var words = s.split (/\\s+/);\n    var len = words.length;\n    return words.slice (words[0] === '' ? 1 : 0,\n                        words[len - 1] === '' ? len - 1 : len);\n  }\n  _.words = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: words\n  };\n\n  //# unwords :: Array String -> String\n  //.\n  //. Takes an array of words and returns the result of joining the words\n  //. with separating spaces.\n  //.\n  //. See also [`words`](#words).\n  //.\n  //. ```javascript\n  //. > S.unwords (['foo', 'bar', 'baz'])\n  //. 'foo bar baz'\n  //. ```\n  _.unwords = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: invoke1 ('join') (' ')\n  };\n\n  //# lines :: String -> Array String\n  //.\n  //. Takes a string and returns the array of lines the string contains\n  //. (lines are delimited by newlines: `'\\n'` or `'\\r\\n'` or `'\\r'`).\n  //. The resulting strings do not contain newlines.\n  //.\n  //. See also [`unlines`](#unlines).\n  //.\n  //. ```javascript\n  //. > S.lines ('foo\\nbar\\nbaz\\n')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function lines(s) {\n    return s === '' ? []\n                    : (s.replace (/\\r\\n?/g, '\\n')).match (/^(?=[\\s\\S]).*/gm);\n  }\n  _.lines = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: lines\n  };\n\n  //# unlines :: Array String -> String\n  //.\n  //. Takes an array of lines and returns the result of joining the lines\n  //. after appending a terminating line feed (`'\\n'`) to each.\n  //.\n  //. See also [`lines`](#lines).\n  //.\n  //. ```javascript\n  //. > S.unlines (['foo', 'bar', 'baz'])\n  //. 'foo\\nbar\\nbaz\\n'\n  //. ```\n  function unlines(xs) {\n    return xs.reduce (function(s, x) { return s + x + '\\n'; }, '');\n  }\n  _.unlines = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: unlines\n  };\n\n  //# splitOn :: String -> String -> Array String\n  //.\n  //. Returns the substrings of its second argument separated by occurrences\n  //. of its first argument.\n  //.\n  //. See also [`joinWith`](#joinWith) and [`splitOnRegex`](#splitOnRegex).\n  //.\n  //. ```javascript\n  //. > S.splitOn ('::') ('foo::bar::baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  _.splitOn = {\n    consts: {},\n    types: [$.String, $.String, $.Array ($.String)],\n    impl: invoke1 ('split')\n  };\n\n  //# splitOnRegex :: GlobalRegExp -> String -> Array String\n  //.\n  //. Takes a pattern and a string, and returns the result of splitting the\n  //. string at every non-overlapping occurrence of the pattern.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s)\n  //.                 (S.splitOnRegex (S.regex ('g') (S.regexEscape (s))) (t))\n  //.      = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo, bar, baz')\n  //. ['foo', 'bar', 'baz']\n  //.\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo;bar;baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function splitOnRegex(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        var result = [];\n        var lastIndex = 0;\n        var match;\n        while ((match = pattern.exec (s)) != null) {\n          if (pattern.lastIndex === lastIndex && match[0] === '') {\n            if (pattern.lastIndex === s.length) return result;\n            pattern.lastIndex += 1;\n          } else {\n            result.push (s.slice (lastIndex, match.index));\n            lastIndex = match.index + match[0].length;\n          }\n        }\n        result.push (s.slice (lastIndex));\n        return result;\n      });\n    };\n  }\n  _.splitOnRegex = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array ($.String)],\n    impl: splitOnRegex\n  };\n\n  return create ({\n    checkTypes: typeof process === 'undefined'\n                || process == null\n                || process.env == null\n                || process.env.NODE_ENV !== 'production',\n    env: $.env\n  });\n\n}));\n\n//. [#438]:                     https://github.com/sanctuary-js/sanctuary/issues/438\n//. [#488]:                     https://github.com/sanctuary-js/sanctuary/issues/488\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [Either]:                   #either-type\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Folktale]:                 https://folktale.origamitower.com/\n//. [GIGO]:                     https://en.wikipedia.org/wiki/Garbage_in,_garbage_out\n//. [Haskell]:                  https://www.haskell.org/\n//. [Kleisli]:                  https://en.wikipedia.org/wiki/Kleisli_category\n//. [Maybe]:                    #maybe-type\n//. [Nullable]:                 v:sanctuary-js/sanctuary-def#Nullable\n//. [PureScript]:               http://www.purescript.org/\n//. [Ramda]:                    http://ramdajs.com/\n//. [RegexFlags]:               v:sanctuary-js/sanctuary-def#RegexFlags\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [ValidDate]:                v:sanctuary-js/sanctuary-def#ValidDate\n//. [`$.test`]:                 v:sanctuary-js/sanctuary-def#test\n//. [`Descending`]:             v:sanctuary-js/sanctuary-descending#Descending\n//. [`R.__`]:                   http://ramdajs.com/docs/#__\n//. [`R.bind`]:                 http://ramdajs.com/docs/#bind\n//. [`R.invoker`]:              http://ramdajs.com/docs/#invoker\n//. [`Z.alt`]:                  v:sanctuary-js/sanctuary-type-classes#alt\n//. [`Z.ap`]:                   v:sanctuary-js/sanctuary-type-classes#ap\n//. [`Z.apFirst`]:              v:sanctuary-js/sanctuary-type-classes#apFirst\n//. [`Z.apSecond`]:             v:sanctuary-js/sanctuary-type-classes#apSecond\n//. [`Z.bimap`]:                v:sanctuary-js/sanctuary-type-classes#bimap\n//. [`Z.chain`]:                v:sanctuary-js/sanctuary-type-classes#chain\n//. [`Z.chainRec`]:             v:sanctuary-js/sanctuary-type-classes#chainRec\n//. [`Z.compose`]:              v:sanctuary-js/sanctuary-type-classes#compose\n//. [`Z.concat`]:               v:sanctuary-js/sanctuary-type-classes#concat\n//. [`Z.contramap`]:            v:sanctuary-js/sanctuary-type-classes#contramap\n//. [`Z.duplicate`]:            v:sanctuary-js/sanctuary-type-classes#duplicate\n//. [`Z.empty`]:                v:sanctuary-js/sanctuary-type-classes#empty\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.extend`]:               v:sanctuary-js/sanctuary-type-classes#extend\n//. [`Z.extract`]:              v:sanctuary-js/sanctuary-type-classes#extract\n//. [`Z.filter`]:               v:sanctuary-js/sanctuary-type-classes#filter\n//. [`Z.flip`]:                 v:sanctuary-js/sanctuary-type-classes#flip\n//. [`Z.foldMap`]:              v:sanctuary-js/sanctuary-type-classes#foldMap\n//. [`Z.gt`]:                   v:sanctuary-js/sanctuary-type-classes#gt\n//. [`Z.gte`]:                  v:sanctuary-js/sanctuary-type-classes#gte\n//. [`Z.id`]:                   v:sanctuary-js/sanctuary-type-classes#id\n//. [`Z.invert`]:               v:sanctuary-js/sanctuary-type-classes#invert\n//. [`Z.join`]:                 v:sanctuary-js/sanctuary-type-classes#join\n//. [`Z.lt`]:                   v:sanctuary-js/sanctuary-type-classes#lt\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [`Z.map`]:                  v:sanctuary-js/sanctuary-type-classes#map\n//. [`Z.mapLeft`]:              v:sanctuary-js/sanctuary-type-classes#mapLeft\n//. [`Z.of`]:                   v:sanctuary-js/sanctuary-type-classes#of\n//. [`Z.promap`]:               v:sanctuary-js/sanctuary-type-classes#promap\n//. [`Z.reject`]:               v:sanctuary-js/sanctuary-type-classes#reject\n//. [`Z.sequence`]:             v:sanctuary-js/sanctuary-type-classes#sequence\n//. [`Z.traverse`]:             v:sanctuary-js/sanctuary-type-classes#traverse\n//. [`Z.zero`]:                 v:sanctuary-js/sanctuary-type-classes#zero\n//. [`show`]:                   v:sanctuary-js/sanctuary-show#show\n//. [date parsing]:             https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n//. [equivalence]:              https://en.wikipedia.org/wiki/Equivalence_relation\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [parseInt]:                 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\n//. [partial functions]:        https://en.wikipedia.org/wiki/Partial_function\n//. [ramda/ramda#683]:          https://github.com/ramda/ramda/issues/683\n//. [ramda/ramda#1413]:         https://github.com/ramda/ramda/issues/1413\n//. [ramda/ramda#1419]:         https://github.com/ramda/ramda/pull/1419\n//. [sanctuary-def]:            v:sanctuary-js/sanctuary-def\n//. [sanctuary-either]:         v:sanctuary-js/sanctuary-either\n//. [sanctuary-maybe]:          v:sanctuary-js/sanctuary-maybe\n//. [sanctuary-pair]:           v:sanctuary-js/sanctuary-pair\n//. [sanctuary-show]:           v:sanctuary-js/sanctuary-show\n//. [sanctuary-type-classes]:   v:sanctuary-js/sanctuary-type-classes\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [thrush]:                   https://github.com/raganwald-deprecated/homoiconic/blob/master/2008-10-30/thrush.markdown\n//. [total functions]:          https://en.wikipedia.org/wiki/Partial_function#Total_function\n//. [type checking]:            #type-checking\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n//. [variadic functions]:       https://en.wikipedia.org/wiki/Variadic_function\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Takes a `key` and returns a function that expects an array of objects\r\n * (containing a property equal to `key`) that finally returns an Object<K,V>\r\n * where `K` is the key name used to group all elements of `xs` and `V` is an\r\n * array of elements from `xs` matching the `key` value.\r\n *\r\n * @param {String} key\r\n * @return {function(xs: T[]): Object<K,V>}\r\n *\r\n *   Where `K` is the key name used to group all the elements of `xs`.\r\n *\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * dictGroupByKey (\"name\") (persons); //=> {John: Array[1], James: Array[3], Jack: Array[2]}\r\n *\r\n * //\r\n * // {\r\n * //   \"John\": [\r\n * //     { \"id\": 1, \"name\": \"John\" }\r\n * //   ],\r\n * //   \"James\": [\r\n * //     { \"id\": 2, \"name\": \"James\" },\r\n * //     { \"id\": 4, \"name\": \"James\" },\r\n * //     { \"id\": 6, \"name\": \"James\" }\r\n * //   ],\r\n * //   \"Jack\": [\r\n * //     { \"id\": 3, \"name\": \"Jack\" },\r\n * //     { \"id\": 5, \"name\": \"Jack\" }\r\n * //   ]\r\n * // }\r\n * //\r\n *\r\n */\r\nconst dictGroupByKey = key => S.reduce\r\n  (acc => x => ({ ...acc, [x[key]]: acc[x[key]] ? [...acc[x[key]], x] : [x] }))\r\n  ({})\r\n;\r\n\r\nexport { dictGroupByKey };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Takes a `key`, returns a function that expects an array of objects, finally\r\n * returns an object of unique keys.\r\n *\r\n * @param {String} key\r\n * @return {function(xs: T[]): Object<T<K>, Boolean<True>>}\r\n *\r\n *   Where `K` is the key value on some T and `Boolean<True>` is placeholder.\r\n *\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * dictByKey (\"name\") (persons); //=> { John: true, James: true, Jack: true }\r\n *\r\n */\r\nconst dictByKey = key => S.reduce\r\n  (acc => x => ({ ...acc, [x[key]]: true }))\r\n  ({})\r\n;\r\n\r\nexport { dictByKey };\r\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import { isTruthy } from \"../conditions/isTruthy\";\r\n\r\n/**\r\n * Removes elements of the array that evaluate to false when coerced to Boolean.\r\n *\r\n * filterFalse :: [*] -> [*]\r\n *\r\n * @return {Array}\r\n */\r\nconst filterFalse = xs => Array.prototype.filter.call(xs, isTruthy);\r\n\r\nexport { filterFalse };\r\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('slice') }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","/**\r\n * @param {number} start\r\n * @param {number} end\r\n * @return {function(obj: Object): Object}\r\n * @example\r\n *\r\n * const obj = {apple: 3, banana: 2, orange: 1};\r\n *\r\n * sliceObject({start: 0, end: 1})(obj); //=> {apple: 3}\r\n * sliceObject({start: 0, end: 2})(obj); //=> {apple: 3, banana: 2}\r\n * sliceObject({start: 0, end: 3})(obj); //=> {apple: 3, banana: 2, orange: 1}\r\n * sliceObject({start: 0, end: 9})(obj); //=> {apple: 3, banana: 2, orange: 1}\r\n */\r\nconst sliceObject = ({ start, end }) => obj =>\r\n  Object.keys(obj)\r\n    .slice(start, end)\r\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\r\n\r\nexport { sliceObject };\r\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar nativeSort = [].sort;\nvar test = [1, 2, 3];\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar SLOPPY_METHOD = sloppyArrayMethod('sort');\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || SLOPPY_METHOD;\n\n// `Array.prototype.sort` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? nativeSort.call(toObject(this))\n      : nativeSort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","/**\r\n * @param {Object} counts\r\n * @return {Object}\r\n * @example\r\n *\r\n * const occurrenceCounts = { apple: 3, orange: 1, banana: 2 };\r\n * sortByCountDesc(occurrenceCounts); //=> {apple: 3, banana: 2, orange: 1}\r\n */\r\nconst sortByCountDesc = counts => {\r\n  return Object.keys(counts)\r\n    .sort((a, b) => counts[b] - counts[a])\r\n    .reduce((acc, x) => ((acc[x] = counts[x]), acc), {});\r\n};\r\n\r\nexport { sortByCountDesc };\r\n","import S from \"sanctuary\";\r\nimport { dictByKey } from \"./dictByKey\";\r\n\r\nconst keys = Object.keys;\r\n\r\n/**\r\n * @param {String} key\r\n * @return {function(xs: T[]): String[]}\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * uniqValuesByKey (\"name\") (persons); //=> [\"John\", \"James\", \"Jack\"]\r\n *\r\n */\r\nconst uniqValuesByKey = key => S.pipe([\r\n  dictByKey(key),\r\n  keys\r\n]);\r\n\r\nexport { uniqValuesByKey };\r\n","import { format } from \"date-fns\";\r\n\r\n/**\r\n * @param {Date} date\r\n * @return {string}\r\n */\r\nexport const dateToYmd = date => format(date, \"yyyy-MM-dd\");\r\n","import { isValid, parseISO } from \"date-fns\";\r\n\r\n/**\r\n * A wrapper function over `date-fns` that converts errors arising from\r\n * unparseable dates into a boolean.\r\n *\r\n * @param {Date} x\r\n * @return {boolean}\r\n */\r\nexport function isValidDateISO(x) {\r\n  try {\r\n    return isValid(parseISO(x));\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n","import { format, parseISO } from \"date-fns\";\r\nimport { isValidDateISO } from \"./isValidDateISO\";\r\n\r\n/**\r\n * Attempts to parse a date a date and return the formatted version with given\r\n * style.\r\n *\r\n * @param {string} style\r\n * @return {function(date: string|Date): string} Returns a function that takes\r\n *   a style and returns the formatted date. Returns an empty string if the\r\n *   date could not be parsed.\r\n */\r\nexport const parseDateToStyle = style => date =>\r\n  isValidDateISO(date) ? format(parseISO(date), style) : \"\";\r\n","import { parseDateToStyle } from \"./parseDateToStyle\";\r\n\r\n/**\r\n * @param {string} date\r\n * @return {string} Sunday Monday ... Friday Saturday\r\n */\r\nexport const extractDayOfWeek = date => parseDateToStyle(\"EEEE\")(date);\r\n","import { parseDateToStyle } from \"./parseDateToStyle\";\r\n\r\n/**\r\n * @param {string} date\r\n * @return {string} 1 2 ... 30 31\r\n */\r\nexport const extractDayOfWeekNumber = date => parseDateToStyle(\"dd\")(date);\r\n","import { parseDateToStyle } from \"./parseDateToStyle\";\r\n\r\n/**\r\n * @param {string} date\r\n * @return {string} 00 01 ... 22 23\r\n */\r\nexport const extractHour = date => parseDateToStyle(\"hh\")(date);\r\n","import { parseDateToStyle } from \"./parseDateToStyle\";\r\n\r\n/**\r\n * @param {string} date\r\n * @return {string} January February ... November December\r\n */\r\nexport const extractMonthName = date => parseDateToStyle(\"MMMM\")(date);\r\n","import { parseDateToStyle } from \"./parseDateToStyle\";\r\n\r\n/**\r\n * @param {string} date\r\n * @return {string} 1970 1971 ... 2029 2030\r\n */\r\nexport const extractYear = date => parseDateToStyle(\"yyyy\")(date);\r\n","var redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar nativeDateToString = DatePrototype[TO_STRING];\nvar getTime = DatePrototype.getTime;\n\n// `Date.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-date.prototype.tostring\nif (new Date(NaN) + '' != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? nativeDateToString.call(this) : INVALID_DATE;\n  });\n}\n","import { subMonths } from \"date-fns\";\r\n\r\n/**\r\n * @return {Date} The date one month ago from today.\r\n */\r\nexport const getDateOneMonthAgo = () => subMonths(new Date(), 1);\r\n","import { format } from \"date-fns\";\r\n\r\n/**\r\n * @return {string}\r\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_zone_designators\r\n *\r\n * @example\r\n *\r\n * getISO8601DateWithTimeOffsetFromUTC(); //=> \"2007-04-05T12:30-02:00\"\r\n * getISO8601DateWithTimeOffsetFromUTC(true); //=> \"2020-01-23T14:33:15.4260000-05:00\"\r\n *\r\n */\r\nexport const getISO8601DateWithTimeOffsetFromUTC = (microseconds = false) => {\r\n  return microseconds\r\n    ? format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss.SSSSSSSxxx\")\r\n    : format(new Date(), \"yyyy-MM-dd'T'HH:mm:ssxxx\");\r\n};\r\n","import { format, isValid, parseISO } from \"date-fns\";\r\n\r\n/**\r\n * @param {String} style\r\n * @return {function(date: *): String} The formatted date string of an empty\r\n *   string if the date was not valid.\r\n */\r\nexport const makeDate = style => date =>\r\n  isValid(parseISO(date)) ? format(parseISO(date), style) : \"\";\r\n","import { makeDate } from \"./makeDate\";\r\n\r\nexport const makeReadableDateWithTime = date =>\r\n  makeDate(\"MMM dd, yyyy 'at' HH:mm\")(date);\r\n","import { makeDate } from \"./makeDate\";\r\n\r\nexport const makeSimpleDate = date => makeDate(\"MMM dd, yyyy\")(date);\r\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar PROTOTYPE = 'prototype';\nvar Empty = function () { /* empty */ };\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var length = enumBugKeys.length;\n  var lt = '<';\n  var script = 'script';\n  var gt = '>';\n  var js = 'java' + script + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  iframe.src = String(js);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];\n  return createDict();\n};\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n\nhiddenKeys[IE_PROTO] = true;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  createNonEnumerableProperty(ArrayPrototype, UNSCOPABLES, create(null));\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","/**\r\n * @param {T[]} xs\r\n * @return {T|undefined}\r\n * @example\r\n *\r\n * const xs = [\"a\", \"b\", \"c\"];\r\n *\r\n * first([]); //=> undefined\r\n *\r\n * first(xs); //=> \"a\"\r\n *\r\n * delete xs[0];\r\n * first(xs); //=> \"b\"\r\n *\r\n * delete xs[1];\r\n * first(xs); //=> \"c\"\"\r\n *\r\n * delete xs[2];\r\n * first(xs); //=> undefined\r\n *\r\n */\r\nconst first = xs => xs.find(x => typeof x !== \"undefined\");\r\n\r\nexport { first };\r\n","/**\r\n * head :: [a] -> [a]\r\n *\r\n * @param {T[]} xs\r\n * @return {T[]}\r\n */\r\nconst head = xs => xs.slice(0, 1);\r\n\r\nexport { head };\r\n","/**\r\n * @param {number[]} positions An array of numbers where each number in the\r\n *   array should be greater than the previous number.\r\n * @return {number[][]}\r\n *\r\n * @example\r\n *\r\n * makeRangesBetween([0]); //=> [[0,0]]\r\n * makeRangesBetween([3,21,41,136]); //=> [[0,3], [3,21], [21,41], [41,136]]\r\n * makeRangesBetween([0,-22,3,5,-7,136]); //=> [[0,-22], [-22,3], [3,5], [5,-7], [-7,136]]\r\n */\r\nexport function makeRangesBetween(positions) {\r\n  const out = [];\r\n  for (let i = 0; i < positions.length; i++) {\r\n    const prev = positions[i - 1];\r\n    const curr = positions[i];\r\n    const next = positions[i + 1];\r\n\r\n    // handles cases when only one index value provided like `makeRangesBetween([0])`\r\n    if (prev === undefined && next === undefined) {\r\n      out.push([curr, curr]);\r\n      continue;\r\n    }\r\n\r\n    if (prev === undefined) {\r\n      out.push([curr, next]);\r\n      continue;\r\n    }\r\n\r\n    if (next === undefined) {\r\n      break;\r\n    }\r\n\r\n    out.push([curr, next]);\r\n  }\r\n\r\n  return out;\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('map') }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\r\n * @param {array} xs\r\n * @return {array}\r\n * @see https://stackoverflow.com/a/46545530/1727232\r\n * @see https://en.wikipedia.org/wiki/Schwartzian_transform\r\n */\r\nfunction shuffle(xs) {\r\n  return xs\r\n    .map(x => ({ rand: Math.random(), value: x }))\r\n    .sort((x, y) => x.rand - y.rand)\r\n    .map(x => x.value);\r\n}\r\n\r\nexport { shuffle };\r\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","/**\r\n * tail :: [a] -> a\r\n *\r\n * @param {*[]} xs\r\n * @return {*[]}\r\n */\r\nconst tail = xs => xs.slice(1);\r\n\r\nexport { tail };\r\n","module.exports = {};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, next, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common, IS_MAP, IS_WEAK) {\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar classof = require('../internals/classof');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = String(test) !== '[object z]' ? function toString() {\n  return '[object ' + classof(this) + ']';\n} : test.toString;\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (get) {\n  return function Map() { return get(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong, true);\n","var redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\nvar ObjectPrototype = Object.prototype;\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (toString !== ObjectPrototype.toString) {\n  redefine(ObjectPrototype, 'toString', toString, { unsafe: true });\n}\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar bind = require('../internals/bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar userAgent = require('../internals/user-agent');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (classof(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar classof = require('../internals/classof-raw');\nvar macrotask = require('../internals/task').set;\nvar userAgent = require('../internals/user-agent');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar IS_NODE = classof(process) == 'process';\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  } else if (MutationObserver && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar classof = require('../internals/classof-raw');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = getBuiltIn('fetch');\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar IS_NODE = classof(process) == 'process';\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  // correct subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var empty = function () { /* empty */ };\n  var FakePromise = (promise.constructor = {})[SPECIES] = function (exec) {\n    exec(empty, empty);\n  };\n  // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !((IS_NODE || typeof PromiseRejectionEvent == 'function')\n    && (!IS_PURE || promise['finally'])\n    && promise.then(empty) instanceof FakePromise\n    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // we can't detect it synchronously, so just check versions\n    && V8_VERSION !== 66);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (promise, state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(promise, state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (handler = global['on' + name]) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (promise, state) {\n  task.call(global, function () {\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (promise, state) {\n  task.call(global, function () {\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, promise, state, unwrap) {\n  return function (value) {\n    fn(promise, state, value, unwrap);\n  };\n};\n\nvar internalReject = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(promise, state, true);\n};\n\nvar internalResolve = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, promise, wrapper, state),\n            bind(internalReject, promise, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(promise, wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(promise, state, false);\n    }\n  } catch (error) {\n    internalReject(promise, { done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n    } catch (error) {\n      internalReject(this, state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(this, state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, promise, state);\n    this.reject = bind(internalReject, promise, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    // https://github.com/zloirock/core-js/issues/640\n    }, { unsafe: true });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input /* , init */) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.github.io/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.github.io/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.github.io/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.github.io/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (get) {\n  return function Set() { return get(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","/**\r\n * Adds two numbers together.\r\n *\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @return {Number} The sum of adding two numbers.\r\n */\r\nfunction add(x, y) {\r\n  if (\r\n    Object.prototype.toString.call(x) !== \"[object Number]\" ||\r\n    Object.prototype.toString.call(y) !== \"[object Number]\"\r\n  ) {\r\n    throw new TypeError(\"Supplied arg `x` or `y` is not a valid number\");\r\n  }\r\n\r\n  // try out ES6 features to see transpiled output\r\n  const a = new Promise((resolve, reject) => resolve());\r\n  const b = new Map();\r\n  const values = new Set([x, y]);\r\n\r\n  return [...values].reduce((acc, value) => acc + value, 0);\r\n}\r\n\r\nexport { add };\r\n","/**\r\n * @param {*} x\r\n * @return {String}\r\n * @example\r\n *\r\n * getPrototype({});        //=> \"[object Object]\"\r\n * getPrototype([]);        //=> \"[object Array]\"\r\n * getPrototype(7);         //=> \"[object Number]\"\r\n * getPrototype(\"\");        //=> \"[object String]\"\r\n * getPrototype(true);      //=> \"[object Boolean]\"\r\n * getPrototype(false);     //=> \"[object Boolean]\"\r\n * getPrototype(null);      //=> \"[object Null]\"\r\n * getPrototype(undefined); //=> \"[object Undefined]\"\r\n * getPrototype(void 0);    //=> \"[object Undefined]\"\r\n * getPrototype();          //=> \"[object Undefined]\"\r\n *\r\n */\r\nconst getPrototype = x => Object.prototype.toString.call(x);\r\n\r\nexport { getPrototype };\r\n","import { getPrototype } from \"./getPrototype\";\r\n\r\n/**\r\n * @param {Array} xs\r\n * @return {Boolean}\r\n * @example\r\n *\r\n * isArray([1,2,3]); //=> true\r\n */\r\nconst isArray = xs => {\r\n  if (Array.hasOwnProperty(\"isArray\")) {\r\n    return Array.isArray(xs);\r\n  } else {\r\n    return getPrototype(xs) === \"[object Array]\";\r\n  }\r\n};\r\n\r\nexport { isArray };\r\n","import { getPrototype } from \"./getPrototype\";\r\n\r\nconst isString = x => getPrototype(x) === \"[object String]\";\r\n\r\nexport { isString };\r\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var $ = require('../internals/export');\n\n// `Number.isNaN` method\n// https://tc39.github.io/ecma262/#sec-number.isnan\n$({ target: 'Number', stat: true }, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseFloat = global.parseFloat;\nvar FORCED = 1 / nativeParseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(String(string));\n  var result = nativeParseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : nativeParseFloat;\n","var $ = require('../internals/export');\nvar parseFloatImplementation = require('../internals/parse-float');\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\n$({ global: true, forced: parseFloat != parseFloatImplementation }, {\n  parseFloat: parseFloatImplementation\n});\n","/**\r\n * @param figures\r\n * @return {function(target: String): String} False when the target cannot be\r\n *   parsed, otherwise the string representation of the number rounded to\r\n *   significant figures.\r\n * @example\r\n * toSignificantFigures (2) (\"abc\"); //=> false\r\n * toSignificantFigures (2) (100.999); //=> \"100.99\"\r\n */\r\nconst toSignificantFigures = figures => target =>\r\n  Number.isNaN(parseFloat(target))\r\n    ? false\r\n    : parseFloat(target).toFixed(figures)\r\n  ;\r\n\r\nexport { toSignificantFigures };\r\n","import { getPrototype } from \"../utils\";\r\n\r\n/**\r\n * @param {String} text\r\n * @return {function(target: String): String}\r\n * @example\r\n * append (\"Hello \") (\"world\"); //=> \"Hello world\"\r\n */\r\nconst append = text => target => {\r\n  if (getPrototype(target) === \"[object String]\") {\r\n    return `${target}${text}`;\r\n  }\r\n};\r\n\r\nexport { append };\r\n","/**\r\n * @param {String} x\r\n * @return {String}\r\n */\r\nconst uppercase = x => String.prototype.toUpperCase.call(x);\r\n\r\nexport { uppercase };\r\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n    if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n  }\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","/**\r\n * @param {String} x\r\n * @return {String[]}\r\n */\r\nconst split = x => String.prototype.split.call(x, \"\");\r\n\r\nexport { split };\r\n","import S from \"sanctuary\";\r\nimport { uppercase } from \"./uppercase\";\r\nimport { head, tail } from '../list'\r\nimport { split } from './split'\r\n\r\n/**\r\n * @param {String} x\r\n * @return {String}\r\n */\r\nconst capitalize = x => S.joinWith(\"\") ([\r\n  ...uppercase (head (split (x))),\r\n  ...tail (split (x))\r\n]);\r\n\r\nexport { capitalize };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever the ASCII 32\r\n * `SPACE` character is found.\r\n *\r\n * splitSpace :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitSpace (\"foo bar baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitSpace (\"hello   world\"); //=> [\"hello\", \"\", \"\", \"world\"]\r\n * splitSpace (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitSpace = S.splitOn(\" \");\r\n\r\nexport { splitSpace };\r\n","import { splitSpace } from \"./splitSpace.js\";\r\n\r\n/**\r\n * @param {string} s\r\n * @param {number[][]} indices An array of 2-tuple numbers like `[[0,3], [3,21], [21,41], [41,136]]`\r\n * @return {string[]}\r\n * @example\r\n *\r\n * const str = \"The quick brown fox jumps over the lazy dog\";\r\n * const actual = chunkStringByIndices(str, [[0,3],[3,6]]);\r\n *\r\n * const expected = [\r\n *   { segment: [\"The\", \"quick\", \"brown\"], keyword: false },\r\n *   { segment: [\"fox\"], keyword: true },\r\n *   { segment: [\"jumps\", \"over\"], keyword: false }\r\n * ];\r\n *\r\n * const actual2 = chunkStringByIndices(str, [[0,3],[3,6],[6,9]]);\r\n *\r\n * const expected2 = [\r\n *   { segment: [\"The\", \"quick\", \"brown\"], keyword: false },\r\n *   { segment: [\"fox\"], keyword: true },\r\n *   { segment: [\"jumps\", \"over\"], keyword: false },\r\n *   { segment: [\"the\"], keyword: true },\r\n *   { segment: [\"lazy\", \"dog\"], keyword: false }\r\n * ];\r\n *\r\n */\r\nexport function chunkStringByIndices(s, indices) {\r\n  const ss = splitSpace(s);\r\n  const segments = [];\r\n  for (let i = 0; i < indices.length; i++) {\r\n    const prev = indices[i - 1];\r\n    const curr = indices[i];\r\n    const next = indices[i + 1];\r\n\r\n    // first\r\n    if (prev === undefined) {\r\n      const [from, to] = curr;\r\n      segments.push({ segment: ss.slice(from, to), keyword: false });\r\n      segments.push({ segment: ss.slice(to, to + 1), keyword: true });\r\n    }\r\n\r\n    // in the middle\r\n    if (!!prev && !!next) {\r\n      const [from, to] = curr;\r\n      segments.push({ segment: ss.slice(from + 1, to), keyword: false });\r\n      segments.push({ segment: ss.slice(to, to + 1), keyword: true });\r\n    }\r\n\r\n    // last\r\n    if (next === undefined) {\r\n      const [from, to] = curr;\r\n      segments.push({ segment: ss.slice(from + 1, to), keyword: false });\r\n    }\r\n  }\r\n\r\n  return segments;\r\n}\r\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    return !thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined ? pattern\n      : inheritIfRequired(CORRECT_NEW\n        ? new NativeRegExp(patternIsRegExp && !flagsAreUndefined ? pattern.source : pattern, flags)\n        : NativeRegExp((patternIsRegExp = pattern instanceof RegExpWrapper)\n          ? pattern.source\n          : pattern, patternIsRegExp && flagsAreUndefined ? getFlags.call(pattern) : flags)\n      , thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","import { splitSpace } from \"./splitSpace.js\";\r\n\r\n/**\r\n * Splits the string into an array and finds the indices where the\r\n * keyword is found using a wildcard search on the end of the keyword.\r\n *\r\n * @param {string} s\r\n * @param {string} keyword\r\n * @return {number[]} An array containing the array indices (if any) of where\r\n *   each keyword was after splitting the string into words.\r\n *\r\n * @example\r\n *\r\n * findKeyword(\"The quick brown fox jumps over the lazy dog\", \"the\"); //=> [0,6]\r\n *\r\n */\r\nexport function findKeyword(s, keyword) {\r\n  const ss = splitSpace(s);\r\n  const regex = new RegExp(`(${keyword}[\\\\w]*)`, \"mig\"); //=> /(person[\\w]*)/mig\r\n  return ss.reduce(\r\n    (acc, curr, k) => (regex.test(curr) ? [...acc, k] : acc),\r\n    []\r\n  );\r\n}\r\n","import { findKeyword } from \"./findKeyword.js\";\r\n\r\n/**\r\n * Given a string, will perform a wildcard search on the exploded string for\r\n * each supplied keyword and return an array of index positions found for each\r\n * keyword.\r\n *\r\n * Searching is case insensitive.\r\n *\r\n * @param {string} s\r\n * @param {string[]} keywords\r\n * @return {Object.<string, number[]>} An object containing the keyword and an\r\n *   array of numbers representing the index positions of the supplied string\r\n *   exploded on whitespace.\r\n *\r\n * @example\r\n *\r\n * const s = \"The quick brown fox jumps over the lazy dog\";\r\n * findKeywords(s, [\"the\",\"dog\"]); //=> { \"the\": [0,6], \"dog\": [8] }\r\n *\r\n */\r\nexport function findKeywords(s, keywords) {\r\n  return keywords.reduce(\r\n    (acc, keyword) => ({ ...acc, [keyword]: findKeyword(s, keyword) }),\r\n    {}\r\n  );\r\n}\r\n","import { chunkStringByIndices } from \"./chunkStringByIndices.js\";\r\nimport { findKeywords } from \"./findKeywords.js\";\r\nimport { makeRangesBetween } from \"../list\";\r\nimport { splitSpace } from \"./splitSpace.js\";\r\n\r\n/**\r\n * Breaks apart a string where keywords are found.\r\n *\r\n * @param {string} s\r\n * @param {string[]} keywords\r\n * @return {Object.<string, TextFragment[]>[]}\r\n * @example\r\n *\r\n * const text = \"The quick brown dog jumped over the fox, but why did the dog not bark?\";\r\n * const actual = chunkStringByKeywords(text, [\"brown\", \"dog\"]);\r\n *\r\n * const expected = [\r\n *   { segment: [\"The\", \"quick\"], keyword: false },\r\n *   { segment: [\"brown\"], keyword: true },\r\n *   { segment: [], keyword: false },\r\n *   { segment: [\"dog\"], keyword: true },\r\n *   {\r\n *     segment: [\"jumped\", \"over\", \"the\", \"fox,\", \"but\", \"why\", \"did\", \"the\"],\r\n *     keyword: false\r\n *   },\r\n *   { segment: [\"dog\"], keyword: true },\r\n *   { segment: [\"not\", \"bark?\"], keyword: false }\r\n * ];\r\n *\r\n */\r\nexport function chunkStringByKeywords(s, keywords) {\r\n  const ss = splitSpace(s);\r\n  const matchedKeywordsIndices = findKeywords(s, keywords);\r\n\r\n  // all the keyword indices in the exploded string, sorted ascendingly\r\n  const mergedKeywordIndices = Object.entries(matchedKeywordsIndices)\r\n    .reduce((acc, [k, v]) => [...acc, ...v], [])\r\n    .sort((a, b) => a - b);\r\n\r\n  // iterate through indices, extract words before and after, concat as\r\n  // necessary, and return an array of text fragments representing a string\r\n  // split on keywords\r\n  const stringSplitIndexGroups = makeRangesBetween([0, ...mergedKeywordIndices, ss.length]); // prettier-ignore\r\n\r\n  return chunkStringByIndices(s, stringSplitIndexGroups);\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar SLOPPY_METHOD = sloppyArrayMethod('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || SLOPPY_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","const SPACE = \"\\u0020\";\r\n\r\n/**\r\n * @param {String[]} xs\r\n * @return {String}\r\n */\r\nexport const joinWithSpace = xs => xs.join(SPACE);\r\n","import { joinWithSpace } from \"./joinWithSpace.js\";\r\nimport { splitSpace } from \"./splitSpace.js\";\r\n\r\n/**\r\n * Retrieves a string fragment padded with words around some word positioned at\r\n * index.\r\n *\r\n * @param {string} s The targeted string.\r\n * @param {number} index The array position identifying the desired word once\r\n *   the string has been split on whitespace.\r\n * @param {number} numOfWords The buffer of words before and after the word as\r\n *   identified by `index`.\r\n * @return {string}\r\n *\r\n * @example\r\n *\r\n * const words = \"hello world how are you doing today\";\r\n *\r\n * getSurroundingWords(words, 0, 0); //=> \"hello\"\r\n * getSurroundingWords(words, 0, 1); //=> \"hello world\"\r\n * getSurroundingWords(words, 2, 1); //=> \"world how are\"\r\n * getSurroundingWords(words, 2, 2); //=> \"hello world how are you\"\r\n * getSurroundingWords(words, 2, 3); //=> \"hello world how are you doing\"\r\n * getSurroundingWords(words, 2, 4); //=> \"hello world how are you doing today\"\r\n */\r\nexport function getSurroundingWords(s, index, numOfWords) {\r\n  if (index < 0) {\r\n    throw Error(\"`index` cannot be less than zero\");\r\n  }\r\n\r\n  if (numOfWords < 0) {\r\n    throw Error(\"`numOfWords` cannot be less than zero\");\r\n  }\r\n\r\n  const words = splitSpace(s);\r\n  const wordsBefore =\r\n    index - numOfWords <= 0\r\n      ? words.slice(0, index)\r\n      : words.slice(index - numOfWords, index);\r\n\r\n  const startPos = index + 1;\r\n  const wordsAfter = words.slice(startPos, startPos + numOfWords);\r\n\r\n  return joinWithSpace([...wordsBefore, words[index], ...wordsAfter]);\r\n}\r\n","import { findKeyword } from \"./findKeyword\";\r\nimport { getSurroundingWords } from \"./getSurroundingWords\";\r\n\r\n/**\r\n * @param {string} s\r\n * @param {string[]} keywords\r\n * @param {number} wordBuffer The amount of words around a keyword to return\r\n *   for all instances of keyword matches.\r\n * @return {Object<string, string[]>} For each keyword found in the source\r\n *   string, returns a text fragment with a word buffer starting from the\r\n *   keyword position.\r\n *\r\n * @example\r\n *\r\n * const source = \"The quick brown fox jumps over the lazy dog but, why did the dog not bark at the fox.\";\r\n * const textSurroundingKeywords = getSurroundingWordsAroundKeywords(source, [\"dog\",\"lazy\"], 2);\r\n *\r\n * const output = {\r\n *   dog: [\r\n *     \"the lazy dog but, why\",\r\n *     \"did the dog not bark\"\r\n *   ],\r\n *   lazy: [\r\n *     \"over the lazy dog but,\"\r\n *   ]\r\n * };\r\n *\r\n */\r\nexport function getSurroundingWordsAroundKeywords(s, keywords, wordBuffer) {\r\n  const bufferedKeywordsText = {};\r\n\r\n  // create keyword placeholders\r\n  for (let i = 0; i < keywords.length; i++) {\r\n    bufferedKeywordsText[keywords[i]] = [];\r\n  }\r\n\r\n  // perform word buffering for each keyword\r\n  for (let i = 0; i < keywords.length; i++) {\r\n    const keyword = keywords[i];\r\n    const keywordMatches = findKeyword(s, keyword);\r\n    for (let j = 0; j < keywordMatches.length; j++) {\r\n      bufferedKeywordsText[keyword] = [\r\n        ...bufferedKeywordsText[keyword],\r\n        getSurroundingWords(s, keywordMatches[j], wordBuffer)\r\n      ];\r\n    }\r\n  }\r\n\r\n  return bufferedKeywordsText;\r\n}\r\n","import { getSurroundingWordsAroundKeywords } from \"./getSurroundingWordsAroundKeywords\";\r\nimport { chunkStringByKeywords } from \"./chunkStringByKeywords\";\r\n\r\n/**\r\n * @typedef {{segment: string[], keyword: Boolean}} TextFragment\r\n */\r\n\r\n/**\r\n * @param {string} text\r\n * @param {string[]} keywords\r\n * @param {number} wordBuffer\r\n * @return {Object.<string, TextFragment[]>}\r\n *\r\n * @example\r\n *\r\n * const text = \"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\";\r\n * const actual = getBufferedTextFragmentsAroundKeywords(\r\n *   text,\r\n *   [\"pleasure\", \"great\", \"responsible\"],\r\n *   3\r\n * );\r\n *\r\n * const expected = {\r\n *   pleasure: [\r\n *     [\r\n *       { segment: [\"idea\", \"of\", \"denouncing\"], keyword: false },\r\n *       { segment: [\"pleasure\"], keyword: true },\r\n *       { segment: [\"and\", \"praising\", \"pain\"], keyword: false }\r\n *     ],\r\n *     [\r\n *       { segment: [\"dislikes,\", \"or\", \"avoids\"], keyword: false },\r\n *       { segment: [\"pleasure\"], keyword: true },\r\n *       { segment: [\"itself,\", \"because\", \"it\"], keyword: false }\r\n *     ],\r\n *     [\r\n *       { segment: [\"because\", \"it\", \"is\"], keyword: false },\r\n *       { segment: [\"pleasure,\"], keyword: true },\r\n *       { segment: [\"but\", \"because\", \"those\"], keyword: false }\r\n *     ],\r\n *     [\r\n *       { segment: [\"how\", \"to\", \"pursue\"], keyword: false },\r\n *       { segment: [\"pleasure\"], keyword: true },\r\n *       { segment: [\"rationally\", \"encounter\", \"consequences\"], keyword: false }\r\n *     ],\r\n *     [\r\n *       { segment: [\"him\", \"some\", \"great\"], keyword: false },\r\n *       { segment: [\"pleasure.\"], keyword: true },\r\n *       { segment: [\"To\", \"take\", \"a\"], keyword: false }\r\n *     ],\r\n *     [\r\n *       { segment: [\"to\", \"enjoy\", \"a\"], keyword: false },\r\n *       { segment: [\"pleasure\"], keyword: true },\r\n *       { segment: [\"that\", \"has\", \"no\"], keyword: false }\r\n *     ],\r\n *     [\r\n *       { segment: [\"produces\", \"no\", \"resultant\"], keyword: false },\r\n *       { segment: [\"pleasure?\"], keyword: true },\r\n *       { segment: [], keyword: false }\r\n *     ]\r\n *   ],\r\n *   great: [\r\n *     [\r\n *       { segment: [\"teachings\", \"of\", \"the\"], keyword: false },\r\n *       { segment: [\"great\"], keyword: true },\r\n *       { segment: [\"explorer\", \"of\", \"the\"], keyword: false }\r\n *     ],\r\n *     [\r\n *       { segment: [\"procure\", \"him\", \"some\"], keyword: false },\r\n *       { segment: [\"great\"], keyword: true },\r\n *       { segment: [\"pleasure.\", \"To\", \"take\"], keyword: false }\r\n *     ]\r\n *   ],\r\n *   responsible: []\r\n * };\r\n *\r\n */\r\nexport function getBufferedTextFragmentsAroundKeywords(\r\n  text,\r\n  keywords,\r\n  wordBuffer\r\n) {\r\n  const surroundingWords = getSurroundingWordsAroundKeywords(\r\n    text,\r\n    keywords,\r\n    wordBuffer\r\n  );\r\n\r\n  return Object.entries(surroundingWords).reduce((acc, [k, v]) => {\r\n    acc[k] = surroundingWords[k].map(fragment =>\r\n      chunkStringByKeywords(fragment, [k])\r\n    );\r\n\r\n    return acc;\r\n  }, {});\r\n}\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * @param {String[]} xs\r\n * @return {String}\r\n */\r\nconst joinWithComma = xs => S.joinWith (\",\") (xs);\r\n\r\nexport { joinWithComma };\r\n","import S from \"sanctuary\";\r\nimport { EOL } from \"os\";\r\n\r\n/**\r\n * @param {String[]} xs\r\n * @return {String}\r\n */\r\nconst joinWithNewLine = xs => S.joinWith (EOL) (xs);\r\n\r\nexport { joinWithNewLine };\r\n","/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 CoderPuppy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\nvar _endianness;\nexport function endianness() {\n  if (typeof _endianness === 'undefined') {\n    var a = new ArrayBuffer(2);\n    var b = new Uint8Array(a);\n    var c = new Uint16Array(a);\n    b[0] = 1;\n    b[1] = 2;\n    if (c[0] === 258) {\n      _endianness = 'BE';\n    } else if (c[0] === 513){\n      _endianness = 'LE';\n    } else {\n      throw new Error('unable to figure out endianess');\n    }\n  }\n  return _endianness;\n}\n\nexport function hostname() {\n  if (typeof global.location !== 'undefined') {\n    return global.location.hostname\n  } else return '';\n}\n\nexport function loadavg() {\n  return [];\n}\n\nexport function uptime() {\n  return 0;\n}\n\nexport function freemem() {\n  return Number.MAX_VALUE;\n}\n\nexport function totalmem() {\n  return Number.MAX_VALUE;\n}\n\nexport function cpus() {\n  return [];\n}\n\nexport function type() {\n  return 'Browser';\n}\n\nexport function release () {\n  if (typeof global.navigator !== 'undefined') {\n    return global.navigator.appVersion;\n  }\n  return '';\n}\n\nexport function networkInterfaces(){}\nexport function getNetworkInterfaces(){}\n\nexport function arch() {\n  return 'javascript';\n}\n\nexport function platform() {\n  return 'browser';\n}\n\nexport function tmpDir() {\n  return '/tmp';\n}\nexport var tmpdir = tmpDir;\n\nexport var EOL = '\\n';\nexport default {\n  EOL: EOL,\n  tmpdir: tmpdir,\n  tmpDir: tmpDir,\n  networkInterfaces:networkInterfaces,\n  getNetworkInterfaces: getNetworkInterfaces,\n  release: release,\n  type: type,\n  cpus: cpus,\n  totalmem: totalmem,\n  freemem: freemem,\n  uptime: uptime,\n  loadavg: loadavg,\n  hostname: hostname,\n  endianness: endianness,\n}\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * A curried wrapper around the native `string.replace` function. Function is\r\n * extracted from the sanctuary.js docs.\r\n *\r\n * Does not truncate whitespace.\r\n *\r\n * replaceString :: (String -> (String -> String)) -> String\r\n *\r\n * @see {https://sanctuary.js.org/#curry3}\r\n * @see {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace}\r\n * @example\r\n *\r\n * replaceString (\"bar\") (\"\") (\"foo bar baz\"); //=> \"foo  bar\" (note the double space)\r\n * replaceString (/a/gi) (\"\") (\"foo bar baz\"); //=> \"foo br bz\"\r\n *\r\n */\r\nconst replaceString = S.curry3(function(searchValue, replace, replacee) {\r\n  return String.prototype.replace.call(replacee, searchValue, replace);\r\n});\r\n\r\nexport { replaceString };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * @param {String} x\r\n * @return {String}\r\n * @example\r\n *\r\n * removeCommas(\"hello,world\"); //=> \"helloworld\"\r\n * removeCommas(\"hello, world\"); //=> \"hello world\"\r\n * removeCommas(\"a,b,c\"); //=> abc\r\n *\r\n */\r\nconst removeCommas = x => replaceString (/,/g) (\"\") (x);\r\n\r\nexport { removeCommas };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * Truncates contiguous ASCII 32 `SPACE` chars into one.\r\n *\r\n * truncateSpace :: String -> String\r\n *\r\n * @return {String}\r\n * @see {@link https://stackoverflow.com/a/7151225/1727232}\r\n * @see {@link https://stackoverflow.com/a/1279878/1727232}\r\n * @example truncateSpace (\"hello   world\"); //=> \"hello world\"\r\n */\r\nconst truncateSpace = replaceString (/ {2,}/g) (\" \");\r\n\r\nexport { truncateSpace };\r\n","import S from \"sanctuary\";\r\n\r\nimport { replaceString } from \"./replaceString\";\r\nimport { truncateSpace } from \"./truncateSpace\";\r\n\r\n/**\r\n * Replaces all occurrences of commas with a single space ensuring to truncate\r\n * two or more resulting adjacent spaces to a single space.\r\n *\r\n * In practice, this means that a comma at the beginning or the end of a\r\n * string will be replaced with a whitespace but will not be trimmed.\r\n *\r\n * replaceCommaWithWhitespace :: String -> String\r\n *\r\n * @type {*|*[]}\r\n * @example\r\n *\r\n * replaceCommaWithWhitespace(\"hello,,, world\"); //=> \"hello world\"\r\n * replaceCommaWithWhitespace(\",hello, world\"); //=> \" hello world\"\r\n * replaceCommaWithWhitespace(\"hello, world,\"); //=> \"hello world \"\r\n * replaceCommaWithWhitespace(\",hello,world,\"); //=> \" hello world \"\r\n *\r\n */\r\nconst replaceCommaWithWhitespace = S.pipe([\r\n  replaceString(/,/g)(\" \"),\r\n  truncateSpace\r\n]);\r\n\r\nexport { replaceCommaWithWhitespace };\r\n","/**\r\n * showEither :: String -> String -> String\r\n *\r\n * @param {String} fallback\r\n * @return {function(x: String): String} The `fallback` will always be returned\r\n *   when an empty string or non-string values are supplied for `x`.\r\n *\r\n * @example\r\n *\r\n * showEither(\"n/a\")(\"blue\"); //=> \"blue\"\r\n * showEither(\"n/a\")(\" \");    //=> \" \"\r\n * showEither(\"n/a\")(\"\");     //=> \"n/a\"\r\n * showEither(\"n/a\")(null);   //=> \"n/a\"\r\n * showEither(\"n/a\")(false);  //=> \"n/a\"\r\n * showEither(\"n/a\")(0);      //=> \"n/a\"\r\n *\r\n */\r\nconst showEither = fallback => x => (!!x ? x : fallback);\r\n\r\nexport { showEither };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Returns array of substrings resulting from splitting the original string\r\n * wherever a comma was found.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitComma (\"foo,bar,baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitComma (\"foo, bar, baz\"); //=> [\"foo\", \" bar\", \" baz\"]\r\n * splitComma (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitComma = S.splitOn (\",\");\r\n\r\nexport { splitComma };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Returns array of substrings resulting from splitting the original string\r\n * wherever a comma was found.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitCommaRegex (\"foo,bar,baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitCommaRegex (\"foo, bar, baz\"); //=> [\"foo\", \" bar\", \" baz\"]\r\n * splitCommaRegex (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitCommaRegex = S.splitOnRegex(/,/g);\r\n\r\nexport { splitCommaRegex };\r\n","import S from 'sanctuary'\r\n\r\n/**\r\n * Breaks apart a string into an array of substrings wherever newline\r\n * chars are found - these are `\\r\\n` and `\\n`.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitNewLines (\"hello \\n world\"); //=> [\"hello \", \" world\"]\r\n * splitNewLines (\"hello \\r\\n world\"); //=> [\"hello \", \" world\"]\r\n * splitNewLines (\"hello \\n \\n \\n world\"); //=> [\"hello \", \" \", \" \", \" world\"]\r\n * splitNewLines (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitNewLines = S.splitOnRegex (/\\r\\n|\\n/g);\r\n\r\nexport { splitNewLines }\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever the ASCII 32\r\n * `SPACE` character is found.\r\n *\r\n * splitSpaceRegex :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitSpaceRegex (\"foo bar baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitSpaceRegex (\"hello   world\"); //=> [\"hello\", \"\", \"\", \"world\"]\r\n * splitSpaceRegex (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitSpaceRegex = S.splitOnRegex (/ /g);\r\n\r\nexport { splitSpaceRegex };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever whitespace\r\n * characters are found.\r\n *\r\n * This corresponds to all whitespace characters represented by the `\\s`\r\n * metacharacter in regex.\r\n * - see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\r\n *\r\n * splitWhitespace :: String -> [String]\r\n *\r\n * @return {String}\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\r\n * @see All examples from @{splitSpace} and @{splitSpaceRegex} work in\r\n *   addition to all the remaining forms of whitespace characters.\r\n *\r\n * @example\r\n *\r\n * splitWhitespace (\"hello \\t world\"); //=> \"hello\", \"\", \"\", \"world\"\r\n *\r\n */\r\nconst splitWhitespace = S.splitOnRegex(/\\s/g);\r\n\r\nexport { splitWhitespace };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * Truncates all whitespace chars to a single space char.\r\n *\r\n * truncateWhitespace :: String -> String\r\n *\r\n * @return {String}\r\n * @see {@link https://stackoverflow.com/a/1279874/1727232}\r\n * @example\r\n *\r\n * truncateWhitespace (\"hello   world\"); //=> \"hello world\"\r\n * truncateWhitespace (\"foo \\t \\v bar\"); //=> \"foo bar\"\r\n */\r\nconst truncateWhitespace = replaceString (/\\s+/g) (\" \");\r\n\r\nexport { truncateWhitespace };\r\n"],"names":["empty","x","identity","isTruthy","isFalsy","set","get","has","check","it","Math","globalThis","window","self","global","Function","exec","error","fails","Object","defineProperty","a","nativePropertyIsEnumerable","propertyIsEnumerable","getOwnPropertyDescriptor","call","1","V","descriptor","this","enumerable","bitmap","value","configurable","writable","toString","slice","split","classof","undefined","TypeError","IndexedObject","requireObjectCoercible","input","PREFERRED_STRING","isObject","fn","val","valueOf","hasOwnProperty","key","document","EXISTS","createElement","DESCRIPTORS","nativeGetOwnPropertyDescriptor","O","P","toIndexedObject","toPrimitive","IE8_DOM_DEFINE","createPropertyDescriptor","propertyIsEnumerableModule","f","String","nativeDefineProperty","Attributes","anObject","object","definePropertyModule","createNonEnumerableProperty","setGlobal","module","store","push","version","mode","copyright","shared","WeakMap","test","nativeFunctionToString","id","postfix","random","keys","uid","NATIVE_WEAK_MAP","wmget","wmhas","wmset","metadata","STATE","sharedKey","hiddenKeys","objectHas","enforce","getterFor","TYPE","state","type","getInternalState","InternalStateModule","enforceInternalState","TEMPLATE","options","unsafe","simple","noTargetGet","source","join","prototype","require$$0","aFunction","variable","namespace","method","arguments","length","path","ceil","floor","argument","isNaN","min","toInteger","max","index","integer","createMethod","IS_INCLUDES","$this","el","fromIndex","toLength","toAbsoluteIndex","indexOf","includes","names","i","result","enumBugKeys","concat","getOwnPropertyNames","internalObjectKeys","getOwnPropertySymbols","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","target","ownKeys","getOwnPropertyDescriptorModule","replacement","isForced","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","forced","copyConstructorProperties","sham","redefine","IS_RIGHT","that","callbackfn","argumentsLength","memo","toObject","METHOD_NAME","$reduce","left","right","countOccurrences","xs","reduce","acc","proto","sloppyArrayMethod","match","Array","isArray","arg","propertyKey","Symbol","name","NATIVE_SYMBOL","SPECIES","wellKnownSymbol","originalArray","C","constructor","process","versions","v8","userAgent","V8_VERSION","array","foo","Boolean","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","arrayMethodHasSpeciesSupport","isConcatSpreadable","spreadable","k","len","E","A","arraySpeciesCreate","n","createProperty","create","ctor","superCtor","super_","TempCtor","formatRegExp","format","isString","objects","inspect","args","str","Number","JSON","stringify","_","isNull","deprecate","msg","isUndefined","apply","warned","console","debugEnviron","debugs","debuglog","toUpperCase","RegExp","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","isNumber","formatPrimitive","visibleKeys","hash","forEach","idx","arrayToHash","isError","formatError","isRegExp","isDate","Date","output","base","braces","toUTCString","l","formatProperty","formatArray","map","pop","prev","cur","reduceToSingleString","Error","desc","line","substr","ar","isNullOrUndefined","isSymbol","re","objectToString","d","e","isPrimitive","isBuffer","maybeBuf","Buffer","o","pad","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","regexp","months","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","add","prop","inherits","$$show","entry","show","NaN","toISOString","message","sort","filter","$$type","pattern","parse","s","groups","__doctest","require","List","Maybe","Nil","Cons","Nothing","Just","concat_","ys","constant","y","forEachKey","strMap","pair","sameType","sortedKeys","unary","iterationNext","done","iterationDone","TypeClass","url","dependencies","every","Constructor","Value","_funcPath","allowInheritedProps","_x","funcPath","implPath","implementations","functionName","$","_name","requirements","getBoundMethod","typeRep","m","bind","typeClass","methods","Setoid","equals","Ord","lte","Semigroupoid","compose","Category","Semigroup","Monoid","Group","invert","Filterable","Functor","Bifunctor","bimap","Profunctor","promap","Apply","ap","Applicative","of","Chain","chain","ChainRec","chainRec","Monad","Alt","alt","Plus","zero","Alternative","Foldable","Traversable","traverse","Extend","extend","Comonad","extract","Contravariant","contramap","Array$of","Array$prototype$equals","other","Array$prototype$lte","Array$prototype$concat","Object$prototype$concat","assign","$pairs","Null","fantasy-land/equals","fantasy-land/lte","Undefined","ignoreCase","multiline","sticky","unicode","fantasy-land/empty","fantasy-land/concat","fantasy-land/of","fantasy-land/chainRec","nil","todo","head","tail","more","steps","step","fantasy-land/zero","fantasy-land/filter","pred","fantasy-land/map","fantasy-land/ap","fs","idx2","fantasy-land/chain","fantasy-land/alt","fantasy-land/reduce","initial","fantasy-land/traverse","go","lift2","fantasy-land/extend","Arguments","theseKeys","otherKeys","shift","z","applicative","v","singleton","fantasy-land/id","fantasy-land/compose","semigroupoid","functor","fantasy-land/promap","g","profunctor","fantasy-land/contramap","contravariant","some","p","lt","filterable","bifunctor","applyF","applyX","chain_","foldable","any","b","sortBy","rs","fx","lte_","r","F","traversable","extend_","gt","gte","clamp","lower","upper","group","reject","flip","thrush","mapLeft","lift3","apFirst","apSecond","append","prepend","size","all","none","elem","foldMap","monoid","reverse","takeWhile","take","dropWhile","sequence","duplicate","comonad","Z","S","EitherType","BinaryType","Either","isLeft","env","Unknown","checkTypes","Left$prototype","isRight","@@show","Left$prototype$show","fantasy-land/bimap","Left","Right$prototype","Right$prototype$show","Right","util","require$$2","custom","Left$prototype$equals","Left$prototype$lte","Left$prototype$concat","Right$prototype$equals","Right$prototype$lte","Right$prototype$concat","next","tag","either","require$$1","MAX_SAFE_INTEGER","pow","MIN_SAFE_INTEGER","B","I","K","W","always2","complement","init","isEmpty","isPrefix","candidate","joinWith","separator","ss","last","memberOf","or","field","record","sizeEq","strRepeat","times","c","toArray","toMarkdownList","trimTrailingSpaces","when","bool","wrap","prefix","suffix","parenthesize","q","stripNamespace","_test","recur","t","supertypes","Type$prototype","@@type","validate","test2","propPath","types","extractors","_Type","arity","tuples","_extractors","tuple","outer","inner","BINARY","FUNCTION","INCONSISTENT","NO_ARGUMENTS","NULLARY","RECORD","UNARY","UNKNOWN","VARIABLE","Inconsistent","NoArguments","arityGte","typeEq","typeofEq","typeof_","functionUrl","NullaryTypeWithUrl","NullaryType","UnaryTypeWithUrl","UnaryType","BinaryTypeWithUrl","Any","AnyFunction","Array_","Array0","Array1","Array2","array2","Boolean_","Date_","ValidDate","Descending","Either_","Error_","Fn","$1","$2","Function_","HtmlElement","Identity","NonEmpty","Nullable","nullable","Number_","nonZero","positive","negative","PositiveNumber","NegativeNumber","ValidNumber","NonZeroValidNumber","FiniteNumber","isFinite","NonZeroFiniteNumber","PositiveFiniteNumber","NegativeFiniteNumber","Integer","NonZeroInteger","NonNegativeInteger","PositiveInteger","NegativeInteger","Object_","Pair","fst","snd","RegExp_","GlobalRegExp","NonGlobalRegExp","StrMap","String_","RegexFlags","Symbol_","Type","Unchecked","production","NODE_ENV","numbers","numArgs","expandUnknown","extractor","_determineActualTypes","values","expandUnknown4","seen$","expandUnknown2","fromUnaryType","fromBinaryType","isConsistent","determineActualTypesLoose","updateTypeVarMap","typeVarMap","typeVar","$typeVarMap","typeVarName","$entry","valuesByPath","isValid","expandUnknownStrict","expandUnknownStrict2","satisfactoryTypes","typeInfo","expType","invalidValue","constraints","typeClasses","typeClassConstraintViolation","typeVarMap$","okTypes","typeVarConstraintViolation","offset","$1s","$2s","_1","_2","RecordType","fields","reprs","missing","typeVarPred","test1","invalidArgumentsCount","numArgsExpected","index_","constraintsRepr","$reprs","typeVarNames","showTypeWith","code","charCodeAt","fromCharCode","showValuesAndTypes","pos","showType","typeSignature","_underline","formatType3","underlineConstraint","formatType5","st","formatType4","carets","label","delta","counter","resolvePropPath","formatType6","indexedPropPath","propPath_","indexedPropPath_","see","tvn","tc","values_","determineActualTypesStrict","underlinedTypeVars","paths","underlineTypeVars","$valuesByPath","invalidArgumentsLength","assertRight","defTypes","def","expTypes","impl","wrapFunctionCond","_typeVarMap","checkValue","wrapped","wrapNext","_values","withTypeChecking","fromUncheckedUnaryType","typeConstructor","fromUncheckedBinaryType","EnumType","NamedRecordType","TypeVariable","UnaryTypeVariable","BinaryTypeVariable","Thunk","Predicate","require$$3","require$$4","MaybeType","isJust","Nothing$prototype","isNothing","Nothing$prototype$show","Just$prototype","Just$prototype$show","just","Just$prototype$equals","Just$prototype$lte","Just$prototype$concat","maybe","PairType","Pair$prototype$show","fantasy-land/extract","Pair$prototype$equals","Pair$prototype$lte","Pair$prototype$concat","Pair$prototype$ap","Pair$prototype$chain","iterator","swap","Sum","S_","require$$7","get_","invoke0","invoke1","w","TypeRep","Options","is","consts","unchecked","T","curry2","curry3","curry4","maybe_","thunk","justs","maybes","encase","err","eitherToMaybe","not","ifElse","_takeDrop","arrayCase","generalCase","curry5","pipe","pipeK","on","fromMaybe","fromMaybe_","maybeToNullable","mapMaybe","maybeToEither","fromEither","lefts","rights","tagBy","and","unless","drop","unfoldr","zipWith","mult","requiredNonCapturingGroup","takeLast","dropLast","find","range","from","to","groupBy","x0","active","zip","props","gets","insert","remove","pairs","fromPairs","negate","sum","sub","product","div","exp","mean","total","count","even","odd","parseDate","validFloatRepr","parseFloat","Radix","parseInt","radix","charset","parseJson","Match","toMatch","withRegex","lastIndex","regex","flags","regexEscape","matchAll","toUpper","toLower","trim","stripPrefix","stripSuffix","words","unwords","lines","unlines","splitOn","splitOnRegex","require$$5","require$$6","dictGroupByKey","dictByKey","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","specificCreate","boundFunction","findIndex","$filter","filterFalse","nativeSlice","start","end","fin","FAILS_ON_PRIMITIVES","nativeKeys","sliceObject","nativeSort","FAILS_ON_UNDEFINED","FAILS_ON_NULL","SLOPPY_METHOD","comparefn","sortByCountDesc","counts","uniqValuesByKey","dateToYmd","isValidDateISO","parseISO","parseDateToStyle","extractDayOfWeek","extractDayOfWeekNumber","extractHour","extractMonthName","extractYear","DatePrototype","nativeDateToString","getTime","getDateOneMonthAgo","subMonths","getISO8601DateWithTimeOffsetFromUTC","microseconds","makeDate","makeReadableDateWithTime","makeSimpleDate","defineProperties","Properties","objectKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","documentCreateElement","display","html","appendChild","src","contentWindow","open","write","close","UNSCOPABLES","ArrayPrototype","$find","SKIPS_HOLES","addToUnscopables","first","makeRangesBetween","positions","out","curr","$map","shuffle","rand","IteratorPrototype","PrototypeOfArrayIteratorPrototype","arrayIterator","getPrototypeOf","ObjectPrototype","CORRECT_PROTOTYPE_GETTER","ITERATOR","BUGGY_SAFARI_ITERATORS","TO_STRING_TAG","TAG","returnThis","setPrototypeOf","setter","CORRECT_SETTER","aPossiblePrototype","__proto__","IteratorsCore","Iterable","NAME","IteratorConstructor","DEFAULT","IS_SET","FORCED","setToStringTag","Iterators","createIteratorConstructor","CurrentIteratorPrototype","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","setInternalState","defineIterator","iterated","kind","isExtensible","preventExtensions","METADATA","setMetadata","objectID","weakData","meta","REQUIRED","fastKey","getWeakData","onFreeze","FREEZING","CORRECT_ARGUMENTS","classofRaw","tryGet","callee","ENTRIES","returnMethod","Result","stopped","iterable","AS_ENTRIES","IS_ITERATOR","iterFn","getIteratorMethod","callWithSafeIterationClosing","stop","SAFE_CLOSING","called","iteratorWithReturn","return","SKIP_CLOSING","ITERATION_SUPPORT","dummy","Wrapper","NewTarget","NewTargetPrototype","CONSTRUCTOR_NAME","wrapper","common","IS_WEAK","NativeConstructor","NativePrototype","ADDER","exported","fixMethod","nativeMethod","getConstructor","InternalMetadataModule","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","checkCorrectnessOfIteration","BUGGY_ZERO","$instance","anInstance","inheritIfRequired","iterate","clear","setStrong","internalStateGetterFor","define","previous","getEntry","removed","redefineAll","delete","ITERATOR_NAME","getInternalCollectionState","getInternalIteratorState","setSpecies","collection","collectionStrong","defer","channel","port","Promise","defaultConstructor","location","setImmediate","clearImmediate","MessageChannel","Dispatch","queue","run","runner","listener","event","post","postMessage","protocol","host","nextTick","now","port2","port1","onmessage","addEventListener","importScripts","removeChild","setTimeout","flush","notify","toggle","node","promise","then","macrotask","MutationObserver","WebKitMutationObserver","IS_NODE","queueMicrotaskDescriptor","queueMicrotask","parent","domain","exit","enter","createTextNode","observe","characterData","resolve","Internal","OwnPromiseCapability","PromiseWrapper","nativeThen","task","PromiseCapability","$$resolve","$$reject","promiseCapability","newPromiseCapability","PROMISE","getInternalPromiseState","PromiseConstructor","NativePromise","$fetch","newPromiseCapabilityModule","newGenericPromiseCapability","DISPATCH_EVENT","createEvent","dispatchEvent","FakePromise","PromiseRejectionEvent","INCORRECT_ITERATION","isThenable","isReject","notified","reactions","microtask","ok","exited","reaction","handler","fail","rejection","onHandleUnhandled","onUnhandled","reason","initEvent","hostReportErrors","isUnhandled","perform","emit","unwrap","internalReject","internalResolve","executor","onFulfilled","onRejected","speciesConstructor","catch","fetch","promiseResolve","capability","$promiseResolve","remaining","alreadyCalled","race","dotAll","RegExpPrototype","nativeToString","NOT_GENERIC","INCORRECT_NAME","R","rf","CONVERT_TO_STRING","second","position","charAt","codeAt","point","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","ArrayValues","ArrayIteratorMethods","COLLECTION_NAME","DOMIterables","Collection","CollectionPrototype","_toConsumableArray","Set","getPrototype","whitespace","whitespaces","ltrim","rtrim","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","third","maxCode","digits","NumberWrapper","j","repeat","Infinity","RangeError","nativeToFixed","toFixed","fractionDigits","thisNumberValue","fractDigits","sign","multiply","c2","divide","dataToString","x2","nativeParseFloat","trimmedString","parseFloatImplementation","toSignificantFigures","figures","text","uppercase","nativeExec","nativeReplace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","reCopy","regexpFlags","REPLACE_SUPPORTS_NAMED_GROUPS","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","arg2","forceStringMethod","regexpExec","stringMethod","regexMethod","MATCH","arrayPush","SUPPORTS_Y","SPLIT","nativeSplit","maybeCallNative","internalSplit","limit","lim","lastLength","lastLastIndex","separatorCopy","splitter","res","rx","unicodeMatching","callRegExpExec","advanceStringIndex","capitalize","splitSpace","chunkStringByIndices","indices","segments","segment","keyword","TO_ENTRIES","$entries","NativeRegExp","CORRECT_NEW","RegExpWrapper","thisIsRegExp","patternIsRegExp","flagsAreUndefined","getFlags","proxy","findKeyword","findKeywords","keywords","chunkStringByKeywords","matchedKeywordsIndices","mergedKeywordIndices","nativeJoin","ES3_STRINGS","joinWithSpace","getSurroundingWords","numOfWords","wordsBefore","startPos","wordsAfter","getSurroundingWordsAroundKeywords","wordBuffer","bufferedKeywordsText","keywordMatches","getBufferedTextFragmentsAroundKeywords","surroundingWords","fragment","joinWithComma","joinWithNewLine","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","REPLACE","searchValue","replaceValue","replacer","functionalReplace","fullUnicode","results","regExpExec","accumulatedResult","nextSourcePosition","matched","captures","namedCaptures","replacerArgs","getSubstitution","tailPos","symbols","ch","capture","replaceString","replacee","removeCommas","truncateSpace","replaceCommaWithWhitespace","showEither","fallback","splitComma","splitCommaRegex","splitNewLines","splitSpaceRegex","splitWhitespace","truncateWhitespace"],"mappings":"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"}