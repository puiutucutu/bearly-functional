{"version":3,"file":"bearly-functional.umd.js","sources":["../src/conditions/empty.js","../src/conditions/identity.js","../node_modules/core-js/internals/global.js","../node_modules/core-js/internals/internal-state.js","../node_modules/core-js/internals/fails.js","../node_modules/core-js/internals/descriptors.js","../node_modules/core-js/internals/object-property-is-enumerable.js","../node_modules/core-js/internals/create-property-descriptor.js","../node_modules/core-js/internals/classof-raw.js","../node_modules/core-js/internals/indexed-object.js","../node_modules/core-js/internals/require-object-coercible.js","../node_modules/core-js/internals/to-indexed-object.js","../node_modules/core-js/internals/is-object.js","../node_modules/core-js/internals/to-primitive.js","../node_modules/core-js/internals/has.js","../node_modules/core-js/internals/document-create-element.js","../node_modules/core-js/internals/ie8-dom-define.js","../node_modules/core-js/internals/object-get-own-property-descriptor.js","../node_modules/core-js/internals/an-object.js","../node_modules/core-js/internals/object-define-property.js","../node_modules/core-js/internals/hide.js","../node_modules/core-js/internals/set-global.js","../node_modules/core-js/internals/shared.js","../node_modules/core-js/internals/function-to-string.js","../node_modules/core-js/internals/native-weak-map.js","../node_modules/core-js/internals/uid.js","../node_modules/core-js/internals/shared-key.js","../node_modules/core-js/internals/hidden-keys.js","../node_modules/core-js/internals/redefine.js","../node_modules/core-js/internals/path.js","../node_modules/core-js/internals/get-built-in.js","../node_modules/core-js/internals/to-integer.js","../node_modules/core-js/internals/to-length.js","../node_modules/core-js/internals/to-absolute-index.js","../node_modules/core-js/internals/array-includes.js","../node_modules/core-js/internals/object-keys-internal.js","../node_modules/core-js/internals/enum-bug-keys.js","../node_modules/core-js/internals/object-get-own-property-names.js","../node_modules/core-js/internals/object-get-own-property-symbols.js","../node_modules/core-js/internals/own-keys.js","../node_modules/core-js/internals/copy-constructor-properties.js","../node_modules/core-js/internals/is-forced.js","../node_modules/core-js/internals/export.js","../node_modules/core-js/internals/is-array.js","../node_modules/core-js/internals/to-object.js","../node_modules/core-js/internals/create-property.js","../node_modules/core-js/internals/native-symbol.js","../node_modules/core-js/internals/well-known-symbol.js","../node_modules/core-js/internals/array-species-create.js","../node_modules/core-js/internals/array-method-has-species-support.js","../node_modules/core-js/modules/es.array.concat.js","../node_modules/sanctuary-show/index.js","../node_modules/sanctuary-type-identifiers/index.js","../node_modules/sanctuary-def/node_modules/sanctuary-either/node_modules/sanctuary-type-classes/index.js","../node_modules/sanctuary-def/node_modules/sanctuary-either/index.js","../node_modules/sanctuary-type-classes/index.js","../node_modules/sanctuary-def/index.js","../node_modules/sanctuary-either/index.js","../node_modules/sanctuary-maybe/index.js","../node_modules/sanctuary-pair/index.js","../node_modules/sanctuary/index.js","../src/data/dictGroupByKey.js","../src/data/dictByKey.js","../node_modules/core-js/internals/a-function.js","../node_modules/core-js/internals/bind-context.js","../node_modules/core-js/internals/array-iteration.js","../node_modules/core-js/modules/es.array.filter.js","../src/conditions/isFalse.js","../src/data/filterFalse.js","../node_modules/core-js/internals/object-keys.js","../node_modules/core-js/modules/es.object.keys.js","../src/data/uniqValuesByKey.js","../node_modules/core-js/internals/object-define-properties.js","../node_modules/core-js/internals/html.js","../node_modules/core-js/internals/object-create.js","../node_modules/core-js/internals/add-to-unscopables.js","../node_modules/core-js/internals/iterators-core.js","../node_modules/core-js/internals/iterators.js","../node_modules/core-js/internals/correct-prototype-getter.js","../node_modules/core-js/internals/object-get-prototype-of.js","../node_modules/core-js/internals/set-to-string-tag.js","../node_modules/core-js/internals/create-iterator-constructor.js","../node_modules/core-js/internals/object-set-prototype-of.js","../node_modules/core-js/internals/a-possible-prototype.js","../node_modules/core-js/internals/define-iterator.js","../node_modules/core-js/modules/es.array.iterator.js","../node_modules/core-js/internals/freezing.js","../node_modules/core-js/internals/internal-metadata.js","../node_modules/core-js/internals/is-array-iterator-method.js","../node_modules/core-js/internals/classof.js","../node_modules/core-js/internals/get-iterator-method.js","../node_modules/core-js/internals/call-with-safe-iteration-closing.js","../node_modules/core-js/internals/iterate.js","../node_modules/core-js/internals/an-instance.js","../node_modules/core-js/internals/check-correctness-of-iteration.js","../node_modules/core-js/internals/collection.js","../node_modules/core-js/internals/inherit-if-required.js","../node_modules/core-js/internals/redefine-all.js","../node_modules/core-js/internals/set-species.js","../node_modules/core-js/internals/collection-strong.js","../node_modules/core-js/internals/object-to-string.js","../node_modules/core-js/modules/es.map.js","../node_modules/core-js/modules/es.object.to-string.js","../node_modules/core-js/internals/native-promise-constructor.js","../node_modules/core-js/internals/task.js","../node_modules/core-js/internals/species-constructor.js","../node_modules/core-js/internals/microtask.js","../node_modules/core-js/internals/user-agent.js","../node_modules/core-js/modules/es.promise.js","../node_modules/core-js/internals/new-promise-capability.js","../node_modules/core-js/internals/promise-resolve.js","../node_modules/core-js/internals/perform.js","../node_modules/core-js/internals/host-report-errors.js","../node_modules/core-js/internals/regexp-flags.js","../node_modules/core-js/modules/es.regexp.to-string.js","../node_modules/core-js/modules/es.set.js","../node_modules/core-js/internals/string-multibyte.js","../node_modules/core-js/modules/es.string.iterator.js","../node_modules/core-js/internals/dom-iterables.js","../node_modules/core-js/modules/web.dom-collections.iterator.js","../src/math/add.js","../node_modules/core-js/internals/regexp-exec.js","../src/strings/joinWithComma.js","../src/strings/joinWithNewLine.js","../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","../node_modules/core-js/internals/advance-string-index.js","../node_modules/core-js/internals/regexp-exec-abstract.js","../node_modules/core-js/modules/es.string.replace.js","../src/strings/replaceString.js","../src/strings/removeCommas.js","../src/strings/truncateSpace.js","../src/strings/replaceCommaWithWhitespace.js","../src/strings/splitComma.js","../src/strings/splitCommaRegex.js","../src/strings/splitNewLines.js","../src/strings/splitSpace.js","../src/strings/splitSpaceRegex.js","../src/strings/splitWhitespace.js","../src/strings/truncateWhitespace.js","../src/utils/getPrototype.js"],"sourcesContent":["const empty = x => !!x; // a -> Boolean\r\n\r\nexport { empty };\r\n","const identity = x => x; // a -> a\r\n\r\nexport { identity };\r\n","var O = 'object';\nvar check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == O && globalThis) ||\n  check(typeof window == O && window) ||\n  check(typeof self == O && self) ||\n  check(typeof global == O && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar hide = require('../internals/hide');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    hide(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar hide = require('../internals/hide');\n\nmodule.exports = function (key, value) {\n  try {\n    hide(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\nvar IS_PURE = require('../internals/is-pure');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.2.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var shared = require('../internals/shared');\n\nmodule.exports = shared('native-function-to-string', Function.toString);\n","var global = require('../internals/global');\nvar nativeFunctionToString = require('../internals/function-to-string');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hide = require('../internals/hide');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar nativeFunctionToString = require('../internals/function-to-string');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(nativeFunctionToString).split('toString');\n\nshared('inspectSource', function (it) {\n  return nativeFunctionToString.call(it);\n});\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else hide(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);\n});\n","module.exports = require('../internals/global');\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      hide(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar Symbol = global.Symbol;\nvar store = shared('wks');\n\nmodule.exports = function (name) {\n  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]\n    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  return !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\nvar IS_CONCAT_SPREADABLE_SUPPORT = !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","//. # sanctuary-show\n//.\n//. Haskell has a `show` function which can be applied to a compatible value to\n//. produce a descriptive string representation of that value. The idea is that\n//. the string representation should, if possible, be an expression which would\n//. produce the original value if evaluated.\n//.\n//. This library provides a similar [`show`](#show) function.\n//.\n//. In general, this property should hold: `eval (show (x)) = x`. In some cases\n//. parens are necessary to ensure correct interpretation (`{}`, for example,\n//. is an empty block rather than an empty object in some contexts). Thus the\n//. property is more accurately stated `eval ('(' + show (x) + ')') = x`.\n//.\n//. One can make values of a custom type compatible with [`show`](#show) by\n//. defining a `@@show` method. For example:\n//.\n//. ```javascript\n//. //# Maybe#@@show :: Maybe a ~> () -> String\n//. //.\n//. //. ```javascript\n//. //. > show (Nothing)\n//. //. 'Nothing'\n//. //.\n//. //. > show (Just (['foo', 'bar', 'baz']))\n//. //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n//. //. ```\n//. Maybe.prototype['@@show'] = function() {\n//.   return this.isNothing ? 'Nothing' : 'Just (' + show (this.value) + ')';\n//. };\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryShow = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$show :: String\n  var $$show = '@@show';\n\n  //  seen :: Array Any\n  var seen = [];\n\n  //  entry :: Object -> String -> String\n  function entry(o) {\n    return function(k) {\n      return show(k) + ': ' + show(o[k]);\n    };\n  }\n\n  //# show :: Showable a => a -> String\n  //.\n  //. Returns a useful string representation of the given value.\n  //.\n  //. Dispatches to the value's `@@show` method if present.\n  //.\n  //. Where practical, `show (eval ('(' + show (x) + ')')) = show (x)`.\n  //.\n  //. ```javascript\n  //. > show (null)\n  //. 'null'\n  //.\n  //. > show (undefined)\n  //. 'undefined'\n  //.\n  //. > show (true)\n  //. 'true'\n  //.\n  //. > show (new Boolean (false))\n  //. 'new Boolean (false)'\n  //.\n  //. > show (-0)\n  //. '-0'\n  //.\n  //. > show (NaN)\n  //. 'NaN'\n  //.\n  //. > show (new Number (Infinity))\n  //. 'new Number (Infinity)'\n  //.\n  //. > show ('foo\\n\"bar\"\\nbaz\\n')\n  //. '\"foo\\\\n\\\\\"bar\\\\\"\\\\nbaz\\\\n\"'\n  //.\n  //. > show (new String (''))\n  //. 'new String (\"\")'\n  //.\n  //. > show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > show ([[[[[0]]]]])\n  //. '[[[[[0]]]]]'\n  //.\n  //. > show ({x: [1, 2], y: [3, 4], z: [5, 6]})\n  //. '{\"x\": [1, 2], \"y\": [3, 4], \"z\": [5, 6]}'\n  //. ```\n  function show(x) {\n    if (seen.indexOf(x) >= 0) return '<Circular>';\n\n    switch (Object.prototype.toString.call(x)) {\n\n      case '[object Boolean]':\n        return typeof x === 'object' ?\n          'new Boolean (' + show(x.valueOf()) + ')' :\n          x.toString();\n\n      case '[object Number]':\n        return typeof x === 'object' ?\n          'new Number (' + show(x.valueOf()) + ')' :\n          1 / x === -Infinity ? '-0' : x.toString(10);\n\n      case '[object String]':\n        return typeof x === 'object' ?\n          'new String (' + show(x.valueOf()) + ')' :\n          JSON.stringify(x);\n\n      case '[object Date]':\n        return 'new Date (' +\n               show(isNaN(x.valueOf()) ? NaN : x.toISOString()) +\n               ')';\n\n      case '[object Error]':\n        return 'new ' + x.name + ' (' + show(x.message) + ')';\n\n      case '[object Arguments]':\n        return 'function () { return arguments; } (' +\n               Array.prototype.map.call(x, show).join(', ') +\n               ')';\n\n      case '[object Array]':\n        seen.push(x);\n        try {\n          return '[' + x.map(show).concat(\n            Object.keys(x)\n            .sort()\n            .filter(function(k) { return !/^\\d+$/.test(k); })\n            .map(entry(x))\n          ).join(', ') + ']';\n        } finally {\n          seen.pop();\n        }\n\n      case '[object Object]':\n        seen.push(x);\n        try {\n          return (\n            $$show in x &&\n            (x.constructor == null || x.constructor.prototype !== x) ?\n              x[$$show]() :\n              '{' + Object.keys(x).sort().map(entry(x)).join(', ') + '}'\n          );\n        } finally {\n          seen.pop();\n        }\n\n      default:\n        return String(x);\n\n    }\n  }\n\n  return show;\n\n}));\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. sanctuary-type-identifiers comprises:\n//.\n//.   - an npm and browser -compatible package for deriving the\n//.     _type identifier_ of a JavaScript value; and\n//.   - a specification which authors may follow to specify type\n//.     identifiers for their types.\n//.\n//. ### Specification\n//.\n//. For a type to be compatible with the algorithm:\n//.\n//.   - every member of the type MUST have a `constructor` property\n//.     pointing to an object known as the _type representative_;\n//.\n//.   - the type representative MUST have a `@@type` property\n//.     (the _type identifier_); and\n//.\n//.   - the type identifier MUST be a string primitive and SHOULD have\n//.     format `'<namespace>/<name>[@<version>]'`, where:\n//.\n//.       - `<namespace>` MUST consist of one or more characters, and\n//.         SHOULD equal the name of the npm package which defines the\n//.         type (including [scope][3] where appropriate);\n//.\n//.       - `<name>` MUST consist of one or more characters, and SHOULD\n//.         be the unique name of the type; and\n//.\n//.       - `<version>` MUST consist of one or more digits, and SHOULD\n//.         represent the version of the type.\n//.\n//. If the type identifier does not conform to the format specified above,\n//. it is assumed that the entire string represents the _name_ of the type;\n//. _namespace_ will be `null` and _version_ will be `0`.\n//.\n//. If the _version_ is not given, it is assumed to be `0`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  pattern :: RegExp\n  var pattern = new RegExp(\n    '^'\n  + '([\\\\s\\\\S]+)'   //  <namespace>\n  + '/'             //  SOLIDUS (U+002F)\n  + '([\\\\s\\\\S]+?)'  //  <name>\n  + '(?:'           //  optional non-capturing group {\n  +   '@'           //    COMMERCIAL AT (U+0040)\n  +   '([0-9]+)'    //    <version>\n  + ')?'            //  }\n  + '$'\n  );\n\n  //. ### Usage\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //. ```\n  //.\n  //. ```javascript\n  //. > function Identity(x) {\n  //. .   if (!(this instanceof Identity)) return new Identity(x);\n  //. .   this.value = x;\n  //. . }\n  //. . Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. > type.parse(type(Identity(0)))\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  //.\n  //. ### API\n  //.\n  //# type :: Any -> String\n  //.\n  //. Takes any value and returns a string which identifies its type. If the\n  //. value conforms to the [specification][4], the custom type identifier is\n  //. returned.\n  //.\n  //. ```javascript\n  //. > type(null)\n  //. 'Null'\n  //.\n  //. > type(true)\n  //. 'Boolean'\n  //.\n  //. > type(Identity(0))\n  //. 'my-package/Identity@1'\n  //. ```\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  //# type.parse :: String -> { namespace :: Nullable String, name :: String, version :: Number }\n  //.\n  //. Takes any string and parses it according to the [specification][4],\n  //. returning an object with `namespace`, `name`, and `version` fields.\n  //.\n  //. ```javascript\n  //. > type.parse('my-package/List@2')\n  //. {namespace: 'my-package', name: 'List', version: 2}\n  //.\n  //. > type.parse('nonsense!')\n  //. {namespace: null, name: 'nonsense!', version: 0}\n  //.\n  //. > type.parse(Identity['@@type'])\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  type.parse = function parse(s) {\n    var groups = pattern.exec(s);\n    return {\n      namespace: groups == null || groups[1] == null ? null : groups[1],\n      name:      groups == null                      ? s    : groups[2],\n      version:   groups == null || groups[3] == null ? 0    : Number(groups[3])\n    };\n  };\n\n  return type;\n\n}));\n\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: https://docs.npmjs.com/misc/scope\n//. [4]: #specification\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f (self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require ('sanctuary-identity');\n    var List = __doctest.require ('./test/List');\n    var Maybe = __doctest.require ('sanctuary-maybe');\n    var Pair = __doctest.require ('sanctuary-pair');\n    var Sum = __doctest.require ('./test/Sum');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat (ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    (Object.keys (strMap)).forEach (f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call (o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type (x) === type (y);\n  }\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n\n  //  unary :: (a -> b) -> (a, Any...) -> b\n  function unary(f) {\n    return function(x) {\n      return f (x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass (\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod ('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass (\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod ('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass (name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every (function(d) { return d.test (x); }) &&\n             test (x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass@1';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has (k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath (true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath (false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has ('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec (f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath ([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath ([functionName (typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath ([name], x);\n          if (m == null)    m = implPath ([type (x), 'prototype', name]);\n          return m && m.bind (x);\n        };\n    }\n\n    var version = '10.0.0';  // updated programmatically\n    var keys = Object.keys (requirements);\n\n    var typeClass = TypeClass (\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every (function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod (_name) (arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce (function(methods, _name) {\n      methods[_name] = getBoundMethod (_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test (null)\n  //. true\n  //. ```\n  var Setoid = $ ('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test (0)\n  //. true\n  //.\n  //. > Ord.test (Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $ ('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test (Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test (0)\n  //. false\n  //. ```\n  var Semigroupoid = $ ('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test (Math.sqrt)\n  //. true\n  //.\n  //. > Category.test (0)\n  //. false\n  //. ```\n  var Category = $ ('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test ('')\n  //. true\n  //.\n  //. > Semigroup.test (0)\n  //. false\n  //. ```\n  var Semigroup = $ ('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test ('')\n  //. true\n  //.\n  //. > Monoid.test (0)\n  //. false\n  //. ```\n  var Monoid = $ ('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test (Sum (0))\n  //. true\n  //.\n  //. > Group.test ('')\n  //. false\n  //. ```\n  var Group = $ ('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test ({})\n  //. true\n  //.\n  //. > Filterable.test ('')\n  //. false\n  //. ```\n  var Filterable = $ ('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test ([])\n  //. true\n  //.\n  //. > Functor.test ('')\n  //. false\n  //. ```\n  var Functor = $ ('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test (Pair ('foo') (64))\n  //. true\n  //.\n  //. > Bifunctor.test ([])\n  //. false\n  //. ```\n  var Bifunctor = $ ('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test (Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test ([])\n  //. false\n  //. ```\n  var Profunctor = $ ('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test ([])\n  //. true\n  //.\n  //. > Apply.test ('')\n  //. false\n  //. ```\n  var Apply = $ ('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test ([])\n  //. true\n  //.\n  //. > Applicative.test ({})\n  //. false\n  //. ```\n  var Applicative = $ ('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test ([])\n  //. true\n  //.\n  //. > Chain.test ({})\n  //. false\n  //. ```\n  var Chain = $ ('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test ([])\n  //. true\n  //.\n  //. > ChainRec.test ({})\n  //. false\n  //. ```\n  var ChainRec = $ ('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test ([])\n  //. true\n  //.\n  //. > Monad.test ({})\n  //. false\n  //. ```\n  var Monad = $ ('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test ({})\n  //. true\n  //.\n  //. > Alt.test ('')\n  //. false\n  //. ```\n  var Alt = $ ('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test ({})\n  //. true\n  //.\n  //. > Plus.test ('')\n  //. false\n  //. ```\n  var Plus = $ ('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test ([])\n  //. true\n  //.\n  //. > Alternative.test ({})\n  //. false\n  //. ```\n  var Alternative = $ ('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test ({})\n  //. true\n  //.\n  //. > Foldable.test ('')\n  //. false\n  //. ```\n  var Foldable = $ ('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test ([])\n  //. true\n  //.\n  //. > Traversable.test ('')\n  //. false\n  //. ```\n  var Traversable = $ ('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test ([])\n  //. true\n  //.\n  //. > Extend.test ({})\n  //. false\n  //. ```\n  var Extend = $ ('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test (Identity (0))\n  //. true\n  //.\n  //. > Comonad.test ([])\n  //. false\n  //. ```\n  var Comonad = $ ('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test (Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test ([])\n  //. false\n  //. ```\n  var Contravariant = $ ('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      isNaN (this) && isNaN (other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      isNaN (this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals (this.valueOf (), other.valueOf ());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte (this.valueOf (), other.valueOf ());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f (iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push (step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!(equals (this[idx], other[idx]))) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!(equals (this[idx], other[idx]))) {\n        return lte (this[idx], other[idx]);\n      }\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat (other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter (function(x) { return pred (x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map (function(x) { return f (x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push (fs[idx] (this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f (this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push (xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f (acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of (typeRep, []);\n        case 2: return lift2 (pair, f (xs[idx]), f (xs[idx + 1]));\n        default:\n          var m = Math.floor (n / 4) * 2;\n          return lift2 (concat_, go (idx, m), go (idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2 (concat_, map (Array$of, f (this[0])), go (1, this.length - 1)) :\n      go (0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map (function(_, idx, xs) { return f (xs.slice (idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call (this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call (this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals (this.name, other.name) &&\n           equals (this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = sortedKeys (this);\n    return equals (keys, sortedKeys (other)) &&\n           keys.every (function(k) { return equals (self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = sortedKeys (this);\n    var otherKeys = sortedKeys (other);\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift ();\n      var z = otherKeys.shift ();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!(equals (this[k], other[k]))) return lte (this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey (this, assign);\n    forEachKey (other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (pred (this[k])) result[k] = this[k];\n    });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey (this, function(k) { result[k] = f (this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (has (k, other)) result[k] = other[k] (this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f (acc, self[k]); }\n    return (sortedKeys (this)).reduce (reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return (Object.keys (this)).reduce (function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call (o, singleton);\n        };\n      }\n      return lift2 (set, applicative, f (self[k]));\n    }, of (typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext (x);\n      while (!step.done) {\n        step = f (iterationNext, iterationDone, step.value) (a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other (semigroupoid (x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f (functor (x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g (profunctor (f (x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f (x) (apply (x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f (chain (x)) (x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f (function(y) { return extend (concat (x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant (f (x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals (0, -0)\n  //. true\n  //.\n  //. > equals (NaN, NaN)\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (1, Cons (2, Nil)))\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (2, Cons (1, Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Setoid.test (x) &&\n               Setoid.test (y) &&\n               Setoid.methods.equals (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt (0, 0)\n  //. false\n  //.\n  //. > lt (0, 1)\n  //. true\n  //.\n  //. > lt (1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType (x, y) && !(lte (y, x));\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte (0, 0)\n  //. true\n  //.\n  //. > lte (0, 1)\n  //. true\n  //.\n  //. > lte (1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return equals (x, y);\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Ord.test (x) && Ord.test (y) && Ord.methods.lte (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt (0, 0)\n  //. false\n  //.\n  //. > gt (0, 1)\n  //. false\n  //.\n  //. > gt (1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt (y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte (0, 0)\n  //. true\n  //.\n  //. > gte (0, 1)\n  //. false\n  //.\n  //. > gte (1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte (y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min (10, 2)\n  //. 2\n  //.\n  //. > min (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > min ('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte (x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max (10, 2)\n  //. 10\n  //.\n  //. > max (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > max ('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte (x, y) ? y : x;\n  }\n\n  //# clamp :: Ord a => (a, a, a) -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. This function is derived from [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > clamp (0, 100, 42)\n  //. 42\n  //.\n  //. > clamp (0, 100, -1)\n  //. 0\n  //.\n  //. > clamp ('A', 'Z', '~')\n  //. 'Z'\n  //. ```\n  function clamp(lower, upper, x) {\n    return max (lower, min (upper, x));\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose (Math.sqrt, x => x + 1) (99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose (y) (x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id (Function) ('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id (typeRep) ();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat ('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat ({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat (Cons ('foo', Cons ('bar', Cons ('baz', Nil))), Cons ('quux', Nil))\n  //. Cons ('foo', Cons ('bar', Cons ('baz', Cons ('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat (x) (y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty (String)\n  //. ''\n  //.\n  //. > empty (Array)\n  //. []\n  //.\n  //. > empty (Object)\n  //. {}\n  //.\n  //. > empty (List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty (typeRep) ();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert (group) ();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter (x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > filter (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (0))\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter (filterable) (pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject (x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (2, Nil)\n  //.\n  //. > reject (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject (x => x % 2 == 1, Just (0))\n  //. Just (0)\n  //.\n  //. > reject (x => x % 2 == 1, Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter (function(x) { return !(pred (x)); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile (s => /x/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile (s => /y/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile (s => /z/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter (function(x) { return take = take && pred (x); },\n                   filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile (s => /x/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile (s => /y/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile (s => /z/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter (function(x) { return take = take || !(pred (x)); },\n                   filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map (Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map (Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map (Math.sqrt, s => s.length) ('Sanctuary')\n  //. 3\n  //.\n  //. > map (Math.sqrt, Pair ('foo') (64))\n  //. Pair ('foo') (8)\n  //.\n  //. > map (Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map (Math.sqrt, Cons (1, Cons (4, Cons (9, Nil))))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map (functor) (f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip (x => y => x + y, '!') ('foo')\n  //. 'foo!'\n  //.\n  //. > flip ([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip ({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip (Cons (Math.floor, Cons (Math.ceil, Nil)), 1.5)\n  //. Cons (1, Cons (2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map (functor) (thrush (x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap (s => s.toUpperCase (), Math.sqrt, Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap (bifunctor) (f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft (Math.sqrt, Pair (64) (9))\n  //. Pair (8) (9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap (f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap (Math.abs, x => x + 1, Math.sqrt) (-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap (profunctor) (f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap ([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap ({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap (s => n => s.slice (0, n), s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap (Identity (Math.sqrt), Identity (64))\n  //. Identity (8)\n  //.\n  //. > ap (Cons (Math.sqrt, Cons (x => x * x, Nil)), Cons (16, Cons (100, Nil)))\n  //. Cons (4, Cons (10, Cons (256, Cons (10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap (applyX) (applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2 (x => y => Math.pow (x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2 (x => y => Math.pow (x, y), Identity (10), Identity (3))\n  //. Identity (1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap (map (f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        ['<', '['],\n  //. .        ['>', ']'],\n  //. .        ['foo', 'bar', 'baz'])\n  //. [ '<foo>', '<bar>', '<baz>',\n  //. . '<foo]', '<bar]', '<baz]',\n  //. . '[foo>', '[bar>', '[baz>',\n  //. . '[foo]', '[bar]', '[baz]' ]\n  //.\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        Identity ('<'),\n  //. .        Identity ('>'),\n  //. .        Identity ('baz'))\n  //. Identity ('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap (ap (map (f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst ([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst (Identity (1), Identity (2))\n  //. Identity (1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2 (constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond ([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond (Identity (1), Identity (2))\n  //. Identity (2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2 (constant (identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of (Array, 42)\n  //. [42]\n  //.\n  //. > of (Function, 42) (null)\n  //. 42\n  //.\n  //. > of (List, 42)\n  //. Cons (42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of (typeRep) (x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append (3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append (3, Cons (1, Cons (2, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat (xs, of (xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend (1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend (1, Cons (2, Cons (3, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat (of (xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain (x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain (x => x % 2 == 1 ? of (List, x) : Nil,\n  //. .        Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > chain (n => s => s.slice (0, n),\n  //. .        s => Math.ceil (s.length / 2))\n  //. .       ('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain (chain_) (f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join (Identity (Identity (1)))\n  //. Identity (1)\n  //. ```\n  function join(chain_) {\n    return chain (identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec (\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map (done)\n  //. .                                    : [s + 'o', s + 'n'].map (next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec (typeRep) (f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt (Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt (Nothing, Just (1))\n  //. Just (1)\n  //.\n  //. > alt (Just (2), Just (3))\n  //. Just (2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt (x) (y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero (Array)\n  //. []\n  //.\n  //. > zero (Object)\n  //. {}\n  //.\n  //. > zero (Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero (typeRep) ();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce ((xs, x) => [x].concat (xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce (concat, '', Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce (foldable) (f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size ([])\n  //. 0\n  //.\n  //. > size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size (Nil)\n  //. 0\n  //.\n  //. > size (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.length;\n    return reduce (function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# all :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if all the elements of the structure satisfy the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > all (Number.isInteger, [])\n  //. true\n  //.\n  //. > all (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > all (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function all(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.every (unary (pred));\n    return reduce (function(b, x) { return b && pred (x); }, true, foldable);\n  }\n\n  //# any :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if any element of the structure satisfies the predicate;\n  //. `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > any (Number.isInteger, [])\n  //. false\n  //.\n  //. > any (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > any (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. true\n  //. ```\n  function any(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.some (unary (pred));\n    return reduce (function(b, x) { return b || pred (x); }, false, foldable);\n  }\n\n  //# none :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if none of the elements of the structure satisfies the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`any`](#any). `none (pred, foldable)` is\n  //. equivalent to `!(any (pred, foldable))`.\n  //.\n  //. See also [`all`](#all).\n  //.\n  //. ```javascript\n  //. > none (Number.isInteger, [])\n  //. true\n  //.\n  //. > none (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function none(pred, foldable) {\n    return !(any (pred, foldable));\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem ('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem ('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem (3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem (8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem (0, Just (0))\n  //. true\n  //.\n  //. > elem (0, Just (1))\n  //. false\n  //.\n  //. > elem (0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return any (function(y) { return equals (x, y); }, foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap (String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce (function(monoid, x) { return concat (monoid, f (x)); },\n                   empty (typeRep),\n                   foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse (Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (3, Cons (2, Cons (1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return (foldable.slice ()).reverse ();\n    var F = foldable.constructor;\n    return reduce (function(xs, x) { return concat (of (F, x), xs); },\n                   empty (F),\n                   foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort ([Just (2), Nothing, Just (1)])\n  //. [Nothing, Just (1), Just (2)]\n  //.\n  //. > sort (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. Cons ('bar', Cons ('baz', Cons ('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy (identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy (s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy (s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy (s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy (s => s.length, Cons ('red', Cons ('green', Cons ('blue', Nil))))\n  //. Cons ('red', Cons ('blue', Cons ('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce (function(rs, x) {\n      rs.push ({idx: rs.length, x: x, fx: f (x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    } (rs[0]));\n\n    rs.sort (function(a, b) {\n      return lte_ (a.fx, b.fx) ? lte_ (b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray (foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty (F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat (result, of (F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse (Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse (Identity, x => Identity (x + 1), [1, 2, 3])\n  //. Identity ([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse (traversable) (typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence (Array, Identity ([1, 2, 3]))\n  //. [Identity (1), Identity (2), Identity (3)]\n  //.\n  //. > sequence (Identity, [Identity (1), Identity (2), Identity (3)])\n  //. Identity ([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse (typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend (ss => ss.join (''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend (f => f ([3, 4]), reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend (extend_) (f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate (Identity (1))\n  //. Identity (Identity (1))\n  //.\n  //. > duplicate ([1])\n  //. [[1]]\n  //.\n  //. > duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate (reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend (identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract (Identity (42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract (comonad) ();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap (s => s.length, Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap (contravariant) (f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    clamp: clamp,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    all: all,\n    any: any,\n    none: none,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*\n         _______    ___    _________    ___   ___    _______    ______\n        /  ____/\\  /  /\\  /__   ___/\\  /  /\\ /  /\\  /  ____/\\  /  __  \\\n       /  /\\___\\/ /  / /  \\_/  /\\__\\/ /  /_//  / / /  /\\___\\/ /  /\\/  /\\\n      /  ____/\\  /  / /    /  / /    /  ___   / / /  ____/\\  /      _/ /\n     /  /\\___\\/ /  / /    /  / /    /  /\\_/  / / /  /\\___\\/ /  /|  |\\\\/\n    /______/\\  /__/ /    /__/ /    /__/ //__/ / /______/\\  /__/ |__| |\n    \\______\\/  \\__\\/     \\__\\/     \\__\\/ \\__\\/  \\______\\/  \\__\\/ \\__\\|\n                                                                            */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-either\n//.\n//. The Either type represents values with two possibilities: a value of type\n//. `Either a b` is either a Left whose value is of type `a` or a Right whose\n//. value is of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], f);\n  } else {\n    self.sanctuaryEither = f (self.sanctuaryShow, self.sanctuaryTypeClasses);\n  }\n\n} (function(show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var EitherType = $.BinaryType\n        ('sanctuary-either/Either')\n        ('')\n        (function(x) { return type (x) === Either['@@type']; })\n        (function(e) { return e.isLeft ? [e.value] : []; })\n        (function(e) { return e.isLeft ? [] : [e.value]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, EitherType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Either = {};\n\n  var Left$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 true,\n    'isRight':                false,\n    '@@show':                 Left$prototype$show,\n    'fantasy-land/map':       Left$prototype$map,\n    'fantasy-land/bimap':     Left$prototype$bimap,\n    'fantasy-land/ap':        Left$prototype$ap,\n    'fantasy-land/chain':     Left$prototype$chain,\n    'fantasy-land/alt':       Left$prototype$alt,\n    'fantasy-land/reduce':    Left$prototype$reduce,\n    'fantasy-land/traverse':  Left$prototype$traverse,\n    'fantasy-land/extend':    Left$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Right$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 false,\n    'isRight':                true,\n    '@@show':                 Right$prototype$show,\n    'fantasy-land/map':       Right$prototype$map,\n    'fantasy-land/bimap':     Right$prototype$bimap,\n    'fantasy-land/ap':        Right$prototype$ap,\n    'fantasy-land/chain':     Right$prototype$chain,\n    'fantasy-land/alt':       Right$prototype$alt,\n    'fantasy-land/reduce':    Right$prototype$reduce,\n    'fantasy-land/traverse':  Right$prototype$traverse,\n    'fantasy-land/extend':    Right$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var util =\n    typeof module === 'object' && typeof module.exports === 'object' ?\n    require ('util') :\n    /* istanbul ignore next */ {};\n  var inspect =\n    util.inspect != null && typeof util.inspect.custom === 'symbol' ?\n    /* istanbul ignore next */ util.inspect.custom :\n    /* istanbul ignore next */ 'inspect';\n  Left$prototype[inspect] = Left$prototype$show;\n  Right$prototype[inspect] = Right$prototype$show;\n\n  //. `Either a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Right (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Right (['foo'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */               '\\u274C   '))\n  //. .       (S.keys (Z.filter ($.test ([]) ($.TypeClass), Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Either.Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Left ('sqrt undefined for -1')\n  //. Left ('sqrt undefined for -1')\n  //. ```\n  var Left = Either.Left = function(value) {\n    var left = Object.create (Left$prototype);\n    if (Z.Setoid.test (value)) {\n      left['fantasy-land/equals'] = Left$prototype$equals;\n      if (Z.Ord.test (value)) {\n        left['fantasy-land/lte'] = Left$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      left['fantasy-land/concat'] = Left$prototype$concat;\n    }\n    left.value = value;\n    return left;\n  };\n\n  //# Either.Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > Right (42)\n  //. Right (42)\n  //. ```\n  var Right = Either.Right = function Right(value) {\n    var right = Object.create (Right$prototype);\n    if (Z.Setoid.test (value)) {\n      right['fantasy-land/equals'] = Right$prototype$equals;\n      if (Z.Ord.test (value)) {\n        right['fantasy-land/lte'] = Right$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      right['fantasy-land/concat'] = Right$prototype$concat;\n    }\n    right.value = value;\n    return right;\n  };\n\n  //# Either.@@type :: String\n  //.\n  //. Either [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Right (42))\n  //. 'sanctuary-either/Either@1'\n  //.\n  //. > type.parse (type (Right (42)))\n  //. {namespace: 'sanctuary-either', name: 'Either', version: 1}\n  //. ```\n  Either['@@type'] = 'sanctuary-either/Either@1';\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //.   - `of (Either) (x)` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Either) (42)\n  //. Right (42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Either.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Either d c, a) -> Either d b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Left ('!!')\n  //.\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Right (65536)\n  //. ```\n  Either['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var either = f (next, done, r.value);\n      if (either.isLeft) return either;\n      r = either.value;\n    }\n    return Right (r.value);\n  };\n\n  //# Either#@@show :: (Showable a, Showable b) => Either a b ~> () -> String\n  //.\n  //.   - `show (Left (x))` is equivalent to `'Left (' + show (x) + ')'`\n  //.   - `show (Right (x))` is equivalent to `'Right (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Left ('sqrt undefined for -1'))\n  //. 'Left (\"sqrt undefined for -1\")'\n  //.\n  //. > show (Right ([1, 2, 3]))\n  //. 'Right ([1, 2, 3])'\n  //. ```\n  function Left$prototype$show() {\n    return 'Left (' + show (this.value) + ')';\n  }\n  function Right$prototype$show() {\n    return 'Right (' + show (this.value) + ')';\n  }\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is equal to `Left (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Right (x)` is equal to `Right (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Left (x)` is never equal to `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.equals (Left ([1, 2, 3])) (Left ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Right ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Left ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. false\n  //. ```\n  function Left$prototype$equals(other) {\n    return other.isLeft && Z.equals (this.value, other.value);\n  }\n  function Right$prototype$equals(other) {\n    return other.isRight && Z.equals (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is less than or equal to `Left (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Right (x)` is less than or equal to `Right (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Left (x)` is always less than `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Left (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1)]\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Right (0), Right (1), Right (2)])\n  //. [Right (0), Right (1)]\n  //.\n  //. > S.filter (S.lte (Left (1))) ([Right (0), Right (1), Right (2)])\n  //. []\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1), Left (2)]\n  //. ```\n  function Left$prototype$lte(other) {\n    return other.isRight || Z.lte (this.value, other.value);\n  }\n  function Right$prototype$lte(other) {\n    return other.isRight && Z.lte (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `concat (Left (x)) (Left (y))` is equivalent to\n  //.     `Left (concat (x) (y))`\n  //.   - `concat (Right (x)) (Right (y))` is equivalent to\n  //.     `Right (concat (x) (y))`\n  //.   - `concat (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `concat (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Left ('abc')) (Left ('def'))\n  //. Left ('abcdef')\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Right ([4, 5, 6]))\n  //. Right ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Left ('abc')) (Right ([1, 2, 3]))\n  //. Right ([1, 2, 3])\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Left ('abc'))\n  //. Right ([1, 2, 3])\n  //. ```\n  function Left$prototype$concat(other) {\n    return other.isLeft ? Left (Z.concat (this.value, other.value)) : other;\n  }\n  function Right$prototype$concat(other) {\n    return other.isRight ? Right (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //.   - `map (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `map (f) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (S.add (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.map (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$map(f) {\n    return this;\n  }\n  function Right$prototype$map(f) {\n    return Right (f (this.value));\n  }\n\n  //# Either#fantasy-land/bimap :: Either a c ~> (a -> b, c -> d) -> Either b d\n  //.\n  //.   - `bimap (f) (g) (Left (x))` is equivalent to `Left (f (x))`\n  //.   - `bimap (f) (g) (Right (x))` is equivalent to `Right (g (x))`\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (S.add (1)) (Left ('abc'))\n  //. Left ('ABC')\n  //.\n  //. > S.bimap (S.toUpper) (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$bimap(f, g) {\n    return Left (f (this.value));\n  }\n  function Right$prototype$bimap(f, g) {\n    return Right (g (this.value));\n  }\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //.   - `ap (Left (x)) (Left (y))` is equivalent to `Left (x)`\n  //.   - `ap (Left (x)) (Right (y))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Left (x))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Left ('div undefined for 0')) (Left ('sqrt undefined for -1'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Left ('div undefined for 0')) (Right (99))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Right (S.add (1))) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.ap (Right (S.add (1))) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$ap(other) {\n    return other.isLeft ? other : this;\n  }\n  function Right$prototype$ap(other) {\n    return other.isLeft ? other : Right (other.value (this.value));\n  }\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //.   - `chain (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `chain (f) (Right (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const sqrt = n => n < 0 ? Left ('sqrt undefined for ' + show (n))\n  //. .                         : Right (Math.sqrt (n))\n  //.\n  //. > S.chain (sqrt) (Left ('div undefined for 0'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.chain (sqrt) (Right (-1))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.chain (sqrt) (Right (25))\n  //. Right (5)\n  //. ```\n  function Left$prototype$chain(f) {\n    return this;\n  }\n  function Right$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `alt (Left (x)) (Left (y))` is equivalent to `Left (y)`\n  //.   - `alt (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `alt (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.   - `alt (Right (x)) (Right (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Left ('A')) (Left ('B'))\n  //. Left ('B')\n  //.\n  //. > S.alt (Left ('C')) (Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (Right (2)) (Left ('D'))\n  //. Right (2)\n  //.\n  //. > S.alt (Right (3)) (Right (4))\n  //. Right (3)\n  //. ```\n  function Left$prototype$alt(other) {\n    return other;\n  }\n  function Right$prototype$alt(other) {\n    return this;\n  }\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //.   - `reduce (f) (x) (Left (y))` is equivalent to `x`\n  //.   - `reduce (f) (x) (Right (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1]) (Left ('sqrt undefined for -1'))\n  //. [1]\n  //.\n  //. > S.reduce (S.concat) ([1]) (Right ([2]))\n  //. [1, 2]\n  //. ```\n  function Left$prototype$reduce(f, x) {\n    return x;\n  }\n  function Right$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //.   - `traverse (A) (f) (Left (x))` is equivalent to `of (A) (Left (x))`\n  //.   - `traverse (A) (f) (Right (x))` is equivalent to `map (Right) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Left ('sqrt undefined for -1'))\n  //. [Left ('sqrt undefined for -1')]\n  //.\n  //. > S.traverse (Array) (S.words) (Right ('foo bar baz'))\n  //. [Right ('foo'), Right ('bar'), Right ('baz')]\n  //. ```\n  function Left$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Right$prototype$traverse(typeRep, f) {\n    return Z.map (Right, f (this.value));\n  }\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //.   - `extend (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `extend (f) (Right (x))` is equivalent to `Right (f (Right (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$extend(f) {\n    return this;\n  }\n  function Right$prototype$extend(f) {\n    return Right (f (this));\n  }\n\n  return Either;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f (self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require ('sanctuary-identity');\n    var List = __doctest.require ('./test/List');\n    var Maybe = __doctest.require ('sanctuary-maybe');\n    var Pair = __doctest.require ('sanctuary-pair');\n    var Sum = __doctest.require ('./test/Sum');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat (ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    (Object.keys (strMap)).forEach (f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call (o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type (x) === type (y);\n  }\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n\n  //  unary :: (a -> b) -> (a, Any...) -> b\n  function unary(f) {\n    return function(x) {\n      return f (x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass (\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod ('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass (\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod ('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass (name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every (function(d) { return d.test (x); }) &&\n             test (x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass@1';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has (k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath (true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath (false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has ('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec (f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath ([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath ([functionName (typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath ([name], x);\n          if (m == null)    m = implPath ([type (x), 'prototype', name]);\n          return m && m.bind (x);\n        };\n    }\n\n    var version = '11.0.0';  // updated programmatically\n    var keys = Object.keys (requirements);\n\n    var typeClass = TypeClass (\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every (function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod (_name) (arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce (function(methods, _name) {\n      methods[_name] = getBoundMethod (_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test (null)\n  //. true\n  //. ```\n  var Setoid = $ ('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test (0)\n  //. true\n  //.\n  //. > Ord.test (Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $ ('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test (Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test (0)\n  //. false\n  //. ```\n  var Semigroupoid = $ ('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test (Math.sqrt)\n  //. true\n  //.\n  //. > Category.test (0)\n  //. false\n  //. ```\n  var Category = $ ('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test ('')\n  //. true\n  //.\n  //. > Semigroup.test (0)\n  //. false\n  //. ```\n  var Semigroup = $ ('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test ('')\n  //. true\n  //.\n  //. > Monoid.test (0)\n  //. false\n  //. ```\n  var Monoid = $ ('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test (Sum (0))\n  //. true\n  //.\n  //. > Group.test ('')\n  //. false\n  //. ```\n  var Group = $ ('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test ({})\n  //. true\n  //.\n  //. > Filterable.test ('')\n  //. false\n  //. ```\n  var Filterable = $ ('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test ([])\n  //. true\n  //.\n  //. > Functor.test ('')\n  //. false\n  //. ```\n  var Functor = $ ('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test (Pair ('foo') (64))\n  //. true\n  //.\n  //. > Bifunctor.test ([])\n  //. false\n  //. ```\n  var Bifunctor = $ ('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test (Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test ([])\n  //. false\n  //. ```\n  var Profunctor = $ ('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test ([])\n  //. true\n  //.\n  //. > Apply.test ('')\n  //. false\n  //. ```\n  var Apply = $ ('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test ([])\n  //. true\n  //.\n  //. > Applicative.test ({})\n  //. false\n  //. ```\n  var Applicative = $ ('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test ([])\n  //. true\n  //.\n  //. > Chain.test ({})\n  //. false\n  //. ```\n  var Chain = $ ('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test ([])\n  //. true\n  //.\n  //. > ChainRec.test ({})\n  //. false\n  //. ```\n  var ChainRec = $ ('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test ([])\n  //. true\n  //.\n  //. > Monad.test ({})\n  //. false\n  //. ```\n  var Monad = $ ('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test ({})\n  //. true\n  //.\n  //. > Alt.test ('')\n  //. false\n  //. ```\n  var Alt = $ ('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test ({})\n  //. true\n  //.\n  //. > Plus.test ('')\n  //. false\n  //. ```\n  var Plus = $ ('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test ([])\n  //. true\n  //.\n  //. > Alternative.test ({})\n  //. false\n  //. ```\n  var Alternative = $ ('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test ({})\n  //. true\n  //.\n  //. > Foldable.test ('')\n  //. false\n  //. ```\n  var Foldable = $ ('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test ([])\n  //. true\n  //.\n  //. > Traversable.test ('')\n  //. false\n  //. ```\n  var Traversable = $ ('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test ([])\n  //. true\n  //.\n  //. > Extend.test ({})\n  //. false\n  //. ```\n  var Extend = $ ('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test (Identity (0))\n  //. true\n  //.\n  //. > Comonad.test ([])\n  //. false\n  //. ```\n  var Comonad = $ ('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test (Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test ([])\n  //. false\n  //. ```\n  var Contravariant = $ ('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      isNaN (this) && isNaN (other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      isNaN (this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals (this.valueOf (), other.valueOf ());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte (this.valueOf (), other.valueOf ());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f (iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push (step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!(equals (this[idx], other[idx]))) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!(equals (this[idx], other[idx]))) {\n        return lte (this[idx], other[idx]);\n      }\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat (other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter (function(x) { return pred (x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map (function(x) { return f (x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push (fs[idx] (this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f (this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push (xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f (acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of (typeRep, []);\n        case 2: return lift2 (pair, f (xs[idx]), f (xs[idx + 1]));\n        default:\n          var m = Math.floor (n / 4) * 2;\n          return lift2 (concat_, go (idx, m), go (idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2 (concat_, map (Array$of, f (this[0])), go (1, this.length - 1)) :\n      go (0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map (function(_, idx, xs) { return f (xs.slice (idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call (this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call (this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals (this.name, other.name) &&\n           equals (this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = sortedKeys (this);\n    return equals (keys, sortedKeys (other)) &&\n           keys.every (function(k) { return equals (self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = sortedKeys (this);\n    var otherKeys = sortedKeys (other);\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift ();\n      var z = otherKeys.shift ();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!(equals (this[k], other[k]))) return lte (this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey (this, assign);\n    forEachKey (other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (pred (this[k])) result[k] = this[k];\n    });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey (this, function(k) { result[k] = f (this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (has (k, other)) result[k] = other[k] (this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f (acc, self[k]); }\n    return (sortedKeys (this)).reduce (reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return (Object.keys (this)).reduce (function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call (o, singleton);\n        };\n      }\n      return lift2 (set, applicative, f (self[k]));\n    }, of (typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext (x);\n      while (!step.done) {\n        step = f (iterationNext, iterationDone, step.value) (a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other (semigroupoid (x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f (functor (x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g (profunctor (f (x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f (x) (apply (x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f (chain (x)) (x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f (function(y) { return extend (concat (x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant (f (x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals (0, -0)\n  //. true\n  //.\n  //. > equals (NaN, NaN)\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (1, Cons (2, Nil)))\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (2, Cons (1, Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Setoid.test (x) &&\n               Setoid.test (y) &&\n               Setoid.methods.equals (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt (0, 0)\n  //. false\n  //.\n  //. > lt (0, 1)\n  //. true\n  //.\n  //. > lt (1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType (x, y) && !(lte (y, x));\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte (0, 0)\n  //. true\n  //.\n  //. > lte (0, 1)\n  //. true\n  //.\n  //. > lte (1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return equals (x, y);\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Ord.test (x) && Ord.test (y) && Ord.methods.lte (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt (0, 0)\n  //. false\n  //.\n  //. > gt (0, 1)\n  //. false\n  //.\n  //. > gt (1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt (y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte (0, 0)\n  //. true\n  //.\n  //. > gte (0, 1)\n  //. false\n  //.\n  //. > gte (1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte (y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min (10, 2)\n  //. 2\n  //.\n  //. > min (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > min ('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte (x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max (10, 2)\n  //. 10\n  //.\n  //. > max (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > max ('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte (x, y) ? y : x;\n  }\n\n  //# clamp :: Ord a => (a, a, a) -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. This function is derived from [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > clamp (0, 100, 42)\n  //. 42\n  //.\n  //. > clamp (0, 100, -1)\n  //. 0\n  //.\n  //. > clamp ('A', 'Z', '~')\n  //. 'Z'\n  //. ```\n  function clamp(lower, upper, x) {\n    return max (lower, min (upper, x));\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose (Math.sqrt, x => x + 1) (99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose (y) (x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id (Function) ('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id (typeRep) ();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat ('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat ({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat (Cons ('foo', Cons ('bar', Cons ('baz', Nil))), Cons ('quux', Nil))\n  //. Cons ('foo', Cons ('bar', Cons ('baz', Cons ('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat (x) (y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty (String)\n  //. ''\n  //.\n  //. > empty (Array)\n  //. []\n  //.\n  //. > empty (Object)\n  //. {}\n  //.\n  //. > empty (List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty (typeRep) ();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert (group) ();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter (x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > filter (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (0))\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter (filterable) (pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject (x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (2, Nil)\n  //.\n  //. > reject (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject (x => x % 2 == 1, Just (0))\n  //. Just (0)\n  //.\n  //. > reject (x => x % 2 == 1, Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter (function(x) { return !(pred (x)); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map (Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map (Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map (Math.sqrt, s => s.length) ('Sanctuary')\n  //. 3\n  //.\n  //. > map (Math.sqrt, Pair ('foo') (64))\n  //. Pair ('foo') (8)\n  //.\n  //. > map (Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map (Math.sqrt, Cons (1, Cons (4, Cons (9, Nil))))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map (functor) (f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip (x => y => x + y, '!') ('foo')\n  //. 'foo!'\n  //.\n  //. > flip ([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip ({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip (Cons (Math.floor, Cons (Math.ceil, Nil)), 1.5)\n  //. Cons (1, Cons (2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map (functor) (thrush (x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap (s => s.toUpperCase (), Math.sqrt, Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap (bifunctor) (f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft (Math.sqrt, Pair (64) (9))\n  //. Pair (8) (9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap (f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap (Math.abs, x => x + 1, Math.sqrt) (-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap (profunctor) (f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap ([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap ({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap (s => n => s.slice (0, n), s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap (Identity (Math.sqrt), Identity (64))\n  //. Identity (8)\n  //.\n  //. > ap (Cons (Math.sqrt, Cons (x => x * x, Nil)), Cons (16, Cons (100, Nil)))\n  //. Cons (4, Cons (10, Cons (256, Cons (10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap (applyX) (applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2 (x => y => Math.pow (x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2 (x => y => Math.pow (x, y), Identity (10), Identity (3))\n  //. Identity (1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap (map (f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        ['<', '['],\n  //. .        ['>', ']'],\n  //. .        ['foo', 'bar', 'baz'])\n  //. [ '<foo>', '<bar>', '<baz>',\n  //. . '<foo]', '<bar]', '<baz]',\n  //. . '[foo>', '[bar>', '[baz>',\n  //. . '[foo]', '[bar]', '[baz]' ]\n  //.\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        Identity ('<'),\n  //. .        Identity ('>'),\n  //. .        Identity ('baz'))\n  //. Identity ('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap (ap (map (f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst ([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst (Identity (1), Identity (2))\n  //. Identity (1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2 (constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond ([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond (Identity (1), Identity (2))\n  //. Identity (2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2 (constant (identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of (Array, 42)\n  //. [42]\n  //.\n  //. > of (Function, 42) (null)\n  //. 42\n  //.\n  //. > of (List, 42)\n  //. Cons (42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of (typeRep) (x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append (3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append (3, Cons (1, Cons (2, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat (xs, of (xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend (1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend (1, Cons (2, Cons (3, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat (of (xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain (x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain (x => x % 2 == 1 ? of (List, x) : Nil,\n  //. .        Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > chain (n => s => s.slice (0, n),\n  //. .        s => Math.ceil (s.length / 2))\n  //. .       ('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain (chain_) (f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join (Identity (Identity (1)))\n  //. Identity (1)\n  //. ```\n  function join(chain_) {\n    return chain (identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec (\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map (done)\n  //. .                                    : [s + 'o', s + 'n'].map (next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec (typeRep) (f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt (Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt (Nothing, Just (1))\n  //. Just (1)\n  //.\n  //. > alt (Just (2), Just (3))\n  //. Just (2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt (x) (y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero (Array)\n  //. []\n  //.\n  //. > zero (Object)\n  //. {}\n  //.\n  //. > zero (Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero (typeRep) ();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce ((xs, x) => [x].concat (xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce (concat, '', Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce (foldable) (f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size ([])\n  //. 0\n  //.\n  //. > size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size (Nil)\n  //. 0\n  //.\n  //. > size (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.length;\n    return reduce (function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# all :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if all the elements of the structure satisfy the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > all (Number.isInteger, [])\n  //. true\n  //.\n  //. > all (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > all (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function all(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.every (unary (pred));\n    return reduce (function(b, x) { return b && pred (x); }, true, foldable);\n  }\n\n  //# any :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if any element of the structure satisfies the predicate;\n  //. `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > any (Number.isInteger, [])\n  //. false\n  //.\n  //. > any (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > any (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. true\n  //. ```\n  function any(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.some (unary (pred));\n    return reduce (function(b, x) { return b || pred (x); }, false, foldable);\n  }\n\n  //# none :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if none of the elements of the structure satisfies the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`any`](#any). `none (pred, foldable)` is\n  //. equivalent to `!(any (pred, foldable))`.\n  //.\n  //. See also [`all`](#all).\n  //.\n  //. ```javascript\n  //. > none (Number.isInteger, [])\n  //. true\n  //.\n  //. > none (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function none(pred, foldable) {\n    return !(any (pred, foldable));\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem ('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem ('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem (3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem (8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem (0, Just (0))\n  //. true\n  //.\n  //. > elem (0, Just (1))\n  //. false\n  //.\n  //. > elem (0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return any (function(y) { return equals (x, y); }, foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap (String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce (function(monoid, x) { return concat (monoid, f (x)); },\n                   empty (typeRep),\n                   foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse (Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (3, Cons (2, Cons (1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return (foldable.slice ()).reverse ();\n    var F = foldable.constructor;\n    return reduce (function(xs, x) { return concat (of (F, x), xs); },\n                   empty (F),\n                   foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort ([Just (2), Nothing, Just (1)])\n  //. [Nothing, Just (1), Just (2)]\n  //.\n  //. > sort (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. Cons ('bar', Cons ('baz', Cons ('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy (identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy (s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy (s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy (s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy (s => s.length, Cons ('red', Cons ('green', Cons ('blue', Nil))))\n  //. Cons ('red', Cons ('blue', Cons ('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce (function(rs, x) {\n      rs.push ({idx: rs.length, x: x, fx: f (x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    } (rs[0]));\n\n    rs.sort (function(a, b) {\n      return lte_ (a.fx, b.fx) ? lte_ (b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray (foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty (F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat (result, of (F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse (Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse (Identity, x => Identity (x + 1), [1, 2, 3])\n  //. Identity ([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse (traversable) (typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence (Array, Identity ([1, 2, 3]))\n  //. [Identity (1), Identity (2), Identity (3)]\n  //.\n  //. > sequence (Identity, [Identity (1), Identity (2), Identity (3)])\n  //. Identity ([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse (typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend (ss => ss.join (''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend (f => f ([3, 4]), reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend (extend_) (f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate (Identity (1))\n  //. Identity (Identity (1))\n  //.\n  //. > duplicate ([1])\n  //. [[1]]\n  //.\n  //. > duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate (reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend (identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract (Identity (42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract (comonad) ();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap (s => s.length, Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap (contravariant) (f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    clamp: clamp,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    all: all,\n    any: any,\n    none: none,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*              ___                 ______\n               /  /\\               /  ___/\\\n        ______/  / / _______    __/  /___\\/\n       /  ___   / / /  ___  \\  /_   __/\\\n      /  /\\_/  / / /  /__/  /\\ \\/  /\\_\\/\n     /  / //  / / /  ______/ / /  / /\n    /  /_//  / / /  /______\\/ /  / /\n    \\_______/ /  \\_______/\\  /__/ /\n     \\______\\/    \\______\\/  \\__*/\n\n//. # sanctuary-def\n//.\n//. sanctuary-def is a run-time type system for JavaScript. It facilitates\n//. the definition of curried JavaScript functions that are explicit about\n//. the number of arguments to which they may be applied and the types of\n//. those arguments.\n//.\n//. It is conventional to import the package as `$`:\n//.\n//. ```javascript\n//. const $ = require ('sanctuary-def');\n//. ```\n//.\n//. The next step is to define an environment. An environment is an array\n//. of [types][]. [`env`][] is an environment containing all the built-in\n//. JavaScript types. It may be used as the basis for environments that\n//. include custom types in addition to the built-in types:\n//.\n//. ```javascript\n//. //    Integer :: Type\n//. const Integer = '...';\n//.\n//. //    NonZeroInteger :: Type\n//. const NonZeroInteger = '...';\n//.\n//. //    env :: Array Type\n//. const env = $.env.concat ([Integer, NonZeroInteger]);\n//. ```\n//.\n//. Type constructors such as `List :: Type -> Type` cannot be included in\n//. an environment as they're not of the correct type. One could, though,\n//. use a type constructor to define a fixed number of concrete types:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([\n//.   List ($.Number),                // :: Type\n//.   List ($.String),                // :: Type\n//.   List (List ($.Number)),         // :: Type\n//.   List (List ($.String)),         // :: Type\n//.   List (List (List ($.Number))),  // :: Type\n//.   List (List (List ($.String))),  // :: Type\n//. ]);\n//. ```\n//.\n//. Not only would this be tedious, but one could never enumerate all possible\n//. types as there are infinitely many. Instead, one should use [`Unknown`][]:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([List ($.Unknown)]);\n//. ```\n//.\n//. The next step is to define a `def` function for the environment:\n//.\n//. ```javascript\n//. const def = $.create ({checkTypes: true, env});\n//. ```\n//.\n//. The `checkTypes` option determines whether type checking is enabled.\n//. This allows one to only pay the performance cost of run-time type checking\n//. during development. For example:\n//.\n//. ```javascript\n//. const def = $.create ({\n//.   checkTypes: process.env.NODE_ENV === 'development',\n//.   env,\n//. });\n//. ```\n//.\n//. `def` is a function for defining functions. For example:\n//.\n//. ```javascript\n//. //    add :: Number -> Number -> Number\n//. const add =\n//. def ('add')\n//.     ({})\n//.     ([$.Number, $.Number, $.Number])\n//.     (x => y => x + y);\n//. ```\n//.\n//. `[$.Number, $.Number, $.Number]` specifies that `add` takes two arguments\n//. of type `Number`, one at a time, and returns a value of type `Number`.\n//.\n//. Applying `add` to two arguments, one at a time, gives the expected result:\n//.\n//. ```javascript\n//. add (2) (2);\n//. // => 4\n//. ```\n//.\n//. Applying `add` to multiple arguments at once results in an exception being\n//. thrown:\n//.\n//. ```javascript\n//. add (2, 2, 2);\n//. // ! TypeError: ‘add’ applied to the wrong number of arguments\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   Expected one argument but received three arguments:\n//. //\n//. //     - 2\n//. //     - 2\n//. //     - 2\n//. ```\n//.\n//. Applying `add` to one argument produces a function awaiting the remaining\n//. argument. This is known as partial application. Partial application allows\n//. more specific functions to be defined in terms of more general ones:\n//.\n//. ```javascript\n//. //    inc :: Number -> Number\n//. const inc = add (1);\n//.\n//. inc (7);\n//. // => 8\n//. ```\n//.\n//. JavaScript's implicit type coercion often obfuscates the source of type\n//. errors. Consider the following function:\n//.\n//. ```javascript\n//. //    _add :: Number -> Number -> Number\n//. const _add = x => y => x + y;\n//. ```\n//.\n//. The type signature indicates that `_add` takes arguments of type `Number`,\n//. but this is not enforced. This allows type errors to be silently ignored:\n//.\n//. ```javascript\n//. _add ('2') ('2');\n//. // => '22'\n//. ```\n//.\n//. `add`, on the other hand, throws if applied to arguments of the wrong\n//. types:\n//.\n//. ```javascript\n//. add ('2') ('2');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"2\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n//.\n//. Type checking is performed as arguments are provided (rather than once all\n//. arguments have been provided), so type errors are reported early:\n//.\n//. ```javascript\n//. add ('X');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"X\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-either'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-either',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            function(Either, show, Z, type) {\n              return f (util, Either, show, Z, type);\n            });\n  } else {\n    self.sanctuaryDef = f (util,\n                           self.sanctuaryEither,\n                           self.sanctuaryShow,\n                           self.sanctuaryTypeClasses,\n                           self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(util, Either, show, Z, type) {\n\n  'use strict';\n\n  var MAX_SAFE_INTEGER = Math.pow (2, 53) - 1;\n  var MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n  var slice             = Array.prototype.slice;\n  var hasOwnProperty    = Object.prototype.hasOwnProperty;\n  var toString          = Object.prototype.toString;\n\n  var inspect = typeof util.inspect.custom === 'symbol' ?\n                util.inspect.custom :\n                /* istanbul ignore next */ 'inspect';\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  B :: (b -> c) -> (a -> b) -> a -> c\n  function B(f) {\n    return function(g) {\n      return function(x) {\n        return f (g (x));\n      };\n    };\n  }\n\n  //  I :: a -> a\n  function I(x) { return x; }\n\n  //  K :: a -> b -> a\n  function K(x) { return function(y) { return x; }; }\n\n  //  W :: (a -> a -> b) -> a -> b\n  function W(f) { return function(x) { return f (x) (x); }; }\n\n  //  always0 :: a -> () -> a\n  function always0(x) { return function() { return x; }; }\n\n  //  always2 :: a -> (b, c) -> a\n  function always2(x) { return function(y, z) { return x; }; }\n\n  //  complement :: (a -> Boolean) -> a -> Boolean\n  function complement(pred) { return function(x) { return !(pred (x)); }; }\n\n  //  filter :: Filterable f => (a -> Boolean) -> f a -> f a\n  function filter(pred) {\n    return function(xs) {\n      return Z.filter (pred, xs);\n    };\n  }\n\n  //  init :: Array a -> Array a\n  function init(xs) { return xs.slice (0, -1); }\n\n  //  isEmpty :: Foldable f => f a -> Boolean\n  function isEmpty(xs) { return Z.size (xs) === 0; }\n\n  //  isPrefix :: Array a -> Array a -> Boolean\n  function isPrefix(candidate) {\n    return function(xs) {\n      if (candidate.length > xs.length) return false;\n      for (var idx = 0; idx < candidate.length; idx += 1) {\n        if (candidate[idx] !== xs[idx]) return false;\n      }\n      return true;\n    };\n  }\n\n  //  joinWith :: (String, Array String) -> String\n  function joinWith(separator, ss) {\n    return ss.join (separator);\n  }\n\n  //  last :: Array a -> a\n  function last(xs) { return xs[xs.length - 1]; }\n\n  //  memberOf :: Array a -> a -> Boolean\n  function memberOf(xs) {\n    return function(y) {\n      return xs.some (function(x) { return Z.equals (x, y); });\n    };\n  }\n\n  //  or :: (Array a, Array a) -> Array a\n  function or(xs, ys) { return isEmpty (xs) ? ys : xs; }\n\n  //  prop :: String -> {} -> a\n  function prop(field) { return function(record) { return record[field]; }; }\n\n  //  sizeEq :: Foldable f => Integer -> f a -> Boolean\n  function sizeEq(n) { return function(xs) { return Z.size (xs) === n; }; }\n\n  //  strRepeat :: (String, Integer) -> String\n  function strRepeat(s, times) {\n    return joinWith (s, Array (times + 1));\n  }\n\n  //  r :: Char -> String -> String\n  function r(c) {\n    return function(s) {\n      return strRepeat (c, s.length);\n    };\n  }\n\n  //  _ :: String -> String\n  var _ = r (' ');\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  toArray :: Foldable f => f a -> Array a\n  function toArray(foldable) {\n    return Array.isArray (foldable) ?\n           foldable :\n           Z.reduce (function(xs, x) { xs.push (x); return xs; },\n                     [],\n                     foldable);\n  }\n\n  //  toMarkdownList :: (String, String, a -> String, Array a) -> String\n  function toMarkdownList(empty, s, f, xs) {\n    return isEmpty (xs) ?\n      empty :\n      Z.reduce (function(s, x) { return s + '  - ' + f (x) + '\\n'; }, s, xs);\n  }\n\n  //  trimTrailingSpaces :: String -> String\n  function trimTrailingSpaces(s) {\n    return s.replace (/[ ]+$/gm, '');\n  }\n\n  //  when :: Boolean -> (a -> a) -> a -> a\n  function when(bool) {\n    return function(f) {\n      return function(x) {\n        return bool ? f (x) : x;\n      };\n    };\n  }\n\n  //  wrap :: String -> String -> String -> String\n  function wrap(prefix) {\n    return function(suffix) {\n      return function(s) {\n        return prefix + s + suffix;\n      };\n    };\n  }\n\n  //  parenthesize :: (String -> String) -> String -> String\n  function parenthesize(f) { return wrap (f ('(')) (f (')')); }\n\n  //  q :: String -> String\n  var q = wrap ('\\u2018') ('\\u2019');\n\n  //  stripNamespace :: TypeClass -> String\n  function stripNamespace(typeClass) {\n    return typeClass.name.slice (typeClass.name.indexOf ('/') + 1);\n  }\n\n  function _test(env) {\n    return function(x) {\n      return function recur(t) {\n        return t.supertypes.every (recur) && t._test (env) (x);\n      };\n    };\n  }\n\n  var Type$prototype = {\n    'constructor': {'@@type': 'sanctuary-def/Type@1'},\n    'validate': function(env) {\n      var test2 = _test (env);\n      var type = this;\n      return function(x) {\n        if (!(test2 (x) (type))) return Left ({value: x, propPath: []});\n        for (var idx = 0; idx < type.keys.length; idx += 1) {\n          var k = type.keys[idx];\n          var t = type.types[k];\n          var ys = type.extractors[k] (x);\n          for (var idx2 = 0; idx2 < ys.length; idx2 += 1) {\n            var result = t.validate (env) (ys[idx2]);\n            if (result.isLeft) {\n              return Left ({value: result.value.value,\n                            propPath: Z.concat ([k], result.value.propPath)});\n            }\n          }\n        }\n        return Right (x);\n      };\n    },\n    'fantasy-land/equals': function(other) {\n      return (\n        Z.equals (this.type, other.type) &&\n        Z.equals (this.name, other.name) &&\n        Z.equals (this.url, other.url) &&\n        Z.equals (this.supertypes, other.supertypes) &&\n        Z.equals (this.keys, other.keys) &&\n        Z.equals (this.types, other.types)\n      );\n    },\n    '@@show': function() {\n      return this.format (I, K (I));\n    }\n  };\n\n  //  _Type :: ... -> Type\n  function _Type(\n    type,       // :: String\n    name,       // :: String\n    url,        // :: String\n    arity,      // :: NonNegativeInteger\n    format,\n    // :: Nullable ((String -> String, String -> String -> String) -> String)\n    supertypes, // :: Array Type\n    test,       // :: Any -> Boolean\n    tuples      // :: Array (Array3 String (a -> Array b) Type)\n  ) {\n    var t = Object.create (Type$prototype);\n    t._test = test;\n    t._extractors = tuples.reduce (function(_extractors, tuple) {\n      _extractors[tuple[0]] = tuple[1];\n      return _extractors;\n    }, {});\n    t.arity = arity;  // number of type parameters\n    t.extractors = Z.map (B (toArray), t._extractors);\n    t.format = format || function(outer, inner) {\n      return Z.reduce (function(s, tuple) {\n        return s +\n               outer (' ') +\n               when (tuple[2].arity > 0)\n                    (parenthesize (outer))\n                    (inner (tuple[0]) (show (tuple[2])));\n      }, outer (name), tuples);\n    };\n    t.keys = tuples.map (function(tuple) { return tuple[0]; });\n    t.name = name;\n    t.supertypes = supertypes;\n    t.type = type;\n    t.types = tuples.reduce (function(types, tuple) {\n      types[tuple[0]] = tuple[2];\n      return types;\n    }, {});\n    t.url = url;\n    return t;\n  }\n\n  var BINARY        = 'BINARY';\n  var FUNCTION      = 'FUNCTION';\n  var INCONSISTENT  = 'INCONSISTENT';\n  var NO_ARGUMENTS  = 'NO_ARGUMENTS';\n  var NULLARY       = 'NULLARY';\n  var RECORD        = 'RECORD';\n  var UNARY         = 'UNARY';\n  var UNKNOWN       = 'UNKNOWN';\n  var VARIABLE      = 'VARIABLE';\n\n  //  Inconsistent :: Type\n  var Inconsistent =\n  _Type (INCONSISTENT, '', '', 0, always2 ('???'), [], K (K (false)), []);\n\n  //  NoArguments :: Type\n  var NoArguments =\n  _Type (NO_ARGUMENTS, '', '', 0, always2 ('()'), [], K (K (true)), []);\n\n  //  arityGte :: NonNegativeInteger -> Type -> Boolean\n  function arityGte(n) {\n    return function(t) {\n      return t.arity >= n;\n    };\n  }\n\n  //  typeEq :: String -> a -> Boolean\n  function typeEq(name) {\n    return function(x) {\n      return type (x) === name;\n    };\n  }\n\n  //  typeofEq :: String -> a -> Boolean\n  function typeofEq(typeof_) {\n    return function(x) {\n      // eslint-disable-next-line valid-typeof\n      return typeof x === typeof_;\n    };\n  }\n\n  //  functionUrl :: String -> String\n  function functionUrl(name) {\n    var version = '0.20.0';  // updated programmatically\n    return 'https://github.com/sanctuary-js/sanctuary-def/tree/v' + version +\n           '#' + name;\n  }\n\n  var NullaryTypeWithUrl = Z.ap (NullaryType, functionUrl);\n  var UnaryTypeWithUrl = Z.ap (UnaryType, functionUrl);\n  var BinaryTypeWithUrl = Z.ap (BinaryType, functionUrl);\n\n  //. ### Types\n  //.\n  //. Conceptually, a type is a set of values. One can think of a value of\n  //. type `Type` as a function of type `Any -> Boolean` that tests values\n  //. for membership in the set (though this is an oversimplification).\n\n  //# Unknown :: Type\n  //.\n  //. Type used to represent missing type information. The type of `[]`,\n  //. for example, is `Array ???`.\n  //.\n  //. May be used with type constructors when defining environments. Given a\n  //. type constructor `List :: Type -> Type`, one could use `List ($.Unknown)`\n  //. to include an infinite number of types in an environment:\n  //.\n  //.   - `List Number`\n  //.   - `List String`\n  //.   - `List (List Number)`\n  //.   - `List (List String)`\n  //.   - `List (List (List Number))`\n  //.   - `List (List (List String))`\n  //.   - `...`\n  var Unknown =\n  _Type (UNKNOWN, '', '', 0, always2 ('Unknown'), [], K (K (true)), []);\n\n  //# Any :: Type\n  //.\n  //. Type comprising every JavaScript value.\n  var Any = NullaryTypeWithUrl\n    ('Any')\n    ([])\n    (K (true));\n\n  //# AnyFunction :: Type\n  //.\n  //. Type comprising every Function value.\n  var AnyFunction = NullaryTypeWithUrl\n    ('Function')\n    ([])\n    (typeofEq ('function'));\n\n  //# Arguments :: Type\n  //.\n  //. Type comprising every [`arguments`][arguments] object.\n  var Arguments = NullaryTypeWithUrl\n    ('Arguments')\n    ([])\n    (typeEq ('Arguments'));\n\n  //# Array :: Type -> Type\n  //.\n  //. Constructor for homogeneous Array types.\n  var Array_ = UnaryTypeWithUrl\n    ('Array')\n    ([])\n    (typeEq ('Array'))\n    (I);\n\n  //# Array0 :: Type\n  //.\n  //. Type whose sole member is `[]`.\n  var Array0 = NullaryTypeWithUrl\n    ('Array0')\n    ([Array_ (Unknown)])\n    (sizeEq (0));\n\n  //# Array1 :: Type -> Type\n  //.\n  //. Constructor for singleton Array types.\n  var Array1 = UnaryTypeWithUrl\n    ('Array1')\n    ([Array_ (Unknown)])\n    (sizeEq (1))\n    (I);\n\n  //# Array2 :: Type -> Type -> Type\n  //.\n  //. Constructor for heterogeneous Array types of length 2. `['foo', true]` is\n  //. a member of `Array2 String Boolean`.\n  var Array2 = BinaryTypeWithUrl\n    ('Array2')\n    ([Array_ (Unknown)])\n    (sizeEq (2))\n    (function(array2) { return [array2[0]]; })\n    (function(array2) { return [array2[1]]; });\n\n  //# Boolean :: Type\n  //.\n  //. Type comprising `true` and `false`.\n  var Boolean_ = NullaryTypeWithUrl\n    ('Boolean')\n    ([])\n    (typeofEq ('boolean'));\n\n  //# Date :: Type\n  //.\n  //. Type comprising every Date value.\n  var Date_ = NullaryTypeWithUrl\n    ('Date')\n    ([])\n    (typeEq ('Date'));\n\n  //# ValidDate :: Type\n  //.\n  //. Type comprising every [`Date`][] value except `new Date (NaN)`.\n  var ValidDate = NullaryTypeWithUrl\n    ('ValidDate')\n    ([Date_])\n    (B (complement (isNaN)) (Number));\n\n  //# Descending :: Type -> Type\n  //.\n  //. [Descending][] type constructor.\n  var Descending = UnaryTypeWithUrl\n    ('Descending')\n    ([])\n    (typeEq ('sanctuary-descending/Descending@1'))\n    (I);\n\n  //# Either :: Type -> Type -> Type\n  //.\n  //. [Either][] type constructor.\n  var Either_ = BinaryTypeWithUrl\n    ('Either')\n    ([])\n    (typeEq ('sanctuary-either/Either@1'))\n    (function(either) { return either.isLeft ? [either.value] : []; })\n    (function(either) { return either.isLeft ? [] : [either.value]; });\n\n  //# Error :: Type\n  //.\n  //. Type comprising every Error value, including values of more specific\n  //. constructors such as [`SyntaxError`][] and [`TypeError`][].\n  var Error_ = NullaryTypeWithUrl\n    ('Error')\n    ([])\n    (typeEq ('Error'));\n\n  //# Fn :: Type -> Type -> Type\n  //.\n  //. Binary type constructor for unary function types. `$.Fn (I) (O)`\n  //. represents `I -> O`, the type of functions that take a value of\n  //. type `I` and return a value of type `O`.\n  function Fn($1) { return function($2) { return Function_ ([$1, $2]); }; }\n\n  //# Function :: NonEmpty (Array Type) -> Type\n  //.\n  //. Constructor for Function types.\n  //.\n  //. Examples:\n  //.\n  //.   - `$.Function ([$.Date, $.String])` represents the `Date -> String`\n  //.     type; and\n  //.   - `$.Function ([a, b, a])` represents the `(a, b) -> a` type.\n  function Function_(types) {\n    var tuples = Z.reduce (function(tuples, t) {\n      tuples.push (['$' + show (tuples.length + 1), K ([]), t]);\n      return tuples;\n    }, [], types);\n\n    function format(outer, inner) {\n      return when (tuples.length !== 2)\n                  (parenthesize (outer))\n                  (joinWith (outer (', '),\n                             Z.map (function(tuple) {\n                               return when (tuple[2].type === FUNCTION)\n                                           (parenthesize (outer))\n                                           (inner (tuple[0])\n                                                  (show (tuple[2])));\n                             }, init (tuples)))) +\n             outer (' -> ') +\n             inner ((last (tuples))[0])\n                   (show ((last (tuples))[2]));\n    }\n\n    return _Type (FUNCTION,\n                  '',\n                  '',\n                  types.length,\n                  format,\n                  [AnyFunction],\n                  K (K (true)),\n                  tuples);\n  }\n\n  //# HtmlElement :: Type\n  //.\n  //. Type comprising every [HTML element][].\n  var HtmlElement = NullaryTypeWithUrl\n    ('HtmlElement')\n    ([])\n    (function(x) {\n       return /^\\[object HTML.+Element\\]$/.test (toString.call (x));\n     });\n\n  //# Identity :: Type -> Type\n  //.\n  //. [Identity][] type constructor.\n  var Identity = UnaryTypeWithUrl\n    ('Identity')\n    ([])\n    (typeEq ('sanctuary-identity/Identity@1'))\n    (I);\n\n  //# Maybe :: Type -> Type\n  //.\n  //. [Maybe][] type constructor.\n  var Maybe = UnaryTypeWithUrl\n    ('Maybe')\n    ([])\n    (typeEq ('sanctuary-maybe/Maybe@1'))\n    (I);\n\n  //# NonEmpty :: Type -> Type\n  //.\n  //. Constructor for non-empty types. `$.NonEmpty ($.String)`, for example, is\n  //. the type comprising every [`String`][] value except `''`.\n  //.\n  //. The given type must satisfy the [Monoid][] and [Setoid][] specifications.\n  var NonEmpty = UnaryTypeWithUrl\n    ('NonEmpty')\n    ([])\n    (function(x) {\n       return Z.Monoid.test (x) &&\n              Z.Setoid.test (x) &&\n              !(Z.equals (x, Z.empty (x.constructor)));\n     })\n    (function(monoid) { return [monoid]; });\n\n  //# Null :: Type\n  //.\n  //. Type whose sole member is `null`.\n  var Null = NullaryTypeWithUrl\n    ('Null')\n    ([])\n    (typeEq ('Null'));\n\n  //# Nullable :: Type -> Type\n  //.\n  //. Constructor for types that include `null` as a member.\n  var Nullable = UnaryTypeWithUrl\n    ('Nullable')\n    ([])\n    (K (true))\n    (function(nullable) {\n       // eslint-disable-next-line eqeqeq\n       return nullable === null ? [] : [nullable];\n     });\n\n  //# Number :: Type\n  //.\n  //. Type comprising every primitive Number value (including `NaN`).\n  var Number_ = NullaryTypeWithUrl\n    ('Number')\n    ([])\n    (typeofEq ('number'));\n\n  function nonZero(x) { return x !== 0; }\n  function nonNegative(x) { return x >= 0; }\n  function positive(x) { return x > 0; }\n  function negative(x) { return x < 0; }\n\n  //# PositiveNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value greater than zero.\n  var PositiveNumber = NullaryTypeWithUrl\n    ('PositiveNumber')\n    ([Number_])\n    (positive);\n\n  //# NegativeNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value less than zero.\n  var NegativeNumber = NullaryTypeWithUrl\n    ('NegativeNumber')\n    ([Number_])\n    (negative);\n\n  //# ValidNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value except `NaN`.\n  var ValidNumber = NullaryTypeWithUrl\n    ('ValidNumber')\n    ([Number_])\n    (complement (isNaN));\n\n  //# NonZeroValidNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `0` and `-0`.\n  var NonZeroValidNumber = NullaryTypeWithUrl\n    ('NonZeroValidNumber')\n    ([ValidNumber])\n    (nonZero);\n\n  //# FiniteNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `Infinity` and\n  //. `-Infinity`.\n  var FiniteNumber = NullaryTypeWithUrl\n    ('FiniteNumber')\n    ([ValidNumber])\n    (isFinite);\n\n  //# NonZeroFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value except `0` and `-0`.\n  var NonZeroFiniteNumber = NullaryTypeWithUrl\n    ('NonZeroFiniteNumber')\n    ([FiniteNumber])\n    (nonZero);\n\n  //# PositiveFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value greater than zero.\n  var PositiveFiniteNumber = NullaryTypeWithUrl\n    ('PositiveFiniteNumber')\n    ([FiniteNumber])\n    (positive);\n\n  //# NegativeFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value less than zero.\n  var NegativeFiniteNumber = NullaryTypeWithUrl\n    ('NegativeFiniteNumber')\n    ([FiniteNumber])\n    (negative);\n\n  //# Integer :: Type\n  //.\n  //. Type comprising every integer in the range\n  //. [[`Number.MIN_SAFE_INTEGER`][min] .. [`Number.MAX_SAFE_INTEGER`][max]].\n  var Integer = NullaryTypeWithUrl\n    ('Integer')\n    ([ValidNumber])\n    (function(x) {\n       return Math.floor (x) === x &&\n              x >= MIN_SAFE_INTEGER &&\n              x <= MAX_SAFE_INTEGER;\n     });\n\n  //# NonZeroInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value except `0` and `-0`.\n  var NonZeroInteger = NullaryTypeWithUrl\n    ('NonZeroInteger')\n    ([Integer])\n    (nonZero);\n\n  //# NonNegativeInteger :: Type\n  //.\n  //. Type comprising every non-negative [`Integer`][] value (including `-0`).\n  //. Also known as the set of natural numbers under ISO 80000-2:2009.\n  var NonNegativeInteger = NullaryTypeWithUrl\n    ('NonNegativeInteger')\n    ([Integer])\n    (nonNegative);\n\n  //# PositiveInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value greater than zero.\n  var PositiveInteger = NullaryTypeWithUrl\n    ('PositiveInteger')\n    ([Integer])\n    (positive);\n\n  //# NegativeInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value less than zero.\n  var NegativeInteger = NullaryTypeWithUrl\n    ('NegativeInteger')\n    ([Integer])\n    (negative);\n\n  //# Object :: Type\n  //.\n  //. Type comprising every \"plain\" Object value. Specifically, values\n  //. created via:\n  //.\n  //.   - object literal syntax;\n  //.   - [`Object.create`][]; or\n  //.   - the `new` operator in conjunction with `Object` or a custom\n  //.     constructor function.\n  var Object_ = NullaryTypeWithUrl\n    ('Object')\n    ([])\n    (typeEq ('Object'));\n\n  //# Pair :: Type -> Type -> Type\n  //.\n  //. [Pair][] type constructor.\n  var Pair = BinaryTypeWithUrl\n    ('Pair')\n    ([])\n    (typeEq ('sanctuary-pair/Pair@1'))\n    (function(pair) { return [pair.fst]; })\n    (function(pair) { return [pair.snd]; });\n\n  //# RegExp :: Type\n  //.\n  //. Type comprising every RegExp value.\n  var RegExp_ = NullaryTypeWithUrl\n    ('RegExp')\n    ([])\n    (typeEq ('RegExp'));\n\n  //# GlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `true`.\n  //.\n  //. See also [`NonGlobalRegExp`][].\n  var GlobalRegExp = NullaryTypeWithUrl\n    ('GlobalRegExp')\n    ([RegExp_])\n    (prop ('global'));\n\n  //# NonGlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `false`.\n  //.\n  //. See also [`GlobalRegExp`][].\n  var NonGlobalRegExp = NullaryTypeWithUrl\n    ('NonGlobalRegExp')\n    ([RegExp_])\n    (complement (prop ('global')));\n\n  //# StrMap :: Type -> Type\n  //.\n  //. Constructor for homogeneous Object types.\n  //.\n  //. `{foo: 1, bar: 2, baz: 3}`, for example, is a member of `StrMap Number`;\n  //. `{foo: 1, bar: 2, baz: 'XXX'}` is not.\n  var StrMap = UnaryTypeWithUrl\n    ('StrMap')\n    ([Object_])\n    (K (true))\n    (I);\n\n  //# String :: Type\n  //.\n  //. Type comprising every primitive String value.\n  var String_ = NullaryTypeWithUrl\n    ('String')\n    ([])\n    (typeofEq ('string'));\n\n  //# RegexFlags :: Type\n  //.\n  //. Type comprising the canonical RegExp flags:\n  //.\n  //.   - `''`\n  //.   - `'g'`\n  //.   - `'i'`\n  //.   - `'m'`\n  //.   - `'gi'`\n  //.   - `'gm'`\n  //.   - `'im'`\n  //.   - `'gim'`\n  var RegexFlags = NullaryTypeWithUrl\n    ('RegexFlags')\n    ([String_])\n    (function(s) { return /^g?i?m?$/.test (s); });\n\n  //# Symbol :: Type\n  //.\n  //. Type comprising every Symbol value.\n  var Symbol_ = NullaryTypeWithUrl\n    ('Symbol')\n    ([])\n    (typeofEq ('symbol'));\n\n  //# Type :: Type\n  //.\n  //. Type comprising every `Type` value.\n  var Type = NullaryTypeWithUrl\n    ('Type')\n    ([])\n    (typeEq ('sanctuary-def/Type@1'));\n\n  //# TypeClass :: Type\n  //.\n  //. Type comprising every [`TypeClass`][] value.\n  var TypeClass = NullaryTypeWithUrl\n    ('TypeClass')\n    ([])\n    (typeEq ('sanctuary-type-classes/TypeClass@1'));\n\n  //# Undefined :: Type\n  //.\n  //. Type whose sole member is `undefined`.\n  var Undefined = NullaryTypeWithUrl\n    ('Undefined')\n    ([])\n    (typeEq ('Undefined'));\n\n  //# env :: Array Type\n  //.\n  //. An array of [types][]:\n  //.\n  //.   - <code>[AnyFunction](#AnyFunction)</code>\n  //.   - <code>[Arguments](#Arguments)</code>\n  //.   - <code>[Array](#Array) ([Unknown][])</code>\n  //.   - <code>[Array2](#Array2) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[Boolean](#Boolean)</code>\n  //.   - <code>[Date](#Date)</code>\n  //.   - <code>[Descending](#Descending) ([Unknown][])</code>\n  //.   - <code>[Either](#Either) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[Error](#Error)</code>\n  //.   - <code>[Fn](#Fn) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[HtmlElement](#HtmlElement)</code>\n  //.   - <code>[Identity](#Identity) ([Unknown][])</code>\n  //.   - <code>[Maybe](#Maybe) ([Unknown][])</code>\n  //.   - <code>[Null](#Null)</code>\n  //.   - <code>[Number](#Number)</code>\n  //.   - <code>[Object](#Object)</code>\n  //.   - <code>[Pair](#Pair) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[RegExp](#RegExp)</code>\n  //.   - <code>[StrMap](#StrMap) ([Unknown][])</code>\n  //.   - <code>[String](#String)</code>\n  //.   - <code>[Symbol](#Symbol)</code>\n  //.   - <code>[Type](#Type)</code>\n  //.   - <code>[TypeClass](#TypeClass)</code>\n  //.   - <code>[Undefined](#Undefined)</code>\n  var env = [\n    AnyFunction,\n    Arguments,\n    Array_ (Unknown),\n    Array2 (Unknown) (Unknown),\n    Boolean_,\n    Date_,\n    Descending (Unknown),\n    Either_ (Unknown) (Unknown),\n    Error_,\n    Fn (Unknown) (Unknown),\n    HtmlElement,\n    Identity (Unknown),\n    Maybe (Unknown),\n    Null,\n    Number_,\n    Object_,\n    Pair (Unknown) (Unknown),\n    RegExp_,\n    StrMap (Unknown),\n    String_,\n    Symbol_,\n    Type,\n    TypeClass,\n    Undefined\n  ];\n\n  //  Unchecked :: String -> Type\n  function Unchecked(s) { return NullaryType (s) ('') ([]) (K (true)); }\n\n  //  production :: Boolean\n  var production =\n    typeof process !== 'undefined' &&\n    /* global process:false */\n    process != null &&\n    process.env != null &&\n    process.env.NODE_ENV === 'production';\n\n  //  numbers :: Array String\n  var numbers = [\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine'\n  ];\n\n  //  numArgs :: Integer -> String\n  function numArgs(n) {\n    return (n < numbers.length ? numbers[n] : show (n)) + ' ' +\n           (n === 1 ? 'argument' : 'arguments');\n  }\n\n  //  expandUnknown\n  //  :: Array Type\n  //  -> Array Object\n  //  -> Any\n  //  -> (a -> Array b)\n  //  -> Type\n  //  -> Array Type\n  function expandUnknown(env) {\n    return function(seen) {\n      return function(value) {\n        return function(extractor) {\n          return function(type) {\n            return type.type === UNKNOWN ?\n                   _determineActualTypes (env, seen, extractor (value)) :\n                   [type];\n          };\n        };\n      };\n    };\n  }\n\n  //  _determineActualTypes :: ... -> Array Type\n  function _determineActualTypes(\n    env,            // :: Array Type\n    seen,           // :: Array Object\n    values          // :: Array Any\n  ) {\n    var expandUnknown4 = expandUnknown (env);\n\n    function refine(types, value) {\n      var seen$;\n      if (typeof value === 'object' && value != null ||\n          typeof value === 'function') {\n        //  Abort if a circular reference is encountered; add the current\n        //  object to the array of seen objects otherwise.\n        if (seen.indexOf (value) >= 0) return [];\n        seen$ = Z.concat (seen, [value]);\n      } else {\n        seen$ = seen;\n      }\n      var expandUnknown2 = expandUnknown4 (seen$) (value);\n      return Z.chain (function(t) {\n        return (\n          (t.validate (env) (value)).isLeft ?\n            [] :\n          t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknown2 (t.extractors.$1) (t.types.$1)) :\n          t.type === BINARY ?\n            Z.lift2 (fromBinaryType (t),\n                     expandUnknown2 (t.extractors.$1) (t.types.$1),\n                     expandUnknown2 (t.extractors.$2) (t.types.$2)) :\n          // else\n            [t]\n        );\n      }, types);\n    }\n\n    return isEmpty (values) ?\n      [Unknown] :\n      or (Z.reduce (refine, env, values), [Inconsistent]);\n  }\n\n  //  isConsistent :: Type -> Boolean\n  function isConsistent(t) {\n    return t.type === UNARY   ? isConsistent (t.types.$1) :\n           t.type === BINARY  ? isConsistent (t.types.$1) &&\n                                isConsistent (t.types.$2) :\n           /* else */           t.type !== INCONSISTENT;\n  }\n\n  //  determineActualTypesStrict :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesStrict(env, values) {\n    return Z.filter (isConsistent,\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  determineActualTypesLoose :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesLoose(env, values) {\n    return Z.reject (function(t) { return t.type === INCONSISTENT; },\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  TypeInfo = { name :: String\n  //             , constraints :: StrMap (Array TypeClass)\n  //             , types :: NonEmpty (Array Type) }\n  //\n  //  TypeVarMap = StrMap { types :: Array Type\n  //                      , valuesByPath :: StrMap (Array Any) }\n  //\n  //  PropPath = Array (Number | String)\n\n  //  updateTypeVarMap :: ... -> TypeVarMap\n  function updateTypeVarMap(\n    env,            // :: Array Type\n    typeVarMap,     // :: TypeVarMap\n    typeVar,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var $typeVarMap = {};\n    for (var typeVarName in typeVarMap) {\n      var entry = typeVarMap[typeVarName];\n      var $entry = {types: entry.types.slice (), valuesByPath: {}};\n      for (var k in entry.valuesByPath) {\n        $entry.valuesByPath[k] = entry.valuesByPath[k].slice ();\n      }\n      $typeVarMap[typeVarName] = $entry;\n    }\n    if (!(hasOwnProperty.call ($typeVarMap, typeVar.name))) {\n      $typeVarMap[typeVar.name] = {\n        types: Z.filter (arityGte (typeVar.arity), env),\n        valuesByPath: {}\n      };\n    }\n\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    if (!(hasOwnProperty.call ($typeVarMap[typeVar.name].valuesByPath, key))) {\n      $typeVarMap[typeVar.name].valuesByPath[key] = [];\n    }\n\n    var isValid = test (env);\n\n    var expandUnknownStrict = B (B (B (filter (isConsistent))))\n                                (expandUnknown (env) ([]));\n\n    values.forEach (function(value) {\n      var expandUnknownStrict2 = expandUnknownStrict (value);\n      $typeVarMap[typeVar.name].valuesByPath[key].push (value);\n      $typeVarMap[typeVar.name].types = Z.chain (function(t) {\n        return (\n          !(isValid (t) (value)) ?\n            [] :\n          typeVar.arity === 0 && t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknownStrict2 (t.extractors.$1) (t.types.$1)) :\n          typeVar.arity === 0 && t.type === BINARY ?\n            Z.lift2 (fromBinaryType (t),\n                     expandUnknownStrict2 (t.extractors.$1) (t.types.$1),\n                     expandUnknownStrict2 (t.extractors.$2) (t.types.$2)) :\n          // else\n            [t]\n        );\n      }, $typeVarMap[typeVar.name].types);\n    });\n\n    return $typeVarMap;\n  }\n\n  //  underlineTypeVars :: (TypeInfo, StrMap (Array Any)) -> String\n  function underlineTypeVars(typeInfo, valuesByPath) {\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var paths = Z.map (JSON.parse, sortedKeys (valuesByPath));\n    return underline (\n      typeInfo,\n      K (K (_)),\n      function(index) {\n        return function(f) {\n          return function(t) {\n            return function(propPath) {\n              var indexedPropPath = Z.concat ([index], propPath);\n              return function(s) {\n                if (paths.some (isPrefix (indexedPropPath))) {\n                  var key = JSON.stringify (indexedPropPath);\n                  if (!(hasOwnProperty.call (valuesByPath, key))) return s;\n                  if (!(isEmpty (valuesByPath[key]))) return f (s);\n                }\n                return _ (s);\n              };\n            };\n          };\n        };\n      }\n    );\n  }\n\n  //  satisfactoryTypes :: ... -> Either (() -> Error)\n  //                                     { typeVarMap :: TypeVarMap\n  //                                     , types :: Array Type }\n  function satisfactoryTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeVarMap,     // :: TypeVarMap\n    expType,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var recur = satisfactoryTypes;\n\n    for (var idx = 0; idx < values.length; idx += 1) {\n      var result = expType.validate (env) (values[idx]);\n      if (result.isLeft) {\n        return Left (function() {\n          return invalidValue (env,\n                               typeInfo,\n                               index,\n                               Z.concat (propPath, result.value.propPath),\n                               result.value.value);\n        });\n      }\n    }\n\n    switch (expType.type) {\n\n      case VARIABLE:\n        var typeVarName = expType.name;\n        var constraints = typeInfo.constraints;\n        if (hasOwnProperty.call (constraints, typeVarName)) {\n          var typeClasses = constraints[typeVarName];\n          for (idx = 0; idx < values.length; idx += 1) {\n            for (var idx2 = 0; idx2 < typeClasses.length; idx2 += 1) {\n              if (!(typeClasses[idx2].test (values[idx]))) {\n                return Left (function() {\n                  return typeClassConstraintViolation (\n                    env,\n                    typeInfo,\n                    typeClasses[idx2],\n                    index,\n                    propPath,\n                    values[idx],\n                    typeVarMap\n                  );\n                });\n              }\n            }\n          }\n        }\n\n        var typeVarMap$ = updateTypeVarMap (env,\n                                            typeVarMap,\n                                            expType,\n                                            index,\n                                            propPath,\n                                            values);\n\n        var okTypes = typeVarMap$[typeVarName].types;\n        return isEmpty (okTypes) ?\n          Left (function() {\n            return typeVarConstraintViolation (\n              env,\n              typeInfo,\n              index,\n              propPath,\n              typeVarMap$[typeVarName].valuesByPath\n            );\n          }) :\n          Z.reduce (function(e, t) {\n            return Z.chain (function(r) {\n              //  The `a` in `Functor f => f a` corresponds to the `a`\n              //  in `Maybe a` but to the `b` in `Either a b`. A type\n              //  variable's $1 will correspond to either $1 or $2 of\n              //  the actual type depending on the actual type's arity.\n              var offset = t.arity - expType.arity;\n              return expType.keys.reduce (function(e, k, idx) {\n                var extractor = t.extractors[t.keys[offset + idx]];\n                return Z.reduce (function(e, x) {\n                  return Z.chain (function(r) {\n                    return recur (env,\n                                  typeInfo,\n                                  r.typeVarMap,\n                                  expType.types[k],\n                                  index,\n                                  Z.concat (propPath, [k]),\n                                  [x]);\n                  }, e);\n                }, e, Z.chain (extractor, values));\n              }, Right (r));\n            }, e);\n          }, Right ({typeVarMap: typeVarMap$, types: okTypes}), okTypes);\n\n      case UNARY:\n        return Z.map (\n          function(result) {\n            return {\n              typeVarMap: result.typeVarMap,\n              types: Z.map (fromUnaryType (expType),\n                            or (result.types, [expType.types.$1]))\n            };\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.extractors.$1, values))\n        );\n\n      case BINARY:\n        return Z.chain (\n          function(result) {\n            var $1s = result.types;\n            return Z.map (\n              function(result) {\n                var $2s = result.types;\n                return {\n                  typeVarMap: result.typeVarMap,\n                  types: Z.lift2 (fromBinaryType (expType),\n                                  or ($1s, [expType.types.$1]),\n                                  or ($2s, [expType.types.$2]))\n                };\n              },\n              recur (env,\n                     typeInfo,\n                     result.typeVarMap,\n                     expType.types.$2,\n                     index,\n                     Z.concat (propPath, ['$2']),\n                     Z.chain (expType.extractors.$2, values))\n            );\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.extractors.$1, values))\n        );\n\n      case RECORD:\n        return Z.reduce (function(e, k) {\n          return Z.chain (function(r) {\n            return recur (env,\n                          typeInfo,\n                          r.typeVarMap,\n                          expType.types[k],\n                          index,\n                          Z.concat (propPath, [k]),\n                          Z.chain (expType.extractors[k], values));\n          }, e);\n        }, Right ({typeVarMap: typeVarMap, types: [expType]}), expType.keys);\n\n      default:\n        return Right ({typeVarMap: typeVarMap, types: [expType]});\n    }\n  }\n\n  //# test :: Array Type -> Type -> a -> Boolean\n  //.\n  //. Takes an environment, a type, and any value. Returns `true` if the value\n  //. is a member of the type; `false` otherwise.\n  //.\n  //. The environment is only significant if the type contains\n  //. [type variables][].\n  function test(env) {\n    return function(t) {\n      return function(x) {\n        var typeInfo = {name: 'name', constraints: {}, types: [t]};\n        return (satisfactoryTypes (env, typeInfo, {}, t, 0, [], [x])).isRight;\n      };\n    };\n  }\n\n  //. ### Type constructors\n  //.\n  //. sanctuary-def provides several functions for defining types.\n\n  //# NullaryType :: String -> String -> Array Type -> (Any -> Boolean) -> Type\n  //.\n  //. Type constructor for types with no type variables (such as [`Number`][]).\n  //.\n  //. To define a nullary type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`); and\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Integer :: Type\n  //. const Integer = $.NullaryType\n  //.   ('Integer')\n  //.   ('http://example.com/my-package#Integer')\n  //.   ([])\n  //.   (x => typeof x === 'number' &&\n  //.         Math.floor (x) === x &&\n  //.         x >= Number.MIN_SAFE_INTEGER &&\n  //.         x <= Number.MAX_SAFE_INTEGER);\n  //.\n  //. //    NonZeroInteger :: Type\n  //. const NonZeroInteger = $.NullaryType\n  //.   ('NonZeroInteger')\n  //.   ('http://example.com/my-package#NonZeroInteger')\n  //.   ([Integer])\n  //.   (x => x !== 0);\n  //.\n  //. //    rem :: Integer -> NonZeroInteger -> Integer\n  //. const rem =\n  //. def ('rem')\n  //.     ({})\n  //.     ([Integer, NonZeroInteger, Integer])\n  //.     (x => y => x % y);\n  //.\n  //. rem (42) (5);\n  //. // => 2\n  //.\n  //. rem (0.5);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //          ^^^^^^^\n  //. //             1\n  //. //\n  //. //   1)  0.5 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Integer’.\n  //. //\n  //. //   See http://example.com/my-package#Integer for information about the Integer type.\n  //.\n  //. rem (42) (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //                     ^^^^^^^^^^^^^^\n  //. //                           1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘NonZeroInteger’.\n  //. //\n  //. //   See http://example.com/my-package#NonZeroInteger for information about the NonZeroInteger type.\n  //. ```\n  function NullaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return _Type (NULLARY, name, url, 0, null, supertypes, K (test), []);\n        };\n      };\n    };\n  }\n\n  //# UnaryType :: Foldable f => String -> String -> Array Type -> (Any -> Boolean) -> (t a -> f a) -> Type -> Type\n  //.\n  //. Type constructor for types with one type variable (such as [`Array`][]).\n  //.\n  //. To define a unary type `t a` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`);\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t x` for some type `x`;\n  //.\n  //.   - a function that takes any value of type `t a` and returns the values\n  //.     of type `a` contained in the `t`; and\n  //.\n  //.   - the type of `a`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const show = require ('sanctuary-show');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    MaybeTypeRep :: TypeRep Maybe\n  //. const MaybeTypeRep = {'@@type': 'my-package/Maybe'};\n  //.\n  //. //    Maybe :: Type -> Type\n  //. const Maybe = $.UnaryType\n  //.   ('Maybe')\n  //.   ('http://example.com/my-package#Maybe')\n  //.   ([])\n  //.   (x => type (x) === MaybeTypeRep['@@type'])\n  //.   (maybe => maybe.isJust ? [maybe.value] : []);\n  //.\n  //. //    Nothing :: Maybe a\n  //. const Nothing = {\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': false,\n  //.   'isNothing': true,\n  //.   '@@show': () => 'Nothing',\n  //. };\n  //.\n  //. //    Just :: a -> Maybe a\n  //. const Just = x => ({\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': true,\n  //.   'isNothing': false,\n  //.   '@@show': () => `Just (${show (x)})`,\n  //.   'value': x,\n  //. });\n  //.\n  //. //    fromMaybe :: a -> Maybe a -> a\n  //. const fromMaybe =\n  //. def ('fromMaybe')\n  //.     ({})\n  //.     ([a, Maybe (a), a])\n  //.     (x => m => m.isJust ? m.value : x);\n  //.\n  //. fromMaybe (0) (Just (42));\n  //. // => 42\n  //.\n  //. fromMaybe (0) (Nothing);\n  //. // => 0\n  //.\n  //. fromMaybe (0) (Just ('XXX'));\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   fromMaybe :: a -> Maybe a -> a\n  //. //                ^          ^\n  //. //                1          2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"XXX\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function UnaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return function(_1) {\n            return function($1) {\n              return _Type (UNARY,\n                            name,\n                            url,\n                            1,\n                            null,\n                            supertypes,\n                            K (test),\n                            [['$1', _1, $1]]);\n            };\n          };\n        };\n      };\n    };\n  }\n\n  //  fromUnaryType :: Type -> Type -> Type\n  function fromUnaryType(t) {\n    return UnaryType (t.name)\n                     (t.url)\n                     (t.supertypes)\n                     (t._test ([]))\n                     (t._extractors.$1);\n  }\n\n  //# BinaryType :: Foldable f => String -> String -> Array Type -> (Any -> Boolean) -> (t a b -> f a) -> (t a b -> f b) -> Type -> Type -> Type\n  //.\n  //. Type constructor for types with two type variables (such as\n  //. [`Array2`][]).\n  //.\n  //. To define a binary type `t a b` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`);\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t x y` for some types `x` and `y`;\n  //.\n  //.   - a function that takes any value of type `t a b` and returns the\n  //.     values of type `a` contained in the `t`;\n  //.\n  //.   - a function that takes any value of type `t a b` and returns the\n  //.     values of type `b` contained in the `t`;\n  //.\n  //.   - the type of `a`; and\n  //.\n  //.   - the type of `b`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    PairTypeRep :: TypeRep Pair\n  //. const PairTypeRep = {'@@type': 'my-package/Pair'};\n  //.\n  //. //    $Pair :: Type -> Type -> Type\n  //. const $Pair = $.BinaryType\n  //.   ('Pair')\n  //.   ('http://example.com/my-package#Pair')\n  //.   ([])\n  //.   (x => type (x) === PairTypeRep['@@type'])\n  //.   (({fst}) => [fst])\n  //.   (({snd}) => [snd]);\n  //.\n  //. //    Pair :: a -> b -> Pair a b\n  //. const Pair =\n  //. def ('Pair')\n  //.     ({})\n  //.     ([a, b, $Pair (a) (b)])\n  //.     (fst => snd => ({\n  //.        'constructor': PairTypeRep,\n  //.        'fst': fst,\n  //.        'snd': snd,\n  //.        '@@show': () => `Pair (${show (fst)}) (${show (snd)})`,\n  //.      }));\n  //.\n  //. //    Rank :: Type\n  //. const Rank = $.NullaryType\n  //.   ('Rank')\n  //.   ('http://example.com/my-package#Rank')\n  //.   ([$.String])\n  //.   (x => /^(A|2|3|4|5|6|7|8|9|10|J|Q|K)$/.test (x));\n  //.\n  //. //    Suit :: Type\n  //. const Suit = $.NullaryType\n  //.   ('Suit')\n  //.   ('http://example.com/my-package#Suit')\n  //.   ([$.String])\n  //.   (x => /^[\\u2660\\u2663\\u2665\\u2666]$/.test (x));\n  //.\n  //. //    Card :: Type\n  //. const Card = $Pair (Rank) (Suit);\n  //.\n  //. //    showCard :: Card -> String\n  //. const showCard =\n  //. def ('showCard')\n  //.     ({})\n  //.     ([Card, $.String])\n  //.     (card => card.fst + card.snd);\n  //.\n  //. showCard (Pair ('A') ('♠'));\n  //. // => 'A♠'\n  //.\n  //. showCard (Pair ('X') ('♠'));\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   showCard :: Pair Rank Suit -> String\n  //. //                    ^^^^\n  //. //                     1\n  //. //\n  //. //   1)  \"X\" :: String\n  //. //\n  //. //   The value at position 1 is not a member of ‘Rank’.\n  //. //\n  //. //   See http://example.com/my-package#Rank for information about the Rank type.\n  //. ```\n  function BinaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return function(_1) {\n            return function(_2) {\n              return function($1) {\n                return function($2) {\n                  return _Type (BINARY,\n                                name,\n                                url,\n                                2,\n                                null,\n                                supertypes,\n                                K (test),\n                                [['$1', _1, $1],\n                                 ['$2', _2, $2]]);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  }\n\n  //  fromBinaryType :: (Type -> Type -> Type) -> Type -> Type -> Type\n  function fromBinaryType(t) {\n    return BinaryType (t.name)\n                      (t.url)\n                      (t.supertypes)\n                      (t._test ([]))\n                      (t._extractors.$1)\n                      (t._extractors.$2);\n  }\n\n  //# EnumType :: String -> String -> Array Any -> Type\n  //.\n  //. Type constructor for [enumerated types][] (such as [`RegexFlags`][]).\n  //.\n  //. To define an enumerated type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`); and\n  //.\n  //.   - an array of distinct values.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Denomination :: Type\n  //. const Denomination = $.EnumType\n  //.   ('Denomination')\n  //.   ('http://example.com/my-package#Denomination')\n  //.   ([10, 20, 50, 100, 200]);\n  //. ```\n  function EnumType(name) {\n    return function(url) {\n      return B (NullaryType (name) (url) ([])) (memberOf);\n    };\n  }\n\n  //# RecordType :: StrMap Type -> Type\n  //.\n  //. `RecordType` is used to construct anonymous record types. The type\n  //. definition specifies the name and type of each required field. A field is\n  //. an enumerable property (either an own property or an inherited property).\n  //.\n  //. To define an anonymous record type one must provide:\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Point :: Type\n  //. const Point = $.RecordType ({x: $.FiniteNumber, y: $.FiniteNumber});\n  //.\n  //. //    dist :: Point -> Point -> FiniteNumber\n  //. const dist =\n  //. def ('dist')\n  //.     ({})\n  //.     ([Point, Point, $.FiniteNumber])\n  //.     (p => q => Math.sqrt (Math.pow (p.x - q.x, 2) +\n  //.                           Math.pow (p.y - q.y, 2)));\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4, color: 'red'});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: NaN, y: NaN});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //                                                              ^^^^^^^^^^^^\n  //. //                                                                   1\n  //. //\n  //. //   1)  NaN :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘FiniteNumber’.\n  //.\n  //. dist (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  //. //                              1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘{ x :: FiniteNumber, y :: FiniteNumber }’.\n  //. ```\n  function RecordType(fields) {\n    var keys = sortedKeys (fields);\n\n    function format(outer, inner) {\n      if (isEmpty (keys)) return outer ('{}');\n      var reprs = Z.map (function(k) {\n        var t = fields[k];\n        return outer (' ') +\n               outer (/^(?!\\d)[$\\w]+$/.test (k) ? k : show (k)) +\n               outer (' :: ') +\n               inner (k) (show (t));\n      }, keys);\n      return wrap (outer ('{')) (outer (' }')) (joinWith (outer (','), reprs));\n    }\n\n    function test(env) {\n      return function(x) {\n        if (x == null) return false;\n        var missing = {};\n        keys.forEach (function(k) { missing[k] = k; });\n        for (var k in x) delete missing[k];\n        return isEmpty (missing);\n      };\n    }\n\n    var tuples = keys.map (function(k) {\n      return [k, function(x) { return [x[k]]; }, fields[k]];\n    });\n\n    return _Type (RECORD, '', '', 0, format, [], test, tuples);\n  }\n\n  //# NamedRecordType :: NonEmpty String -> String -> Array Type -> StrMap Type -> Type\n  //.\n  //. `NamedRecordType` is used to construct named record types. The type\n  //. definition specifies the name and type of each required field. A field is\n  //. an enumerable property (either an own property or an inherited property).\n  //.\n  //. To define a named record type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`); and\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Circle :: Type\n  //. const Circle = $.NamedRecordType\n  //.   ('my-package/Circle')\n  //.   ('http://example.com/my-package#Circle')\n  //.   ([])\n  //.   ({radius: $.PositiveFiniteNumber});\n  //.\n  //. //    Cylinder :: Type\n  //. const Cylinder = $.NamedRecordType\n  //.   ('Cylinder')\n  //.   ('http://example.com/my-package#Cylinder')\n  //.   ([Circle])\n  //.   ({height: $.PositiveFiniteNumber});\n  //.\n  //. //    volume :: Cylinder -> PositiveFiniteNumber\n  //. const volume =\n  //. def ('volume')\n  //.     ({})\n  //.     ([Cylinder, $.FiniteNumber])\n  //.     (cyl => Math.PI * cyl.radius * cyl.radius * cyl.height);\n  //.\n  //. volume ({radius: 2, height: 10});\n  //. // => 125.66370614359172\n  //.\n  //. volume ({radius: 2});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   volume :: Cylinder -> FiniteNumber\n  //. //             ^^^^^^^^\n  //. //                1\n  //. //\n  //. //   1)  {\"radius\": 2} :: Object, StrMap Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Cylinder’.\n  //. //\n  //. //   See http://example.com/my-package#Cylinder for information about the Cylinder type.\n  //. ```\n  function NamedRecordType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(fields) {\n          var keys = sortedKeys (fields);\n\n          function format(outer, inner) {\n            return outer (name);\n          }\n\n          function test(env) {\n            var test2 = _test (env);\n            return function(x) {\n              if (x == null) return false;\n              var missing = {};\n              keys.forEach (function(k) { missing[k] = k; });\n              for (var k in x) delete missing[k];\n              return isEmpty (missing) &&\n                     keys.every (function(k) {\n                       return test2 (x[k]) (fields[k]);\n                     });\n            };\n          }\n\n          var tuples = keys.map (function(k) {\n            return [k, function(x) { return [x[k]]; }, fields[k]];\n          });\n\n          return _Type (RECORD,\n                        name,\n                        url,\n                        0,\n                        format,\n                        supertypes,\n                        test,\n                        tuples);\n        };\n      };\n    };\n  }\n\n  //  typeVarPred :: NonNegativeInteger -> Array Type -> Any -> Boolean\n  function typeVarPred(arity) {\n    var filter = arityGte (arity);\n    return function(env) {\n      var test2 = _test (env);\n      return function(x) {\n        var test1 = test2 (x);\n        return env.some (function(t) { return filter (t) && test1 (t); });\n      };\n    };\n  }\n\n  //# TypeVariable :: String -> Type\n  //.\n  //. Polymorphism is powerful. Not being able to define a function for\n  //. all types would be very limiting indeed: one couldn't even define the\n  //. identity function!\n  //.\n  //. Before defining a polymorphic function one must define one or more type\n  //. variables:\n  //.\n  //. ```javascript\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //.\n  //. //    id :: a -> a\n  //. const id = def ('id') ({}) ([a, a]) (x => x);\n  //.\n  //. id (42);\n  //. // => 42\n  //.\n  //. id (null);\n  //. // => null\n  //. ```\n  //.\n  //. The same type variable may be used in multiple positions, creating a\n  //. constraint:\n  //.\n  //. ```javascript\n  //. //    cmp :: a -> a -> Number\n  //. const cmp =\n  //. def ('cmp')\n  //.     ({})\n  //.     ([a, a, $.Number])\n  //.     (x => y => x < y ? -1 : x > y ? 1 : 0);\n  //.\n  //. cmp (42) (42);\n  //. // => 0\n  //.\n  //. cmp ('a') ('z');\n  //. // => -1\n  //.\n  //. cmp ('z') ('a');\n  //. // => 1\n  //.\n  //. cmp (0) ('1');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   cmp :: a -> a -> Number\n  //. //          ^    ^\n  //. //          1    2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"1\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function TypeVariable(name) {\n    var tuples = [];\n    var test = typeVarPred (tuples.length);\n    return _Type (VARIABLE, name, '', 0, always2 (name), [], test, tuples);\n  }\n\n  //# UnaryTypeVariable :: String -> Type -> Type\n  //.\n  //. Combines [`UnaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a unary type variable `t a` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`); and\n  //.\n  //.   - the type of `a`.\n  //.\n  //. Consider the type of a generalized `map`:\n  //.\n  //. ```haskell\n  //. map :: Functor f => (a -> b) -> f a -> f b\n  //. ```\n  //.\n  //. `f` is a unary type variable. With two (nullary) type variables, one\n  //. unary type variable, and one [type class][] it's possible to define a\n  //. fully polymorphic `map` function:\n  //.\n  //. ```javascript\n  //. const $ = require ('sanctuary-def');\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //. const f = $.UnaryTypeVariable ('f');\n  //.\n  //. //    map :: Functor f => (a -> b) -> f a -> f b\n  //. const map =\n  //. def ('map')\n  //.     ({f: [Z.Functor]})\n  //.     ([$.Function ([a, b]), f (a), f (b)])\n  //.     (f => functor => Z.map (f, functor));\n  //. ```\n  //.\n  //. Whereas a regular type variable is fully resolved (`a` might become\n  //. `Array (Array String)`, for example), a unary type variable defers to\n  //. its type argument, which may itself be a type variable. The type argument\n  //. corresponds to the type argument of a unary type or the *second* type\n  //. argument of a binary type. The second type argument of `Map k v`, for\n  //. example, is `v`. One could replace `Functor => f` with `Map k` or with\n  //. `Map Integer`, but not with `Map`.\n  //.\n  //. This shallow inspection makes it possible to constrain a value's \"outer\"\n  //. and \"inner\" types independently.\n  function UnaryTypeVariable(name) {\n    return function($1) {\n      var tuples = [['$1', K ([]), $1]];\n      var test = typeVarPred (tuples.length);\n      return _Type (VARIABLE, name, '', 1, null, [], test, tuples);\n    };\n  }\n\n  //# BinaryTypeVariable :: String -> Type -> Type -> Type\n  //.\n  //. Combines [`BinaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a binary type variable `t a b` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`);\n  //.\n  //.   - the type of `a`; and\n  //.\n  //.   - the type of `b`.\n  //.\n  //. The more detailed explanation of [`UnaryTypeVariable`][] also applies to\n  //. `BinaryTypeVariable`.\n  function BinaryTypeVariable(name) {\n    return function($1) {\n      return function($2) {\n        var tuples = [['$1', K ([]), $1],\n                      ['$2', K ([]), $2]];\n        var test = typeVarPred (tuples.length);\n        return _Type (VARIABLE, name, '', 2, null, [], test, tuples);\n      };\n    };\n  }\n\n  //# Thunk :: Type -> Type\n  //.\n  //. `$.Thunk (T)` is shorthand for `$.Function ([T])`, the type comprising\n  //. every nullary function (thunk) that returns a value of type `T`.\n  function Thunk(t) { return Function_ ([t]); }\n\n  //# Predicate :: Type -> Type\n  //.\n  //. `$.Predicate (T)` is shorthand for `$.Fn (T) ($.Boolean)`, the type\n  //. comprising every predicate function that takes a value of type `T`.\n  function Predicate(t) { return Fn (t) (Boolean_); }\n\n  //. ### Type classes\n  //.\n  //. One can trivially define a function of type `String -> String -> String`\n  //. that concatenates two strings. This is overly restrictive, though, since\n  //. other types support concatenation (`Array a`, for example).\n  //.\n  //. One could use a type variable to define a polymorphic \"concat\" function:\n  //.\n  //. ```javascript\n  //. //    _concat :: a -> a -> a\n  //. const _concat =\n  //. def ('_concat')\n  //.     ({})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. _concat ('fizz') ('buzz');\n  //. // => 'fizzbuzz'\n  //.\n  //. _concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. _concat ([1, 2]) ('buzz');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   _concat :: a -> a -> a\n  //. //              ^    ^\n  //. //              1    2\n  //. //\n  //. //   1)  [1, 2] :: Array Number\n  //. //\n  //. //   2)  \"buzz\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  //.\n  //. The type of `_concat` is misleading: it suggests that it can operate on\n  //. any two values of *any* one type. In fact there's an implicit constraint,\n  //. since the type must support concatenation (in [mathematical][semigroup]\n  //. terms, the type must have a [semigroup][FL:Semigroup]). Violating this\n  //. implicit constraint results in a run-time error in the implementation:\n  //.\n  //. ```javascript\n  //. _concat (null) (null);\n  //. // ! TypeError: Cannot read property 'concat' of null\n  //. ```\n  //.\n  //. The solution is to constrain `a` by first defining a [`TypeClass`][]\n  //. value, then specifying the constraint in the definition of the \"concat\"\n  //. function:\n  //.\n  //. ```javascript\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. //    Semigroup :: TypeClass\n  //. const Semigroup = Z.TypeClass (\n  //.   'my-package/Semigroup',\n  //.   'http://example.com/my-package#Semigroup',\n  //.   [],\n  //.   x => x != null && typeof x.concat === 'function'\n  //. );\n  //.\n  //. //    concat :: Semigroup a => a -> a -> a\n  //. const concat =\n  //. def ('concat')\n  //.     ({a: [Semigroup]})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. concat (null) (null);\n  //. // ! TypeError: Type-class constraint violation\n  //. //\n  //. //   concat :: Semigroup a => a -> a -> a\n  //. //             ^^^^^^^^^^^    ^\n  //. //                            1\n  //. //\n  //. //   1)  null :: Null\n  //. //\n  //. //   ‘concat’ requires ‘a’ to satisfy the Semigroup type-class constraint; the value at position 1 does not.\n  //. //\n  //. //   See http://example.com/my-package#Semigroup for information about the my-package/Semigroup type class.\n  //. ```\n  //.\n  //. Multiple constraints may be placed on a type variable by including\n  //. multiple `TypeClass` values in the array (e.g. `{a: [Foo, Bar, Baz]}`).\n\n  //  invalidArgumentsCount :: (TypeInfo, Integer, Integer, Array Any) -> Error\n  //\n  //  This function is used in `curry` when a function defined via `def`\n  //  is applied to too many arguments.\n  function invalidArgumentsCount(typeInfo, index, numArgsExpected, args) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) + ' applied to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return K (K (index_ === index ? f : _));\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  constraintsRepr :: ... -> String\n  function constraintsRepr(\n    constraints,    // :: StrMap (Array TypeClass)\n    outer,          // :: String -> String\n    inner           // :: String -> TypeClass -> String -> String\n  ) {\n    var $reprs = [];\n    (sortedKeys (constraints)).forEach (function(k) {\n      var f = inner (k);\n      constraints[k].forEach (function(typeClass) {\n        $reprs.push (f (typeClass) (stripNamespace (typeClass) + ' ' + k));\n      });\n    });\n    return when ($reprs.length > 0)\n                (wrap ('') (outer (' => ')))\n                (when ($reprs.length > 1)\n                      (parenthesize (outer))\n                      (joinWith (outer (', '), $reprs)));\n  }\n\n  //  label :: String -> String -> String\n  function label(label) {\n    return function(s) {\n      var delta = s.length - label.length;\n      return strRepeat (' ', Math.floor (delta / 2)) + label +\n             strRepeat (' ', Math.ceil (delta / 2));\n    };\n  }\n\n  //  typeVarNames :: Type -> Array String\n  function typeVarNames(t) {\n    return Z.concat (\n      t.type === VARIABLE ? [t.name] : [],\n      Z.chain (function(k) { return typeVarNames (t.types[k]); }, t.keys)\n    );\n  }\n\n  //  showTypeWith :: Array Type -> Type -> String\n  function showTypeWith(types) {\n    var names = Z.chain (typeVarNames, types);\n    return function(t) {\n      var code = 'a'.charCodeAt (0);\n      return when (t.type === FUNCTION)\n                  (parenthesize (I))\n                  ((show (t)).replace (/\\bUnknown\\b/g, function() {\n                     // eslint-disable-next-line no-plusplus\n                     do var name = String.fromCharCode (code++);\n                     while (names.indexOf (name) >= 0);\n                     return name;\n                   }));\n    };\n  }\n\n  //  showValuesAndTypes :: ... -> String\n  function showValuesAndTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    values,         // :: Array Any\n    pos             // :: Integer\n  ) {\n    var showType = showTypeWith (typeInfo.types);\n    return show (pos) + ')  ' + joinWith ('\\n    ', Z.map (function(x) {\n      return show (x) +\n             ' :: ' +\n             joinWith (', ',\n                       or (Z.map (showType,\n                                  determineActualTypesLoose (env, [x])),\n                           ['(no types)']));\n    }, values));\n  }\n\n  //  typeSignature :: TypeInfo -> String\n  function typeSignature(typeInfo) {\n    return typeInfo.name + ' :: ' +\n           constraintsRepr (typeInfo.constraints, I, K (K (I))) +\n           joinWith (' -> ',\n                     Z.map (showTypeWith (typeInfo.types), typeInfo.types));\n  }\n\n  //  _underline :: ... -> String\n  function _underline(\n    t,              // :: Type\n    propPath,       // :: PropPath\n    formatType3     // :: Type -> Array String -> String -> String\n  ) {\n    return formatType3 (t) (propPath) (t.format (_, function(k) {\n      return K (_underline (t.types[k],\n                            Z.concat (propPath, [k]),\n                            formatType3));\n    }));\n  }\n\n  //  underline :: ... -> String\n  function underline(\n    typeInfo,               // :: TypeInfo\n    underlineConstraint,    // :: String -> TypeClass -> String -> String\n    formatType5\n    // :: Integer -> (String -> String) -> Type -> PropPath -> String -> String\n  ) {\n    var st = typeInfo.types.reduce (function(st, t, index) {\n      var formatType4 = formatType5 (index);\n      function f(g) {\n        return function(type) {\n          return B (B (B (when (type.type === FUNCTION)\n                               (parenthesize (_)))))\n                   (formatType4 (g));\n        };\n      }\n      st.carets.push (_underline (t, [], W (f (r ('^')))));\n      st.numbers.push (_underline (t, [], W (f (function(s) {\n        return label (show (st.counter += 1)) (s);\n      }))));\n      return st;\n    }, {carets: [], numbers: [], counter: 0});\n\n    return typeSignature (typeInfo) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, underlineConstraint) +\n              joinWith (_ (' -> '), st.carets) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, K (K (_))) +\n              joinWith (_ (' -> '), st.numbers) + '\\n';\n  }\n\n  //  resolvePropPath :: (Type, Array String) -> Type\n  function resolvePropPath(t, propPath) {\n    return Z.reduce (function(t, prop) { return t.types[prop]; },\n                     t,\n                     propPath);\n  }\n\n  //  formatType6 ::\n  //    PropPath -> Integer -> (String -> String) ->\n  //      Type -> PropPath -> String -> String\n  function formatType6(indexedPropPath) {\n    return function(index_) {\n      return function(f) {\n        return function(t) {\n          return function(propPath_) {\n            var indexedPropPath_ = Z.concat ([index_], propPath_);\n            var p = isPrefix (indexedPropPath_) (indexedPropPath);\n            var q = isPrefix (indexedPropPath) (indexedPropPath_);\n            return p && q ? f : p ? I : _;\n          };\n        };\n      };\n    };\n  }\n\n  //  see :: (String, { name :: String, url :: String? }) -> String\n  function see(label, record) {\n    return record.url == null || record.url === '' ?\n           '' :\n           '\\nSee ' + record.url +\n           ' for information about the ' + record.name + ' ' + label + '.\\n';\n  }\n\n  //  typeClassConstraintViolation :: ... -> Error\n  function typeClassConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeClass,      // :: TypeClass\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value,          // :: Any\n    typeVarMap      // :: TypeVarMap\n  ) {\n    var expType = resolvePropPath (typeInfo.types[index], propPath);\n    return new TypeError (trimTrailingSpaces (\n      'Type-class constraint violation\\n\\n' +\n      underline (typeInfo,\n                 function(tvn) {\n                   return function(tc) {\n                     return (\n                       tvn === expType.name && tc.name === typeClass.name ?\n                         r ('^') :\n                         _\n                     );\n                   };\n                 },\n                 formatType6 (Z.concat ([index], propPath))) +\n      '\\n' +\n      showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n      q (typeInfo.name) + ' requires ' +\n      q (expType.name) + ' to satisfy the ' +\n      stripNamespace (typeClass) + ' type-class constraint; ' +\n      'the value at position 1 does not.\\n' +\n      see ('type class', typeClass)\n    ));\n  }\n\n  //  typeVarConstraintViolation :: ... -> Error\n  function typeVarConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    valuesByPath    // :: StrMap (Array Any)\n  ) {\n    //  If we apply an ‘a -> a -> a -> a’ function to Left ('x'), Right (1),\n    //  and Right (null) we'd like to avoid underlining the first argument\n    //  position, since Left ('x') is compatible with the other ‘a’ values.\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    var values = valuesByPath[key];\n\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var keys = Z.filter (function(k) {\n      var values_ = valuesByPath[k];\n      return (\n        //  Keep X, the position at which the violation was observed.\n        k === key ||\n        //  Keep positions whose values are incompatible with the values at X.\n        isEmpty (determineActualTypesStrict (env, Z.concat (values, values_)))\n      );\n    }, sortedKeys (valuesByPath));\n\n    var underlinedTypeVars =\n    underlineTypeVars (typeInfo,\n                       Z.reduce (function($valuesByPath, k) {\n                         $valuesByPath[k] = valuesByPath[k];\n                         return $valuesByPath;\n                       }, {}, keys));\n\n    return new TypeError (trimTrailingSpaces (\n      'Type-variable constraint violation\\n\\n' +\n      underlinedTypeVars + '\\n' +\n      (Z.reduce (function(st, k) {\n        var values = valuesByPath[k];\n        return isEmpty (values) ? st : {\n          idx: st.idx + 1,\n          s: st.s +\n             showValuesAndTypes (env, typeInfo, values, st.idx + 1) +\n             '\\n\\n'\n        };\n      }, {idx: 0, s: ''}, keys)).s +\n      'Since there is no type of which all the above values are ' +\n      'members, the type-variable constraint has been violated.\\n'\n    ));\n  }\n\n  //  invalidValue :: ... -> Error\n  function invalidValue(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value           // :: Any\n  ) {\n    var t = resolvePropPath (typeInfo.types[index], propPath);\n\n    var underlinedTypeVars =\n    underline (typeInfo,\n               K (K (_)),\n               formatType6 (Z.concat ([index], propPath)));\n\n    return new TypeError (trimTrailingSpaces (\n      t.type === VARIABLE &&\n      isEmpty (determineActualTypesLoose (env, [value])) ?\n        'Unrecognized value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n        toMarkdownList (\n          'The environment is empty! ' +\n          'Polymorphic functions require a non-empty environment.\\n',\n          'The value at position 1 is not a member of any type in ' +\n          'the environment.\\n\\n' +\n          'The environment contains the following types:\\n\\n',\n          showTypeWith (typeInfo.types),\n          env\n        ) :\n      // else\n        'Invalid value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n        'The value at position 1 is not a member of ' +\n        q (show (t)) + '.\\n' +\n        see (arityGte (1) (t) ? 'type constructor' : 'type', t)\n    ));\n  }\n\n  //  invalidArgumentsLength :: ... -> Error\n  //\n  //  This function is used in `wrapFunctionCond` to ensure that higher-order\n  //  functions defined via `def` only ever apply a function argument to the\n  //  correct number of arguments.\n  function invalidArgumentsLength(\n    typeInfo,           // :: TypeInfo\n    index,              // :: Integer\n    numArgsExpected,    // :: Integer\n    args                // :: Array Any\n  ) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) +\n      ' applied ' + q (show (typeInfo.types[index])) +\n      ' to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return function(t) {\n              return function(propPath) {\n                return function(s) {\n                  return index_ === index ?\n                    t.format (_, function(k) { return k === '$1' ? f : _; }) :\n                    _ (s);\n                };\n              };\n            };\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  assertRight :: Either (() -> Error) a -> a !\n  function assertRight(either) {\n    if (either.isLeft) throw either.value ();\n    return either.value;\n  }\n\n  //  withTypeChecking :: ... -> Function\n  function withTypeChecking(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    impl            // :: Function\n  ) {\n    var n = typeInfo.types.length - 1;\n\n    //  wrapFunctionCond :: (TypeVarMap, Integer, a) -> a\n    function wrapFunctionCond(_typeVarMap, index, value) {\n      var expType = typeInfo.types[index];\n      if (expType.type !== FUNCTION) return value;\n\n      //  checkValue :: (TypeVarMap, Integer, String, a) -> Either (() -> Error) TypeVarMap\n      function checkValue(typeVarMap, index, k, x) {\n        var propPath = [k];\n        var t = expType.types[k];\n        return (\n          t.type === VARIABLE ?\n            Z.chain (\n              function(typeVarMap) {\n                return isEmpty (typeVarMap[t.name].types) ?\n                  Left (function() {\n                    return typeVarConstraintViolation (\n                      env,\n                      typeInfo,\n                      index,\n                      propPath,\n                      typeVarMap[t.name].valuesByPath\n                    );\n                  }) :\n                  Right (typeVarMap);\n              },\n              Right (updateTypeVarMap (env,\n                                       typeVarMap,\n                                       t,\n                                       index,\n                                       propPath,\n                                       [x]))\n            ) :\n          // else\n            Z.map (\n              function(r) { return r.typeVarMap; },\n              satisfactoryTypes (env,\n                                 typeInfo,\n                                 typeVarMap,\n                                 t,\n                                 index,\n                                 propPath,\n                                 [x])\n            )\n        );\n      }\n\n      var typeVarMap = _typeVarMap;\n      return function(x) {\n        if (arguments.length !== expType.arity - 1) {\n          throw invalidArgumentsLength (typeInfo,\n                                        index,\n                                        expType.arity - 1,\n                                        slice.call (arguments));\n        }\n\n        var args = arguments;\n        typeVarMap = assertRight (\n          (init (expType.keys)).reduce (function(either, k, idx) {\n            var arg = args[idx];\n            return Z.chain (function(typeVarMap) {\n              return checkValue (typeVarMap, index, k, arg);\n            }, either);\n          }, Right (typeVarMap))\n        );\n\n        var output = value.apply (this, arguments);\n        var k = last (expType.keys);\n        typeVarMap = assertRight (checkValue (typeVarMap, index, k, output));\n        return output;\n      };\n    }\n\n    //  wrapNext :: (TypeVarMap, Array Any, Integer) -> (a -> b)\n    function wrapNext(_typeVarMap, _values, index) {\n      return function(x) {\n        var args = slice.call (arguments);\n        if (args.length !== 1) {\n          throw invalidArgumentsCount (typeInfo, index, 1, args);\n        }\n        var typeVarMap = (assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             _typeVarMap,\n                             typeInfo.types[index],\n                             index,\n                             [],\n                             args)\n        )).typeVarMap;\n\n        var values = Z.concat (_values, args);\n        if (index + 1 === n) {\n          var value = values.reduce (function(f, x, idx) {\n            return f (wrapFunctionCond (typeVarMap, idx, x));\n          }, impl);\n          typeVarMap = (assertRight (\n            satisfactoryTypes (env,\n                               typeInfo,\n                               typeVarMap,\n                               typeInfo.types[n],\n                               n,\n                               [],\n                               [value])\n          )).typeVarMap;\n          return wrapFunctionCond (typeVarMap, n, value);\n        } else {\n          return wrapNext (typeVarMap, values, index + 1);\n        }\n      };\n    }\n\n    var wrapped = typeInfo.types[0].type === NO_ARGUMENTS ?\n      function() {\n        if (arguments.length !== 0) {\n          throw invalidArgumentsCount (typeInfo, 0, 0, slice.call (arguments));\n        }\n        var value = impl ();\n        var typeVarMap = (assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             {},\n                             typeInfo.types[n],\n                             n,\n                             [],\n                             [value])\n        )).typeVarMap;\n        return wrapFunctionCond (typeVarMap, n, value);\n      } :\n      wrapNext ({}, [], 0);\n\n    wrapped[inspect] = wrapped.toString = always0 (typeSignature (typeInfo));\n\n    return wrapped;\n  }\n\n  //  defTypes :: NonEmpty (Array Type)\n  var defTypes = [\n    String_,\n    StrMap (Array_ (TypeClass)),\n    NonEmpty (Array_ (Type)),\n    AnyFunction,\n    AnyFunction\n  ];\n\n  function create(opts) {\n    function def(name) {\n      return function(constraints) {\n        return function(expTypes) {\n          return function(impl) {\n            return opts.checkTypes ?\n              withTypeChecking (opts.env,\n                                {name: name,\n                                 constraints: constraints,\n                                 types: expTypes.length === 1 ?\n                                        Z.concat ([NoArguments], expTypes) :\n                                        expTypes},\n                                impl) :\n              impl;\n          };\n        };\n      };\n    }\n    return def (def.name) ({}) (defTypes) (def);\n  }\n\n  var def = create ({checkTypes: !production, env: env});\n\n  //  fromUncheckedUnaryType :: (Type -> Type) -> Type -> Type\n  function fromUncheckedUnaryType(typeConstructor) {\n    var t = typeConstructor (Unknown);\n    return def (t.name) ({}) ([Type, Type]) (fromUnaryType (t));\n  }\n\n  //  fromUncheckedBinaryType :: (Type -> Type -> Type) -> Type -> Type -> Type\n  function fromUncheckedBinaryType(typeConstructor) {\n    var t = typeConstructor (Unknown) (Unknown);\n    return def (t.name) ({}) ([Type, Type, Type]) (fromBinaryType (t));\n  }\n\n  return {\n    Any: Any,\n    AnyFunction: AnyFunction,\n    Arguments: Arguments,\n    Array: fromUncheckedUnaryType (Array_),\n    Array0: Array0,\n    Array1: fromUncheckedUnaryType (Array1),\n    Array2: fromUncheckedBinaryType (Array2),\n    Boolean: Boolean_,\n    Date: Date_,\n    ValidDate: ValidDate,\n    Descending: fromUncheckedUnaryType (Descending),\n    Either: fromUncheckedBinaryType (Either_),\n    Error: Error_,\n    Fn:\n      def ('Fn')\n          ({})\n          ([Type, Type, Type])\n          (Fn),\n    Function:\n      def ('Function')\n          ({})\n          ([NonEmpty (Array_ (Type)), Type])\n          (Function_),\n    HtmlElement: HtmlElement,\n    Identity: fromUncheckedUnaryType (Identity),\n    Maybe: fromUncheckedUnaryType (Maybe),\n    NonEmpty: NonEmpty,\n    Null: Null,\n    Nullable: fromUncheckedUnaryType (Nullable),\n    Number: Number_,\n    PositiveNumber: PositiveNumber,\n    NegativeNumber: NegativeNumber,\n    ValidNumber: ValidNumber,\n    NonZeroValidNumber: NonZeroValidNumber,\n    FiniteNumber: FiniteNumber,\n    NonZeroFiniteNumber: NonZeroFiniteNumber,\n    PositiveFiniteNumber: PositiveFiniteNumber,\n    NegativeFiniteNumber: NegativeFiniteNumber,\n    Integer: Integer,\n    NonZeroInteger: NonZeroInteger,\n    NonNegativeInteger: NonNegativeInteger,\n    PositiveInteger: PositiveInteger,\n    NegativeInteger: NegativeInteger,\n    Object: Object_,\n    Pair: fromUncheckedBinaryType (Pair),\n    RegExp: RegExp_,\n    GlobalRegExp: GlobalRegExp,\n    NonGlobalRegExp: NonGlobalRegExp,\n    RegexFlags: RegexFlags,\n    StrMap: fromUncheckedUnaryType (StrMap),\n    String: String_,\n    Symbol: Symbol_,\n    Type: Type,\n    TypeClass: TypeClass,\n    Undefined: Undefined,\n    Unknown: Unknown,\n    env: env,\n    create:\n      def ('create')\n          ({})\n          ([RecordType ({checkTypes: Boolean_, env: Array_ (Type)}),\n            Unchecked (joinWith (' -> ', Z.map (show, defTypes)))])\n          (create),\n    test:\n      def ('test')\n          ({})\n          ([Array_ (Type), Type, Any, Boolean_])\n          (test),\n    NullaryType:\n      def ('NullaryType')\n          ({})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Type])\n          (NullaryType),\n    UnaryType:\n      def ('UnaryType')\n          ({f: [Z.Foldable]})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Unchecked ('(t a -> f a)'),\n            Unchecked ('Type -> Type')])\n          (function(name) {\n             return B (B (B (B (def (name) ({}) ([Type, Type])))))\n                      (UnaryType (name));\n           }),\n    BinaryType:\n      def ('BinaryType')\n          ({f: [Z.Foldable]})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Unchecked ('(t a b -> f a)'),\n            Unchecked ('(t a b -> f b)'),\n            Unchecked ('Type -> Type -> Type')])\n          (function(name) {\n             return B (B (B (B (B (def (name) ({}) ([Type, Type, Type]))))))\n                      (BinaryType (name));\n           }),\n    EnumType:\n      def ('EnumType')\n          ({})\n          ([String_, String_, Array_ (Any), Type])\n          (EnumType),\n    RecordType:\n      def ('RecordType')\n          ({})\n          ([StrMap (Type), Type])\n          (RecordType),\n    NamedRecordType:\n      def ('NamedRecordType')\n          ({})\n          ([NonEmpty (String_), String_, Array_ (Type), StrMap (Type), Type])\n          (NamedRecordType),\n    TypeVariable:\n      def ('TypeVariable')\n          ({})\n          ([String_, Type])\n          (TypeVariable),\n    UnaryTypeVariable:\n      def ('UnaryTypeVariable')\n          ({})\n          ([String_, Unchecked ('Type -> Type')])\n          (function(name) {\n             return def (name) ({}) ([Type, Type]) (UnaryTypeVariable (name));\n           }),\n    BinaryTypeVariable:\n      def ('BinaryTypeVariable')\n          ({})\n          ([String_, Unchecked ('Type -> Type -> Type')])\n          (function(name) {\n             return def (name)\n                        ({})\n                        ([Type, Type, Type])\n                        (BinaryTypeVariable (name));\n           }),\n    Thunk:\n      def ('Thunk')\n          ({})\n          ([Type, Type])\n          (Thunk),\n    Predicate:\n      def ('Predicate')\n          ({})\n          ([Type, Type])\n          (Predicate)\n  };\n\n}));\n\n//. [Descending]:           v:sanctuary-js/sanctuary-descending\n//. [Either]:               v:sanctuary-js/sanctuary-either\n//. [FL:Semigroup]:         https://github.com/fantasyland/fantasy-land#semigroup\n//. [HTML element]:         https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n//. [Identity]:             v:sanctuary-js/sanctuary-identity\n//. [Maybe]:                v:sanctuary-js/sanctuary-maybe\n//. [Monoid]:               https://github.com/fantasyland/fantasy-land#monoid\n//. [Pair]:                 v:sanctuary-js/sanctuary-pair\n//. [Setoid]:               https://github.com/fantasyland/fantasy-land#setoid\n//. [Unknown]:              #Unknown\n//. [`Array`]:              #Array\n//. [`Array2`]:             #Array2\n//. [`BinaryType`]:         #BinaryType\n//. [`Date`]:               #Date\n//. [`FiniteNumber`]:       #FiniteNumber\n//. [`GlobalRegExp`]:       #GlobalRegExp\n//. [`Integer`]:            #Integer\n//. [`NonGlobalRegExp`]:    #NonGlobalRegExp\n//. [`Number`]:             #Number\n//. [`Object.create`]:      https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n//. [`RegExp`]:             #RegExp\n//. [`RegexFlags`]:         #RegexFlags\n//. [`String`]:             #String\n//. [`SyntaxError`]:        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\n//. [`TypeClass`]:          https://github.com/sanctuary-js/sanctuary-type-classes#TypeClass\n//. [`TypeError`]:          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\n//. [`TypeVariable`]:       #TypeVariable\n//. [`UnaryType`]:          #UnaryType\n//. [`UnaryTypeVariable`]:  #UnaryTypeVariable\n//. [`Unknown`]:            #Unknown\n//. [`ValidNumber`]:        #ValidNumber\n//. [`env`]:                #env\n//. [arguments]:            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n//. [enumerated types]:     https://en.wikipedia.org/wiki/Enumerated_type\n//. [max]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n//. [min]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\n//. [semigroup]:            https://en.wikipedia.org/wiki/Semigroup\n//. [type class]:           #type-classes\n//. [type variables]:       #TypeVariable\n//. [types]:                #types\n","/*\n         _______    ___    _________    ___   ___    _______    ______\n        /  ____/\\  /  /\\  /__   ___/\\  /  /\\ /  /\\  /  ____/\\  /  __  \\\n       /  /\\___\\/ /  / /  \\_/  /\\__\\/ /  /_//  / / /  /\\___\\/ /  /\\/  /\\\n      /  ____/\\  /  / /    /  / /    /  ___   / / /  ____/\\  /      _/ /\n     /  /\\___\\/ /  / /    /  / /    /  /\\_/  / / /  /\\___\\/ /  /|  |\\\\/\n    /______/\\  /__/ /    /__/ /    /__/ //__/ / /______/\\  /__/ |__| |\n    \\______\\/  \\__\\/     \\__\\/     \\__\\/ \\__\\/  \\______\\/  \\__\\/ \\__\\|\n                                                                            */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-either\n//.\n//. The Either type represents values with two possibilities: a value of type\n//. `Either a b` is either a Left whose value is of type `a` or a Right whose\n//. value is of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryEither = f (util,\n                              self.sanctuaryShow,\n                              self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var EitherType = $.BinaryType\n        ('sanctuary-either/Either')\n        ('')\n        (function(x) { return type (x) === Either['@@type']; })\n        (function(e) { return e.isLeft ? [e.value] : []; })\n        (function(e) { return e.isLeft ? [] : [e.value]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, EitherType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Either = {};\n\n  var Left$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 true,\n    'isRight':                false,\n    '@@show':                 Left$prototype$show,\n    'fantasy-land/map':       Left$prototype$map,\n    'fantasy-land/bimap':     Left$prototype$bimap,\n    'fantasy-land/ap':        Left$prototype$ap,\n    'fantasy-land/chain':     Left$prototype$chain,\n    'fantasy-land/alt':       Left$prototype$alt,\n    'fantasy-land/reduce':    Left$prototype$reduce,\n    'fantasy-land/traverse':  Left$prototype$traverse,\n    'fantasy-land/extend':    Left$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Right$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 false,\n    'isRight':                true,\n    '@@show':                 Right$prototype$show,\n    'fantasy-land/map':       Right$prototype$map,\n    'fantasy-land/bimap':     Right$prototype$bimap,\n    'fantasy-land/ap':        Right$prototype$ap,\n    'fantasy-land/chain':     Right$prototype$chain,\n    'fantasy-land/alt':       Right$prototype$alt,\n    'fantasy-land/reduce':    Right$prototype$reduce,\n    'fantasy-land/traverse':  Right$prototype$traverse,\n    'fantasy-land/extend':    Right$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    Left$prototype[custom] = Left$prototype$show;\n    Right$prototype[custom] = Right$prototype$show;\n  } else {\n    Left$prototype.inspect = Left$prototype$show;\n    Right$prototype.inspect = Right$prototype$show;\n  }\n\n  //. `Either a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Right (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Right (['foo'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */               '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Either.Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Left ('sqrt undefined for -1')\n  //. Left ('sqrt undefined for -1')\n  //. ```\n  var Left = Either.Left = function(value) {\n    var left = Object.create (Left$prototype);\n    if (Z.Setoid.test (value)) {\n      left['fantasy-land/equals'] = Left$prototype$equals;\n      if (Z.Ord.test (value)) {\n        left['fantasy-land/lte'] = Left$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      left['fantasy-land/concat'] = Left$prototype$concat;\n    }\n    left.value = value;\n    return left;\n  };\n\n  //# Either.Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > Right (42)\n  //. Right (42)\n  //. ```\n  var Right = Either.Right = function Right(value) {\n    var right = Object.create (Right$prototype);\n    if (Z.Setoid.test (value)) {\n      right['fantasy-land/equals'] = Right$prototype$equals;\n      if (Z.Ord.test (value)) {\n        right['fantasy-land/lte'] = Right$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      right['fantasy-land/concat'] = Right$prototype$concat;\n    }\n    right.value = value;\n    return right;\n  };\n\n  //# Either.@@type :: String\n  //.\n  //. Either [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Right (42))\n  //. 'sanctuary-either/Either@1'\n  //.\n  //. > type.parse (type (Right (42)))\n  //. {namespace: 'sanctuary-either', name: 'Either', version: 1}\n  //. ```\n  Either['@@type'] = 'sanctuary-either/Either@1';\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //.   - `of (Either) (x)` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Either) (42)\n  //. Right (42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Either.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Either d c, a) -> Either d b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Left ('!!')\n  //.\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Right (65536)\n  //. ```\n  Either['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var either = f (next, done, r.value);\n      if (either.isLeft) return either;\n      r = either.value;\n    }\n    return Right (r.value);\n  };\n\n  //# Either#@@show :: (Showable a, Showable b) => Either a b ~> () -> String\n  //.\n  //.   - `show (Left (x))` is equivalent to `'Left (' + show (x) + ')'`\n  //.   - `show (Right (x))` is equivalent to `'Right (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Left ('sqrt undefined for -1'))\n  //. 'Left (\"sqrt undefined for -1\")'\n  //.\n  //. > show (Right ([1, 2, 3]))\n  //. 'Right ([1, 2, 3])'\n  //. ```\n  function Left$prototype$show() {\n    return 'Left (' + show (this.value) + ')';\n  }\n  function Right$prototype$show() {\n    return 'Right (' + show (this.value) + ')';\n  }\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is equal to `Left (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Right (x)` is equal to `Right (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Left (x)` is never equal to `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.equals (Left ([1, 2, 3])) (Left ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Right ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Left ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. false\n  //. ```\n  function Left$prototype$equals(other) {\n    return other.isLeft && Z.equals (this.value, other.value);\n  }\n  function Right$prototype$equals(other) {\n    return other.isRight && Z.equals (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is less than or equal to `Left (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Right (x)` is less than or equal to `Right (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Left (x)` is always less than `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Left (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1)]\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Right (0), Right (1), Right (2)])\n  //. [Right (0), Right (1)]\n  //.\n  //. > S.filter (S.lte (Left (1))) ([Right (0), Right (1), Right (2)])\n  //. []\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1), Left (2)]\n  //. ```\n  function Left$prototype$lte(other) {\n    return other.isRight || Z.lte (this.value, other.value);\n  }\n  function Right$prototype$lte(other) {\n    return other.isRight && Z.lte (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `concat (Left (x)) (Left (y))` is equivalent to\n  //.     `Left (concat (x) (y))`\n  //.   - `concat (Right (x)) (Right (y))` is equivalent to\n  //.     `Right (concat (x) (y))`\n  //.   - `concat (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `concat (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Left ('abc')) (Left ('def'))\n  //. Left ('abcdef')\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Right ([4, 5, 6]))\n  //. Right ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Left ('abc')) (Right ([1, 2, 3]))\n  //. Right ([1, 2, 3])\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Left ('abc'))\n  //. Right ([1, 2, 3])\n  //. ```\n  function Left$prototype$concat(other) {\n    return other.isLeft ? Left (Z.concat (this.value, other.value)) : other;\n  }\n  function Right$prototype$concat(other) {\n    return other.isRight ? Right (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //.   - `map (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `map (f) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (S.add (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.map (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$map(f) {\n    return this;\n  }\n  function Right$prototype$map(f) {\n    return Right (f (this.value));\n  }\n\n  //# Either#fantasy-land/bimap :: Either a c ~> (a -> b, c -> d) -> Either b d\n  //.\n  //.   - `bimap (f) (g) (Left (x))` is equivalent to `Left (f (x))`\n  //.   - `bimap (f) (g) (Right (x))` is equivalent to `Right (g (x))`\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (S.add (1)) (Left ('abc'))\n  //. Left ('ABC')\n  //.\n  //. > S.bimap (S.toUpper) (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$bimap(f, g) {\n    return Left (f (this.value));\n  }\n  function Right$prototype$bimap(f, g) {\n    return Right (g (this.value));\n  }\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //.   - `ap (Left (x)) (Left (y))` is equivalent to `Left (x)`\n  //.   - `ap (Left (x)) (Right (y))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Left (x))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Left ('div undefined for 0')) (Left ('sqrt undefined for -1'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Left ('div undefined for 0')) (Right (99))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Right (S.add (1))) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.ap (Right (S.add (1))) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$ap(other) {\n    return other.isLeft ? other : this;\n  }\n  function Right$prototype$ap(other) {\n    return other.isLeft ? other : Right (other.value (this.value));\n  }\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //.   - `chain (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `chain (f) (Right (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const sqrt = n => n < 0 ? Left ('sqrt undefined for ' + show (n))\n  //. .                         : Right (Math.sqrt (n))\n  //.\n  //. > S.chain (sqrt) (Left ('div undefined for 0'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.chain (sqrt) (Right (-1))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.chain (sqrt) (Right (25))\n  //. Right (5)\n  //. ```\n  function Left$prototype$chain(f) {\n    return this;\n  }\n  function Right$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `alt (Left (x)) (Left (y))` is equivalent to `Left (y)`\n  //.   - `alt (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `alt (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.   - `alt (Right (x)) (Right (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Left ('A')) (Left ('B'))\n  //. Left ('B')\n  //.\n  //. > S.alt (Left ('C')) (Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (Right (2)) (Left ('D'))\n  //. Right (2)\n  //.\n  //. > S.alt (Right (3)) (Right (4))\n  //. Right (3)\n  //. ```\n  function Left$prototype$alt(other) {\n    return other;\n  }\n  function Right$prototype$alt(other) {\n    return this;\n  }\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //.   - `reduce (f) (x) (Left (y))` is equivalent to `x`\n  //.   - `reduce (f) (x) (Right (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1]) (Left ('sqrt undefined for -1'))\n  //. [1]\n  //.\n  //. > S.reduce (S.concat) ([1]) (Right ([2]))\n  //. [1, 2]\n  //. ```\n  function Left$prototype$reduce(f, x) {\n    return x;\n  }\n  function Right$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //.   - `traverse (A) (f) (Left (x))` is equivalent to `of (A) (Left (x))`\n  //.   - `traverse (A) (f) (Right (x))` is equivalent to `map (Right) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Left ('sqrt undefined for -1'))\n  //. [Left ('sqrt undefined for -1')]\n  //.\n  //. > S.traverse (Array) (S.words) (Right ('foo bar baz'))\n  //. [Right ('foo'), Right ('bar'), Right ('baz')]\n  //. ```\n  function Left$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Right$prototype$traverse(typeRep, f) {\n    return Z.map (Right, f (this.value));\n  }\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //.   - `extend (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `extend (f) (Right (x))` is equivalent to `Right (f (Right (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$extend(f) {\n    return this;\n  }\n  function Right$prototype$extend(f) {\n    return Right (f (this));\n  }\n\n  return Either;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n    ,______  ______,  ,________,,_____,,_____,,__________  ,__________,\n    |      \\/      |  |        ||     ||     ||          \\ |          |\n    |_,          ,_|  |_      _||_    ||    _||_,   __    ||_,   _____|\n      |   \\  /   |     /      \\   \\   \\/   /    |        /   |      |\n    ,_|    ||    |_,,_/   /\\   \\_, \\      /   ,_|   __   \\ ,_|   ___|_,\n    |      ||      ||     ||     |  |    |    |           ||          |\n    |______||______||_____||_____|  |____|    |__________/ |__________|\n                                                                         */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-maybe\n//.\n//. The Maybe type represents optional values: a value of type `Maybe a` is\n//. either Nothing (the empty value) or a Just whose value is of type `a`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryMaybe = f (util,\n                             self.sanctuaryShow,\n                             self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var MaybeType = $.UnaryType\n        ('sanctuary-maybe/Maybe')\n        ('')\n        (function(x) { return type (x) === Maybe['@@type']; })\n        (function(m) { return m.isJust ? [m.value] : []; });\n      var env = Z.concat (S.env, [$.TypeClass, MaybeType ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Maybe = {};\n\n  var Nothing$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              true,\n    'isJust':                 false,\n    '@@show':                 Nothing$prototype$show,\n    'fantasy-land/equals':    Nothing$prototype$equals,\n    'fantasy-land/lte':       Nothing$prototype$lte,\n    'fantasy-land/concat':    Nothing$prototype$concat,\n    'fantasy-land/filter':    Nothing$prototype$filter,\n    'fantasy-land/map':       Nothing$prototype$map,\n    'fantasy-land/ap':        Nothing$prototype$ap,\n    'fantasy-land/chain':     Nothing$prototype$chain,\n    'fantasy-land/alt':       Nothing$prototype$alt,\n    'fantasy-land/reduce':    Nothing$prototype$reduce,\n    'fantasy-land/traverse':  Nothing$prototype$traverse,\n    'fantasy-land/extend':    Nothing$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Just$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              false,\n    'isJust':                 true,\n    '@@show':                 Just$prototype$show,\n    'fantasy-land/filter':    Just$prototype$filter,\n    'fantasy-land/map':       Just$prototype$map,\n    'fantasy-land/ap':        Just$prototype$ap,\n    'fantasy-land/chain':     Just$prototype$chain,\n    'fantasy-land/alt':       Just$prototype$alt,\n    'fantasy-land/reduce':    Just$prototype$reduce,\n    'fantasy-land/traverse':  Just$prototype$traverse,\n    'fantasy-land/extend':    Just$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    Nothing$prototype[custom] = Nothing$prototype$show;\n    Just$prototype[custom] = Just$prototype$show;\n  } else {\n    Nothing$prototype.inspect = Nothing$prototype$show;\n    Just$prototype.inspect = Just$prototype$show;\n  }\n\n  //. `Maybe a` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Just (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Nothing)        ? '\\u2705 * ' :\n  //. .              /* otherwise */              '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ satisfies Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ satisfies Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Monoid          ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ✅   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ❌   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ✅   ',\n  //. . 'Alternative     ✅   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Maybe.Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > Nothing\n  //. Nothing\n  //. ```\n  var Nothing = Maybe.Nothing = Object.create (Nothing$prototype);\n\n  //# Maybe.Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Just (42)\n  //. Just (42)\n  //. ```\n  var Just = Maybe.Just = function(value) {\n    var just = Object.create (Just$prototype);\n    if (Z.Setoid.test (value)) {\n      just['fantasy-land/equals'] = Just$prototype$equals;\n      if (Z.Ord.test (value)) {\n        just['fantasy-land/lte'] = Just$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      just['fantasy-land/concat'] = Just$prototype$concat;\n    }\n    just.value = value;\n    return just;\n  };\n\n  //# Maybe.@@type :: String\n  //.\n  //. Maybe [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Just (42))\n  //. 'sanctuary-maybe/Maybe@1'\n  //.\n  //. > type.parse (type (Just (42)))\n  //. {namespace: 'sanctuary-maybe', name: 'Maybe', version: 1}\n  //. ```\n  Maybe['@@type'] = 'sanctuary-maybe/Maybe@1';\n\n  //# Maybe.fantasy-land/empty :: () -> Maybe a\n  //.\n  //.   - `empty (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.empty (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/empty'] = function() { return Nothing; };\n\n  //# Maybe.fantasy-land/of :: a -> Maybe a\n  //.\n  //.   - `of (Maybe) (x)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Maybe) (42)\n  //. Just (42)\n  //. ```\n  Maybe['fantasy-land/of'] = Just;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Maybe.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Maybe c, a) -> Maybe b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Nothing\n  //.\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Just (65536)\n  //. ```\n  Maybe['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var maybe = f (next, done, r.value);\n      if (maybe.isNothing) return maybe;\n      r = maybe.value;\n    }\n    return Just (r.value);\n  };\n\n  //# Maybe.fantasy-land/zero :: () -> Maybe a\n  //.\n  //.   - `zero (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.zero (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/zero'] = function() { return Nothing; };\n\n  //# Maybe#@@show :: Showable a => Maybe a ~> () -> String\n  //.\n  //.   - `show (Nothing)` is equivalent to `'Nothing'`\n  //.   - `show (Just (x))` is equivalent to `'Just (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Nothing)\n  //. 'Nothing'\n  //.\n  //. > show (Just (['foo', 'bar', 'baz']))\n  //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n  //. ```\n  function Nothing$prototype$show() {\n    return 'Nothing';\n  }\n  function Just$prototype$show() {\n    return 'Just (' + show (this.value) + ')';\n  }\n\n  //# Maybe#fantasy-land/equals :: Setoid a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is equal to `Nothing`\n  //.   - `Just (x)` is equal to `Just (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Nothing` is never equal to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.equals (Nothing) (Nothing)\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([3, 2, 1]))\n  //. false\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Nothing)\n  //. false\n  //. ```\n  function Nothing$prototype$equals(other) {\n    return other.isNothing;\n  }\n  function Just$prototype$equals(other) {\n    return other.isJust && Z.equals (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/lte :: Ord a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is (less than or) equal to `Nothing`\n  //.   - `Just (x)` is less than or equal to `Just (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Nothing` is always less than `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Nothing)) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing]\n  //.\n  //. > S.filter (S.lte (Just (1))) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing, Just (0), Just (1)]\n  //. ```\n  function Nothing$prototype$lte(other) {\n    return true;\n  }\n  function Just$prototype$lte(other) {\n    return other.isJust && Z.lte (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/concat :: Semigroup a => Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `concat (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `concat (Just (x)) (Just (y))` is equivalent to\n  //.     `Just (concat (x) (y))`\n  //.   - `concat (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `concat (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Nothing) (Just ([1, 2, 3]))\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Nothing)\n  //. Just ([1, 2, 3])\n  //. ```\n  function Nothing$prototype$concat(other) {\n    return other;\n  }\n  function Just$prototype$concat(other) {\n    return other.isJust ? Just (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Maybe#fantasy-land/filter :: Maybe a ~> (a -> Boolean) -> Maybe a\n  //.\n  //.   - `filter (p) (Nothing)` is equivalent to `Nothing`\n  //.   - `filter (p) (Just (x))` is equivalent to `p (x) ? Just (x) : Nothing`\n  //.\n  //. ```javascript\n  //. > S.filter (isFinite) (Nothing)\n  //. Nothing\n  //.\n  //. > S.filter (isFinite) (Just (Infinity))\n  //. Nothing\n  //.\n  //. > S.filter (isFinite) (Just (Number.MAX_SAFE_INTEGER))\n  //. Just (9007199254740991)\n  //. ```\n  function Nothing$prototype$filter(pred) {\n    return this;\n  }\n  function Just$prototype$filter(pred) {\n    return pred (this.value) ? this : Nothing;\n  }\n\n  //# Maybe#fantasy-land/map :: Maybe a ~> (a -> b) -> Maybe b\n  //.\n  //.   - `map (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `map (f) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Nothing)\n  //. Nothing\n  //.\n  //. > S.map (Math.sqrt) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$map(f) {\n    return this;\n  }\n  function Just$prototype$map(f) {\n    return Just (f (this.value));\n  }\n\n  //# Maybe#fantasy-land/ap :: Maybe a ~> Maybe (a -> b) -> Maybe b\n  //.\n  //.   - `ap (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Nothing) (Just (x))` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Nothing) (Just (9))\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$ap(other) {\n    return this;\n  }\n  function Just$prototype$ap(other) {\n    return other.isJust ? Just (other.value (this.value)) : other;\n  }\n\n  //# Maybe#fantasy-land/chain :: Maybe a ~> (a -> Maybe b) -> Maybe b\n  //.\n  //.   - `chain (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `chain (f) (Just (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const head = xs => xs.length === 0 ? Nothing : Just (xs[0])\n  //.\n  //. > S.chain (head) (Nothing)\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just ([]))\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just (['foo', 'bar', 'baz']))\n  //. Just ('foo')\n  //. ```\n  function Nothing$prototype$chain(f) {\n    return this;\n  }\n  function Just$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Maybe#fantasy-land/alt :: Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `alt (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `alt (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Just (y))` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.alt (Nothing) (Just (1))\n  //. Just (1)\n  //.\n  //. > S.alt (Just (2)) (Nothing)\n  //. Just (2)\n  //.\n  //. > S.alt (Just (3)) (Just (4))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$alt(other) {\n    return other;\n  }\n  function Just$prototype$alt(other) {\n    return this;\n  }\n\n  //# Maybe#fantasy-land/reduce :: Maybe a ~> ((b, a) -> b, b) -> b\n  //.\n  //.   - `reduce (f) (x) (Nothing)` is equivalent to `x`\n  //.   - `reduce (f) (x) (Just (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ('abc') (Nothing)\n  //. 'abc'\n  //.\n  //. > S.reduce (S.concat) ('abc') (Just ('xyz'))\n  //. 'abcxyz'\n  //. ```\n  function Nothing$prototype$reduce(f, x) {\n    return x;\n  }\n  function Just$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Maybe#fantasy-land/traverse :: Applicative f => Maybe a ~> (TypeRep f, a -> f b) -> f (Maybe b)\n  //.\n  //.   - `traverse (A) (f) (Nothing)` is equivalent to `of (A) (Nothing)`\n  //.   - `traverse (A) (f) (Just (x))` is equivalent to `map (Just) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (Array) (S.words) (Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //. ```\n  function Nothing$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Just$prototype$traverse(typeRep, f) {\n    return Z.map (Just, f (this.value));\n  }\n\n  //# Maybe#fantasy-land/extend :: Maybe a ~> (Maybe a -> b) -> Maybe b\n  //.\n  //.   - `extend (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `extend (f) (Just (x))` is equivalent to `Just (f (Just (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Just (99))\n  //. Just (100)\n  //. ```\n  function Nothing$prototype$extend(f) {\n    return this;\n  }\n  function Just$prototype$extend(f) {\n    return Just (f (this));\n  }\n\n  return Maybe;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","       /*                   *\\\n      //                     \\\\\n     //   @@  @@     @@  @@   \\\\\n    //      @@       @@  @@    \\\\\n    \\\\      @@       @@  @@    //\n     \\\\   @@  @@  @    @@ @   //\n      \\\\          /       @  //\n       \\*             @@@@  */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-pair\n//.\n//. Pair is the canonical product type: a value of type `Pair a b` always\n//. contains exactly two values: one of type `a`; one of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryPair = f (util,\n                            self.sanctuaryShow,\n                            self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var PairType = $.BinaryType\n        ('sanctuary-pair/Pair')\n        ('')\n        (function(x) { return type (x) === Pair['@@type']; })\n        (function(p) { return [p.fst]; })\n        (function(p) { return [p.snd]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, PairType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Pair,\n    '@@show':                 Pair$prototype$show,\n    'fantasy-land/compose':   Pair$prototype$compose,\n    'fantasy-land/map':       Pair$prototype$map,\n    'fantasy-land/bimap':     Pair$prototype$bimap,\n    'fantasy-land/reduce':    Pair$prototype$reduce,\n    'fantasy-land/traverse':  Pair$prototype$traverse,\n    'fantasy-land/extend':    Pair$prototype$extend,\n    'fantasy-land/extract':   Pair$prototype$extract\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    prototype[custom] = Pair$prototype$show;\n  } else {\n    prototype.inspect = Pair$prototype$show;\n  }\n\n  /* istanbul ignore else */\n  if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n    prototype[Symbol.iterator] = function() {\n      return [this.fst, this.snd][Symbol.iterator] ();\n    };\n  }\n\n  //. `Pair a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Pair (Useless) (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Pair (['foo']) (['bar'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */                        '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ✅   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Applicative     ❌   ',\n  //. . 'Chain           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'ChainRec        ❌   ',\n  //. . 'Monad           ❌   ',\n  //. . 'Alt             ❌   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ✅   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > Pair (1) (2)\n  //. Pair (1) (2)\n  //. ```\n  function Pair(fst) {\n    return function(snd) {\n      var pair = Object.create (prototype);\n      if (Z.Setoid.test (fst) && Z.Setoid.test (snd)) {\n        pair['fantasy-land/equals'] = Pair$prototype$equals;\n        if (Z.Ord.test (fst) && Z.Ord.test (snd)) {\n          pair['fantasy-land/lte'] = Pair$prototype$lte;\n        }\n      }\n      if (Z.Semigroup.test (fst)) {\n        if (Z.Semigroup.test (snd)) {\n          pair['fantasy-land/concat'] = Pair$prototype$concat;\n        }\n        pair['fantasy-land/ap'] = Pair$prototype$ap;\n        pair['fantasy-land/chain'] = Pair$prototype$chain;\n      }\n      pair.fst = fst;\n      pair.snd = snd;\n      return pair;\n    };\n  }\n\n  //# Pair.fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > Pair.fst (Pair ('abc') ([1, 2, 3]))\n  //. 'abc'\n  //. ```\n  Pair.fst = function(p) { return p.fst; };\n\n  //# Pair.snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > Pair.snd (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  Pair.snd = function(p) { return p.snd; };\n\n  //# Pair.swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > Pair.swap (Pair ('abc') ([1, 2, 3]))\n  //. Pair ([1, 2, 3]) ('abc')\n  //. ```\n  Pair.swap = function(p) { return Pair (p.snd) (p.fst); };\n\n  //# Pair.@@type :: String\n  //.\n  //. Pair [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Pair ('abc') ([1, 2, 3]))\n  //. 'sanctuary-pair/Pair@1'\n  //.\n  //. > type.parse (type (Pair ('abc') ([1, 2, 3])))\n  //. {namespace: 'sanctuary-pair', name: 'Pair', version: 1}\n  //. ```\n  Pair['@@type'] = 'sanctuary-pair/Pair@1';\n\n  //# Pair#@@show :: (Showable a, Showable b) => Pair a b ~> () -> String\n  //.\n  //. `show (Pair (x) (y))` is equivalent to\n  //. `'Pair (' + show (x) + ') (' + show (y) + ')'`.\n  //.\n  //. ```javascript\n  //. > show (Pair ('abc') ([1, 2, 3]))\n  //. 'Pair (\"abc\") ([1, 2, 3])'\n  //. ```\n  function Pair$prototype$show() {\n    return 'Pair (' + show (this.fst) + ') (' + show (this.snd) + ')';\n  }\n\n  //# Pair#fantasy-land/equals :: (Setoid a, Setoid b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is equal to `Pair (v) (w)` [iff][] `x` is equal to `v`\n  //. and `y` is equal to `w` according to [`Z.equals`][].\n  //.\n  //. ```javascript\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([3, 2, 1]))\n  //. false\n  //. ```\n  function Pair$prototype$equals(other) {\n    return Z.equals (this.fst, other.fst) && Z.equals (this.snd, other.snd);\n  }\n\n  //# Pair#fantasy-land/lte :: (Ord a, Ord b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is less than or equal to `Pair (v) (w)` [iff][] `x` is\n  //. less than `v` or `x` is equal to `v` and `y` is less than or equal to\n  //. `w` according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Pair ('b') (2)))\n  //. .          ([Pair ('a') (1), Pair ('a') (2), Pair ('a') (3),\n  //. .            Pair ('b') (1), Pair ('b') (2), Pair ('b') (3),\n  //. .            Pair ('c') (1), Pair ('c') (2), Pair ('c') (3)])\n  //. [ Pair ('a') (1),\n  //. . Pair ('a') (2),\n  //. . Pair ('a') (3),\n  //. . Pair ('b') (1),\n  //. . Pair ('b') (2) ]\n  //. ```\n  function Pair$prototype$lte(other) {\n    return Z.equals (this.fst, other.fst) ? Z.lte (this.snd, other.snd)\n                                          : Z.lte (this.fst, other.fst);\n  }\n\n  //# Pair#fantasy-land/compose :: Pair a b ~> Pair b c -> Pair a c\n  //.\n  //. `compose (Pair (x) (y)) (Pair (v) (w))` is equivalent to `Pair (v) (y)`.\n  //.\n  //. ```javascript\n  //. > S.compose (Pair ('a') (0)) (Pair ([1, 2, 3]) ('b'))\n  //. Pair ([1, 2, 3]) (0)\n  //. ```\n  function Pair$prototype$compose(other) {\n    return Pair (this.fst) (other.snd);\n  }\n\n  //# Pair#fantasy-land/concat :: (Semigroup a, Semigroup b) => Pair a b ~> Pair a b -> Pair a b\n  //.\n  //. `concat (Pair (x) (y)) (Pair (v) (w))` is equivalent to\n  //. `Pair (concat (x) (v)) (concat (y) (w))`.\n  //.\n  //. ```javascript\n  //. > S.concat (Pair ('abc') ([1, 2, 3])) (Pair ('xyz') ([4, 5, 6]))\n  //. Pair ('abcxyz') ([1, 2, 3, 4, 5, 6])\n  //. ```\n  function Pair$prototype$concat(other) {\n    return Pair (Z.concat (this.fst, other.fst))\n                (Z.concat (this.snd, other.snd));\n  }\n\n  //# Pair#fantasy-land/map :: Pair a b ~> (b -> c) -> Pair a c\n  //.\n  //. `map (f) (Pair (x) (y))` is equivalent to `Pair (x) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('abc') (16)\n  //. ```\n  function Pair$prototype$map(f) {\n    return Pair (this.fst) (f (this.snd));\n  }\n\n  //# Pair#fantasy-land/bimap :: Pair a c ~> (a -> b, c -> d) -> Pair b d\n  //.\n  //. `bimap (f) (g) (Pair (x) (y))` is equivalent to `Pair (f (x)) (g (y))`.\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('ABC') (16)\n  //. ```\n  function Pair$prototype$bimap(f, g) {\n    return Pair (f (this.fst)) (g (this.snd));\n  }\n\n  //# Pair#fantasy-land/ap :: Semigroup a => Pair a b ~> Pair a (b -> c) -> Pair a c\n  //.\n  //. `ap (Pair (v) (f)) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (v) (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.ap (Pair ('abc') (Math.sqrt)) (Pair ('xyz') (256))\n  //. Pair ('abcxyz') (16)\n  //. ```\n  function Pair$prototype$ap(other) {\n    return Pair (Z.concat (other.fst, this.fst)) (other.snd (this.snd));\n  }\n\n  //# Pair#fantasy-land/chain :: Semigroup a => Pair a b ~> (b -> Pair a c) -> Pair a c\n  //.\n  //. `chain (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (x) (fst (f (y)))) (snd (f (y)))`.\n  //.\n  //. ```javascript\n  //. > S.chain (n => Pair (show (n)) (Math.sqrt (n))) (Pair ('abc') (256))\n  //. Pair ('abc256') (16)\n  //. ```\n  function Pair$prototype$chain(f) {\n    var other = f (this.snd);\n    return Pair (Z.concat (this.fst, other.fst)) (other.snd);\n  }\n\n  //# Pair#fantasy-land/reduce :: Pair a b ~> ((c, b) -> c, c) -> c\n  //.\n  //. `reduce (f) (x) (Pair (v) (w))` is equivalent to `f (x) (w)`.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1, 2, 3]) (Pair ('abc') ([4, 5, 6]))\n  //. [1, 2, 3, 4, 5, 6]\n  //. ```\n  function Pair$prototype$reduce(f, x) {\n    return f (x, this.snd);\n  }\n\n  //# Pair#fantasy-land/traverse :: Applicative f => Pair a b ~> (TypeRep f, b -> f c) -> f (Pair a c)\n  //.\n  //. `traverse (_) (f) (Pair (x) (y))` is equivalent to\n  //. `map (Pair (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Pair (123) ('foo bar baz'))\n  //. [Pair (123) ('foo'), Pair (123) ('bar'), Pair (123) ('baz')]\n  //. ```\n  function Pair$prototype$traverse(typeRep, f) {\n    return Z.map (Pair (this.fst), f (this.snd));\n  }\n\n  //# Pair#fantasy-land/extend :: Pair a b ~> (Pair a b -> c) -> Pair a c\n  //.\n  //. `extend (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (x) (f (Pair (x) (y)))`.\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Pair ('abc') (99))\n  //. Pair ('abc') (100)\n  //. ```\n  function Pair$prototype$extend(f) {\n    return Pair (this.fst) (f (this));\n  }\n\n  //# Pair#fantasy-land/extract :: Pair a b ~> () -> b\n  //.\n  //. `extract (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.extract (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  function Pair$prototype$extract() {\n    return this.snd;\n  }\n\n  return Pair;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*    #######\n   ####     ####\n ####   ###   ####\n#####   ###########   sanctuary\n########   ########   noun\n###########   #####   1 [ mass noun ] refuge from unsafe JavaScript\n ####   ###   ####\n   ####     ####\n      #######    */\n\n//. # Sanctuary\n//.\n//. [![npm](https://img.shields.io/npm/v/sanctuary.svg)](https://www.npmjs.com/package/sanctuary)\n//. [![CircleCI](https://img.shields.io/circleci/project/github/sanctuary-js/sanctuary/master.svg)](https://circleci.com/gh/sanctuary-js/sanctuary/tree/master)\n//. [![Gitter](https://img.shields.io/gitter/room/badges/shields.svg)](https://gitter.im/sanctuary-js/sanctuary)\n//.\n//. Sanctuary is a JavaScript functional programming library inspired by\n//. [Haskell][] and [PureScript][]. It's stricter than [Ramda][], and\n//. provides a similar suite of functions.\n//.\n//. Sanctuary promotes programs composed of simple, pure functions. Such\n//. programs are easier to comprehend, test, and maintain &ndash; they are\n//. also a pleasure to write.\n//.\n//. Sanctuary provides two data types, [Maybe][] and [Either][], both of\n//. which are compatible with [Fantasy Land][]. Thanks to these data types\n//. even Sanctuary functions that may fail, such as [`head`](#head), are\n//. composable.\n//.\n//. Sanctuary makes it possible to write safe code without null checks.\n//. In JavaScript it's trivial to introduce a possible run-time type error:\n//.\n//.     words[0].toUpperCase()\n//.\n//. If `words` is `[]` we'll get a familiar error at run-time:\n//.\n//.     TypeError: Cannot read property 'toUpperCase' of undefined\n//.\n//. Sanctuary gives us a fighting chance of avoiding such errors. We might\n//. write:\n//.\n//.     S.map (S.toUpper) (S.head (words))\n//.\n//. Sanctuary is designed to work in Node.js and in ES5-compatible browsers.\n//.\n//. ## Folktale\n//.\n//. [Folktale][], like Sanctuary, is a standard library for functional\n//. programming in JavaScript. It is well designed and well documented.\n//. Whereas Sanctuary treats JavaScript as a member of the ML language\n//. family, Folktale embraces JavaScript's object-oriented programming\n//. model. Programming with Folktale resembles programming with Scala.\n//.\n//. ## Ramda\n//.\n//. [Ramda][] provides several functions that return problematic values\n//. such as `undefined`, `Infinity`, or `NaN` when applied to unsuitable\n//. inputs. These are known as [partial functions][]. Partial functions\n//. necessitate the use of guards or null checks. In order to safely use\n//. `R.head`, for example, one must ensure that the array is non-empty:\n//.\n//.     if (R.isEmpty (xs)) {\n//.       // ...\n//.     } else {\n//.       return f (R.head (xs));\n//.     }\n//.\n//. Using the Maybe type renders such guards (and null checks) unnecessary.\n//. Changing functions such as `R.head` to return Maybe values was proposed\n//. in [ramda/ramda#683][], but was considered too much of a stretch for\n//. JavaScript programmers. Sanctuary was released the following month,\n//. in January 2015, as a companion library to Ramda.\n//.\n//. In addition to broadening in scope in the years since its release,\n//. Sanctuary's philosophy has diverged from Ramda's in several respects.\n//.\n//. ### Totality\n//.\n//. Every Sanctuary function is defined for every value that is a member of\n//. the function's input type. Such functions are known as [total functions][].\n//. Ramda, on the other hand, contains a number of [partial functions][].\n//.\n//. ### Information preservation\n//.\n//. Certain Sanctuary functions preserve more information than their Ramda\n//. counterparts. Examples:\n//.\n//.     |> R.tail ([])                      |> S.tail ([])\n//.     []                                  Nothing\n//.\n//.     |> R.tail (['foo'])                 |> S.tail (['foo'])\n//.     []                                  Just ([])\n//.\n//.     |> R.replace (/^x/) ('') ('abc')    |> S.stripPrefix ('x') ('abc')\n//.     'abc'                               Nothing\n//.\n//.     |> R.replace (/^x/) ('') ('xabc')   |> S.stripPrefix ('x') ('xabc')\n//.     'abc'                               Just ('abc')\n//.\n//. ### Invariants\n//.\n//. Sanctuary performs rigorous [type checking][] of inputs and outputs, and\n//. throws a descriptive error if a type error is encountered. This allows bugs\n//. to be caught and fixed early in the development cycle.\n//.\n//. Ramda operates on the [garbage in, garbage out][GIGO] principle. Functions\n//. are documented to take arguments of particular types, but these invariants\n//. are not enforced. The problem with this approach in a language as\n//. permissive as JavaScript is that there's no guarantee that garbage input\n//. will produce garbage output ([ramda/ramda#1413][]). Ramda performs ad hoc\n//. type checking in some such cases ([ramda/ramda#1419][]).\n//.\n//. Sanctuary can be configured to operate in garbage in, garbage out mode.\n//. Ramda cannot be configured to enforce its invariants.\n//.\n//. ### Currying\n//.\n//. Sanctuary functions are curried. There is, for example, exactly one way to\n//. apply `S.reduce` to `S.add`, `0`, and `xs`:\n//.\n//.   - `S.reduce (S.add) (0) (xs)`\n//.\n//. Ramda functions are also curried, but in a complex manner. There are four\n//. ways to apply `R.reduce` to `R.add`, `0`, and `xs`:\n//.\n//.   - `R.reduce (R.add) (0) (xs)`\n//.   - `R.reduce (R.add) (0, xs)`\n//.   - `R.reduce (R.add, 0) (xs)`\n//.   - `R.reduce (R.add, 0, xs)`\n//.\n//. Ramda supports all these forms because curried functions enable partial\n//. application, one of the library's tenets, but `f(x)(y)(z)` is considered\n//. too unfamiliar and too unattractive to appeal to JavaScript programmers.\n//.\n//. Sanctuary's developers prefer a simple, unfamiliar construct to a complex,\n//. familiar one. Familiarity can be acquired; complexity is intrinsic.\n//.\n//. The lack of breathing room in `f(x)(y)(z)` impairs readability. The simple\n//. solution to this problem, proposed in [#438][], is to include a space when\n//. applying a function: `f (x) (y) (z)`.\n//.\n//. Ramda also provides a special placeholder value, [`R.__`][], that removes\n//. the restriction that a function must be applied to its arguments in order.\n//. The following expressions are equivalent:\n//.\n//.   - `R.reduce (R.__, 0, xs) (R.add)`\n//.   - `R.reduce (R.add, R.__, xs) (0)`\n//.   - `R.reduce (R.__, 0) (R.add) (xs)`\n//.   - `R.reduce (R.__, 0) (R.add, xs)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add) (0)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add, 0)`\n//.\n//. ### Variadic functions\n//.\n//. Ramda provides several functions that take any number of arguments. These\n//. are known as [variadic functions][]. Additionally, Ramda provides several\n//. functions that take variadic functions as arguments. Although natural in\n//. a dynamically typed language, variadic functions are at odds with the type\n//. notation Ramda and Sanctuary both use, leading to some indecipherable type\n//. signatures such as this one:\n//.\n//.     R.lift :: (*... -> *...) -> ([*]... -> [*])\n//.\n//. Sanctuary has no variadic functions, nor any functions that take variadic\n//. functions as arguments. Sanctuary provides two \"lift\" functions, each with\n//. a helpful type signature:\n//.\n//.     S.lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n//.     S.lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n//.\n//. ### Implicit context\n//.\n//. Ramda provides [`R.bind`][] and [`R.invoker`][] for working with methods.\n//. Additionally, many Ramda functions use `Function#call` or `Function#apply`\n//. to preserve context. Sanctuary makes no allowances for `this`.\n//.\n//. ### Transducers\n//.\n//. Several Ramda functions act as transducers. Sanctuary provides no support\n//. for transducers.\n//.\n//. ### Modularity\n//.\n//. Whereas Ramda has no dependencies, Sanctuary has a modular design:\n//. [sanctuary-def][] provides type checking, [sanctuary-type-classes][]\n//. provides Fantasy Land functions and type classes, [sanctuary-show][]\n//. provides string representations, and algebraic data types are provided\n//. by [sanctuary-either][], [sanctuary-maybe][], and [sanctuary-pair][].\n//. Not only does this approach reduce the complexity of Sanctuary itself,\n//. but it allows these components to be reused in other contexts.\n//.\n//. ## Types\n//.\n//. Sanctuary uses Haskell-like type signatures to describe the types of\n//. values, including functions. `'foo'`, for example, is a member of `String`;\n//. `[1, 2, 3]` is a member of `Array Number`. The double colon (`::`) is used\n//. to mean \"is a member of\", so one could write:\n//.\n//.     'foo' :: String\n//.     [1, 2, 3] :: Array Number\n//.\n//. An identifier may appear to the left of the double colon:\n//.\n//.     Math.PI :: Number\n//.\n//. The arrow (`->`) is used to express a function's type:\n//.\n//.     Math.abs :: Number -> Number\n//.\n//. That states that `Math.abs` is a unary function that takes an argument\n//. of type `Number` and returns a value of type `Number`.\n//.\n//. Some functions are parametrically polymorphic: their types are not fixed.\n//. Type variables are used in the representations of such functions:\n//.\n//.     S.I :: a -> a\n//.\n//. `a` is a type variable. Type variables are not capitalized, so they\n//. are differentiable from type identifiers (which are always capitalized).\n//. By convention type variables have single-character names. The signature\n//. above states that `S.I` takes a value of any type and returns a value of\n//. the same type. Some signatures feature multiple type variables:\n//.\n//.     S.K :: a -> b -> a\n//.\n//. It must be possible to replace all occurrences of `a` with a concrete type.\n//. The same applies for each other type variable. For the function above, the\n//. types with which `a` and `b` are replaced may be different, but needn't be.\n//.\n//. Since all Sanctuary functions are curried (they accept their arguments\n//. one at a time), a binary function is represented as a unary function that\n//. returns a unary function: `* -> * -> *`. This aligns neatly with Haskell,\n//. which uses curried functions exclusively. In JavaScript, though, we may\n//. wish to represent the types of functions with arities less than or greater\n//. than one. The general form is `(<input-types>) -> <output-type>`, where\n//. `<input-types>` comprises zero or more comma–space (<code>, </code>)\n//. -separated type representations:\n//.\n//.   - `() -> String`\n//.   - `(a, b) -> a`\n//.   - `(a, b, c) -> d`\n//.\n//. `Number -> Number` can thus be seen as shorthand for `(Number) -> Number`.\n//.\n//. Sanctuary embraces types. JavaScript doesn't support algebraic data types,\n//. but these can be simulated by providing a group of data constructors that\n//. return values with the same set of methods. A value of the Either type, for\n//. example, is created via the Left constructor or the Right constructor.\n//.\n//. It's necessary to extend Haskell's notation to describe implicit arguments\n//. to the *methods* provided by Sanctuary's types. In `x.map(y)`, for example,\n//. the `map` method takes an implicit argument `x` in addition to the explicit\n//. argument `y`. The type of the value upon which a method is invoked appears\n//. at the beginning of the signature, separated from the arguments and return\n//. value by a squiggly arrow (`~>`). The type of the `fantasy-land/map` method\n//. of the Maybe type is written `Maybe a ~> (a -> b) -> Maybe b`. One could\n//. read this as:\n//.\n//. _When the `fantasy-land/map` method is invoked on a value of type `Maybe a`\n//. (for any type `a`) with an argument of type `a -> b` (for any type `b`),\n//. it returns a value of type `Maybe b`._\n//.\n//. The squiggly arrow is also used when representing non-function properties.\n//. `Maybe a ~> Boolean`, for example, represents a Boolean property of a value\n//. of type `Maybe a`.\n//.\n//. Sanctuary supports type classes: constraints on type variables. Whereas\n//. `a -> a` implicitly supports every type, `Functor f => (a -> b) -> f a ->\n//. f b` requires that `f` be a type that satisfies the requirements of the\n//. Functor type class. Type-class constraints appear at the beginning of a\n//. type signature, separated from the rest of the signature by a fat arrow\n//. (`=>`).\n//.\n//. ## Type checking\n//.\n//. Sanctuary functions are defined via [sanctuary-def][] to provide run-time\n//. type checking. This is tremendously useful during development: type errors\n//. are reported immediately, avoiding circuitous stack traces (at best) and\n//. silent failures due to type coercion (at worst). For example:\n//.\n//. ```javascript\n//. S.add (2) (true);\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n//. //                          ^^^^^^^^^^^^\n//. //                               1\n//. //\n//. //   1)  true :: Boolean\n//. //\n//. //   The value at position 1 is not a member of ‘FiniteNumber’.\n//. //\n//. //   See v:sanctuary-js/sanctuary-def#FiniteNumber for information about the FiniteNumber type.\n//. ```\n//.\n//. Compare this to the behaviour of Ramda's unchecked equivalent:\n//.\n//. ```javascript\n//. R.add (2) (true);\n//. // => 3\n//. ```\n//.\n//. There is a performance cost to run-time type checking. Type checking is\n//. disabled by default if `process.env.NODE_ENV` is `'production'`. If this\n//. rule is unsuitable for a given program, one may use [`create`](#create)\n//. to create a Sanctuary module based on a different rule. For example:\n//.\n//. ```javascript\n//. const S = sanctuary.create ({\n//.   checkTypes: localStorage.getItem ('SANCTUARY_CHECK_TYPES') === 'true',\n//.   env: sanctuary.env,\n//. });\n//. ```\n//.\n//. Occasionally one may wish to perform an operation that is not type safe,\n//. such as mapping over an object with heterogeneous values. This is possible\n//. via selective use of [`unchecked`](#unchecked) functions.\n//.\n//. ## Installation\n//.\n//. `npm install sanctuary` will install Sanctuary for use in Node.js.\n//.\n//. Running Sanctuary in the browser is more involved. One must include a\n//. `<script>` for each dependency in addition to one for Sanctuary itself:\n//.\n//. ```html\n//. <script src=\"vendor/sanctuary-show.js\"></script>\n//. <script src=\"vendor/sanctuary-type-identifiers.js\"></script>\n//. <script src=\"vendor/sanctuary-type-classes.js\"></script>\n//. <script src=\"vendor/sanctuary-either.js\"></script>\n//. <script src=\"vendor/sanctuary-maybe.js\"></script>\n//. <script src=\"vendor/sanctuary-pair.js\"></script>\n//. <script src=\"vendor/sanctuary-def.js\"></script>\n//. <script src=\"vendor/sanctuary.js\"></script>\n//. ```\n//.\n//. To ensure compatibility one should use the dependency versions specified\n//. in __package.json__.\n//.\n//. For convenience one could define aliases for various modules:\n//.\n//. ```javascript\n//. const S = window.sanctuary;\n//. const $ = window.sanctuaryDef;\n//. // ...\n//. ```\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-def'),\n                        require ('sanctuary-either'),\n                        require ('sanctuary-maybe'),\n                        require ('sanctuary-pair'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-def',\n             'sanctuary-either',\n             'sanctuary-maybe',\n             'sanctuary-pair',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            f);\n  } else {\n    self.sanctuary = f (self.sanctuaryDef,\n                        self.sanctuaryEither,\n                        self.sanctuaryMaybe,\n                        self.sanctuaryPair,\n                        self.sanctuaryShow,\n                        self.sanctuaryTypeClasses,\n                        self.sanctuaryTypeIdentifiers);\n  }\n\n} (function($, Either, Maybe, Pair, show, Z, type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Descending = __doctest.require ('sanctuary-descending');\n    var Nil = (__doctest.require ('./test/internal/List')).Nil;\n    var Cons = (__doctest.require ('./test/internal/List')).Cons;\n    var Sum = __doctest.require ('./test/internal/Sum');\n    var S = (function(S) {\n      var S_ = S.create ({\n        checkTypes: true,\n        env: S.env.concat ([\n          (__doctest.require ('./test/internal/List')).Type ($.Unknown),\n          Sum.Type\n        ])\n      });\n      S_.env = S.env;  // see S.env doctest\n      return S_;\n    } (require ('.')));\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  Nothing :: Maybe a\n  var Nothing = Maybe.Nothing;\n\n  //  Just :: a -> Maybe a\n  var Just = Maybe.Just;\n\n  //  B :: (b -> c) -> (a -> b) -> a -> c\n  function B(f) {\n    return function(g) {\n      return function(x) {\n        return f (g (x));\n      };\n    };\n  }\n\n  //  C :: (a -> b -> c) -> b -> a -> c\n  function C(f) {\n    return function(y) {\n      return function(x) {\n        return f (x) (y);\n      };\n    };\n  }\n\n  //  get_ :: String -> a -> Maybe b\n  function get_(key) {\n    return B (function(obj) { return key in obj ? Just (obj[key]) : Nothing; })\n             (toObject);\n  }\n\n  //  invoke0 :: String -> a -> b\n  function invoke0(name) {\n    return function(target) {\n      return target[name] ();\n    };\n  }\n\n  //  invoke1 :: String -> a -> b -> c\n  function invoke1(name) {\n    return function(x) {\n      return function(target) {\n        return target[name] (x);\n      };\n    };\n  }\n\n  //  toObject :: a -> Object\n  function toObject(x) {\n    return x == null ? Object.create (null) : Object (x);\n  }\n\n  //  :: Type\n  var a = $.TypeVariable ('a');\n  var b = $.TypeVariable ('b');\n  var c = $.TypeVariable ('c');\n  var d = $.TypeVariable ('d');\n  var e = $.TypeVariable ('e');\n  var g = $.TypeVariable ('g');\n  var r = $.TypeVariable ('r');\n\n  //  :: Type -> Type\n  var f = $.UnaryTypeVariable ('f');\n  var m = $.UnaryTypeVariable ('m');\n  var t = $.UnaryTypeVariable ('t');\n  var w = $.UnaryTypeVariable ('w');\n\n  //  :: Type -> Type -> Type\n  var p = $.BinaryTypeVariable ('p');\n  var s = $.BinaryTypeVariable ('s');\n\n  //  TypeRep :: Type -> Type\n  var TypeRep = $.UnaryType\n    ('TypeRep')\n    ('https://github.com/fantasyland/fantasy-land#type-representatives')\n    ([])\n    (function(x) {\n       return $.test ([]) ($.AnyFunction) (x) ||\n              x != null && $.test ([]) ($.String) (x['@@type']);\n     })\n    (K ([]));\n\n  //  Options :: Type\n  var Options = $.RecordType ({checkTypes: $.Boolean, env: $.Array ($.Any)});\n\n  var _ = {};\n\n  //. ### Configure\n\n  //# create :: { checkTypes :: Boolean, env :: Array Type } -> Module\n  //.\n  //. Takes an options record and returns a Sanctuary module. `checkTypes`\n  //. specifies whether to enable type checking. The module's polymorphic\n  //. functions (such as [`I`](#I)) require each value associated with a\n  //. type variable to be a member of at least one type in the environment.\n  //.\n  //. A well-typed application of a Sanctuary function will produce the same\n  //. result regardless of whether type checking is enabled. If type checking\n  //. is enabled, a badly typed application will produce an exception with a\n  //. descriptive error message.\n  //.\n  //. The following snippet demonstrates defining a custom type and using\n  //. `create` to produce a Sanctuary module that is aware of that type:\n  //.\n  //. ```javascript\n  //. const {create, env} = require ('sanctuary');\n  //. const $ = require ('sanctuary-def');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    Identity :: a -> Identity a\n  //. const Identity = x => {\n  //.   const identity = Object.create (Identity$prototype);\n  //.   identity.value = x;\n  //.   return identity;\n  //. };\n  //.\n  //. Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. const Identity$prototype = {\n  //.   'constructor': Identity,\n  //.   '@@show': function() { return `Identity (${S.show (this.value)})`; },\n  //.   'fantasy-land/map': function(f) { return Identity (f (this.value)); },\n  //. };\n  //.\n  //. //    IdentityType :: Type -> Type\n  //. const IdentityType = $.UnaryType\n  //.   ('Identity')\n  //.   ('http://example.com/my-package#Identity')\n  //.   ([])\n  //.   (x => type (x) === Identity['@@type'])\n  //.   (identity => [identity.value]);\n  //.\n  //. const S = create ({\n  //.   checkTypes: process.env.NODE_ENV !== 'production',\n  //.   env: env.concat ([IdentityType ($.Unknown)]),\n  //. });\n  //.\n  //. S.map (S.sub (1)) (Identity (43));\n  //. // => Identity (42)\n  //. ```\n  //.\n  //. See also [`env`](#env).\n  function create(opts) {\n    var def = $.create (opts);\n    var S = {\n      env: opts.env,\n      is: def ('is') ({}) ([$.Type, $.Any, $.Boolean]) ($.test (opts.env)),\n      Maybe: Maybe,\n      Nothing: Nothing,\n      Either: Either\n    };\n    (Object.keys (_)).forEach (function(name) {\n      S[name] = def (name) (_[name].consts) (_[name].types) (_[name].impl);\n    });\n    S.unchecked = opts.checkTypes ? create ({checkTypes: false, env: opts.env})\n                                  : S;\n    return S;\n  }\n  _.create = {\n    consts: {},\n    types: [Options, $.Object],\n    impl: create\n  };\n\n  //# env :: Array Type\n  //.\n  //. The Sanctuary module's environment (`(S.create ({checkTypes, env})).env`\n  //. is a reference to `env`). Useful in conjunction with [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.env\n  //. [ $.AnyFunction,\n  //. . $.Arguments,\n  //. . $.Array ($.Unknown),\n  //. . $.Array2 ($.Unknown) ($.Unknown),\n  //. . $.Boolean,\n  //. . $.Date,\n  //. . $.Descending ($.Unknown),\n  //. . $.Either ($.Unknown) ($.Unknown),\n  //. . $.Error,\n  //. . $.Fn ($.Unknown) ($.Unknown),\n  //. . $.HtmlElement,\n  //. . $.Identity ($.Unknown),\n  //. . $.Maybe ($.Unknown),\n  //. . $.Null,\n  //. . $.Number,\n  //. . $.Object,\n  //. . $.Pair ($.Unknown) ($.Unknown),\n  //. . $.RegExp,\n  //. . $.StrMap ($.Unknown),\n  //. . $.String,\n  //. . $.Symbol,\n  //. . $.Type,\n  //. . $.TypeClass,\n  //. . $.Undefined ]\n  //. ```\n\n  //# unchecked :: Module\n  //.\n  //. A complete Sanctuary module that performs no type checking. This is\n  //. useful as it permits operations that Sanctuary's type checking would\n  //. disallow, such as mapping over an object with heterogeneous values.\n  //.\n  //. See also [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.unchecked.map (S.show) ({x: 'foo', y: true, z: 42})\n  //. {x: '\"foo\"', y: 'true', z: '42'}\n  //. ```\n  //.\n  //. Opting out of type checking may cause type errors to go unnoticed.\n  //.\n  //. ```javascript\n  //. > S.unchecked.add (2) ('2')\n  //. '22'\n  //. ```\n\n  //. ### Classify\n\n  //# type :: Any -> { namespace :: Maybe String, name :: String, version :: NonNegativeInteger }\n  //.\n  //. Returns the result of parsing the [type identifier][] of the given value.\n  //.\n  //. ```javascript\n  //. > S.type (S.Just (42))\n  //. {namespace: Just ('sanctuary-maybe'), name: 'Maybe', version: 1}\n  //.\n  //. > S.type ([1, 2, 3])\n  //. {namespace: Nothing, name: 'Array', version: 0}\n  //. ```\n  function type_(x) {\n    var r = type.parse (type (x));\n    r.namespace = Z.reject (equals (null), Just (r.namespace));\n    return r;\n  }\n  _.type = {\n    consts: {},\n    types: [$.Any,\n            $.RecordType ({namespace: $.Maybe ($.String),\n                           name: $.String,\n                           version: $.NonNegativeInteger})],\n    impl: type_\n  };\n\n  //# is :: Type -> Any -> Boolean\n  //.\n  //. Returns `true` [iff][] the given value is a member of the specified type.\n  //. See [`$.test`][] for details.\n  //.\n  //. ```javascript\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3])\n  //. true\n  //.\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3.14])\n  //. false\n  //. ```\n\n  //. ### Showable\n\n  //# show :: Any -> String\n  //.\n  //. Alias of [`show`][].\n  //.\n  //. ```javascript\n  //. > S.show (-0)\n  //. '-0'\n  //.\n  //. > S.show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > S.show ({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > S.show (S.Left (S.Right (S.Just (S.Nothing))))\n  //. 'Left (Right (Just (Nothing)))'\n  //. ```\n  _.show = {\n    consts: {},\n    types: [$.Any, $.String],\n    impl: show\n  };\n\n  //. ### Fantasy Land\n  //.\n  //. Sanctuary is compatible with the [Fantasy Land][] specification.\n\n  //# equals :: Setoid a => a -> a -> Boolean\n  //.\n  //. Curried version of [`Z.equals`][] that requires two arguments of the\n  //. same type.\n  //.\n  //. To compare values of different types first use [`create`](#create) to\n  //. create a Sanctuary module with type checking disabled, then use that\n  //. module's `equals` function.\n  //.\n  //. ```javascript\n  //. > S.equals (0) (-0)\n  //. true\n  //.\n  //. > S.equals (NaN) (NaN)\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 4]))\n  //. false\n  //. ```\n  function equals(x) {\n    return function(y) {\n      return Z.equals (x, y);\n    };\n  }\n  _.equals = {\n    consts: {a: [Z.Setoid]},\n    types: [a, a, $.Boolean],\n    impl: equals\n  };\n\n  //# lt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than the first\n  //. according to [`Z.lt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lt (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2]\n  //. ```\n  function lt(y) {\n    return function(x) {\n      return Z.lt (x, y);\n    };\n  }\n  _.lt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lt\n  };\n\n  //# lte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than or equal to\n  //. the first according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2, 3]\n  //. ```\n  function lte(y) {\n    return function(x) {\n      return Z.lte (x, y);\n    };\n  }\n  _.lte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lte\n  };\n\n  //# gt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than the first\n  //. according to [`Z.gt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gt (3)) ([1, 2, 3, 4, 5])\n  //. [4, 5]\n  //. ```\n  function gt(y) {\n    return function(x) {\n      return Z.gt (x, y);\n    };\n  }\n  _.gt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gt\n  };\n\n  //# gte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than or equal\n  //. to the first according to [`Z.gte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gte (3)) ([1, 2, 3, 4, 5])\n  //. [3, 4, 5]\n  //. ```\n  function gte(y) {\n    return function(x) {\n      return Z.gte (x, y);\n    };\n  }\n  _.gte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gte\n  };\n\n  //# min :: Ord a => a -> a -> a\n  //.\n  //. Returns the smaller of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.min (10) (2)\n  //. 2\n  //.\n  //. > S.min (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > S.min ('10') ('2')\n  //. '10'\n  //. ```\n  _.min = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.min)\n  };\n\n  //# max :: Ord a => a -> a -> a\n  //.\n  //. Returns the larger of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > S.max (10) (2)\n  //. 10\n  //.\n  //. > S.max (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > S.max ('10') ('2')\n  //. '2'\n  //. ```\n  _.max = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.max)\n  };\n\n  //# clamp :: Ord a => a -> a -> a -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. See also [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.clamp (0) (100) (42)\n  //. 42\n  //.\n  //. > S.clamp (0) (100) (-1)\n  //. 0\n  //.\n  //. > S.clamp ('A') ('Z') ('~')\n  //. 'Z'\n  //. ```\n  _.clamp = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a, a],\n    impl: curry3 (Z.clamp)\n  };\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.id`][].\n  //.\n  //. ```javascript\n  //. > S.id (Function) (42)\n  //. 42\n  //. ```\n  _.id = {\n    consts: {c: [Z.Category]},\n    types: [TypeRep (c), c],\n    impl: Z.id\n  };\n\n  //# concat :: Semigroup a => a -> a -> a\n  //.\n  //. Curried version of [`Z.concat`][].\n  //.\n  //. ```javascript\n  //. > S.concat ('abc') ('def')\n  //. 'abcdef'\n  //.\n  //. > S.concat ([1, 2, 3]) ([4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > S.concat ({x: 1, y: 2}) ({y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > S.concat (S.Just ([1, 2, 3])) (S.Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Sum (18)) (Sum (24))\n  //. Sum (42)\n  //. ```\n  _.concat = {\n    consts: {a: [Z.Semigroup]},\n    types: [a, a, a],\n    impl: curry2 (Z.concat)\n  };\n\n  //# empty :: Monoid a => TypeRep a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.empty`][].\n  //.\n  //. ```javascript\n  //. > S.empty (String)\n  //. ''\n  //.\n  //. > S.empty (Array)\n  //. []\n  //.\n  //. > S.empty (Object)\n  //. {}\n  //.\n  //. > S.empty (Sum)\n  //. Sum (0)\n  //. ```\n  _.empty = {\n    consts: {a: [Z.Monoid]},\n    types: [TypeRep (a), a],\n    impl: Z.empty\n  };\n\n  //# invert :: Group g => g -> g\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.invert`][].\n  //.\n  //. ```javascript\n  //. > S.invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  _.invert = {\n    consts: {g: [Z.Group]},\n    types: [g, g],\n    impl: Z.invert\n  };\n\n  //# filter :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.filter`][]. Discards every element that does not\n  //. satisfy the predicate.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > S.filter (S.odd) ([1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > S.filter (S.odd) ({x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > S.filter (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (0))\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred) {\n    return function(filterable) {\n      return Z.filter (pred, filterable);\n    };\n  }\n  _.filter = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: filter\n  };\n\n  //# reject :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.reject`][]. Discards every element that satisfies\n  //. the predicate.\n  //.\n  //. See also [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > S.reject (S.odd) ([1, 2, 3])\n  //. [2]\n  //.\n  //. > S.reject (S.odd) ({x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > S.reject (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.reject (S.odd) (S.Just (0))\n  //. Just (0)\n  //.\n  //. > S.reject (S.odd) (S.Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred) {\n    return function(filterable) {\n      return Z.reject (pred, filterable);\n    };\n  }\n  _.reject = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: reject\n  };\n\n  //# map :: Functor f => (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.map`][].\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) ([1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > S.map (Math.sqrt) ({x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > S.map (Math.sqrt) (S.Just (9))\n  //. Just (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Right (9))\n  //. Right (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Pair (99980001) (99980001))\n  //. Pair (99980001) (9999)\n  //. ```\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the B combinator\n  //. from combinatory logic (i.e. [`compose`](#compose)):\n  //.\n  //.     Functor f => (a -> b) -> f a -> f b\n  //.     (a -> b) -> Function x a -> Function x b\n  //.     (a -> c) -> Function x a -> Function x c\n  //.     (b -> c) -> Function x b -> Function x c\n  //.     (b -> c) -> Function a b -> Function a c\n  //.     (b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  function map(f) {\n    return function(functor) {\n      return Z.map (f, functor);\n    };\n  }\n  _.map = {\n    consts: {f: [Z.Functor]},\n    types: [$.Fn (a) (b), f (a), f (b)],\n    impl: map\n  };\n\n  //# flip :: Functor f => f (a -> b) -> a -> f b\n  //.\n  //. Curried version of [`Z.flip`][]. Maps over the given functions, applying\n  //. each to the given value.\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the C combinator\n  //. from combinatory logic:\n  //.\n  //.     Functor f => f (a -> b) -> a -> f b\n  //.     Function x (a -> b) -> a -> Function x b\n  //.     Function x (a -> c) -> a -> Function x c\n  //.     Function x (b -> c) -> b -> Function x c\n  //.     Function a (b -> c) -> b -> Function a c\n  //.     (a -> b -> c) -> b -> a -> c\n  //.\n  //. ```javascript\n  //. > S.flip (S.concat) ('!') ('foo')\n  //. 'foo!'\n  //.\n  //. > S.flip ([Math.floor, Math.ceil]) (1.5)\n  //. [1, 2]\n  //.\n  //. > S.flip ({floor: Math.floor, ceil: Math.ceil}) (1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > S.flip (Cons (Math.floor) (Cons (Math.ceil) (Nil))) (1.5)\n  //. Cons (1) (Cons (2) (Nil))\n  //. ```\n  _.flip = {\n    consts: {f: [Z.Functor]},\n    types: [f ($.Fn (a) (b)), a, f (b)],\n    impl: curry2 (Z.flip)\n  };\n\n  //# bimap :: Bifunctor f => (a -> b) -> (c -> d) -> f a c -> f b d\n  //.\n  //. Curried version of [`Z.bimap`][].\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Right (64))\n  //. Right (8)\n  //. ```\n  _.bimap = {\n    consts: {p: [Z.Bifunctor]},\n    types: [$.Fn (a) (b), $.Fn (c) (d), p (a) (c), p (b) (d)],\n    impl: curry3 (Z.bimap)\n  };\n\n  //# mapLeft :: Bifunctor f => (a -> b) -> f a c -> f b c\n  //.\n  //. Curried version of [`Z.mapLeft`][]. Maps the given function over the left\n  //. side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > S.mapLeft (S.toUpper) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (64)\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Right (64))\n  //. Right (64)\n  //. ```\n  _.mapLeft = {\n    consts: {p: [Z.Bifunctor]},\n    types: [$.Fn (a) (b), p (a) (c), p (b) (c)],\n    impl: curry2 (Z.mapLeft)\n  };\n\n  //# promap :: Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n  //.\n  //. Curried version of [`Z.promap`][].\n  //.\n  //. ```javascript\n  //. > S.promap (Math.abs) (S.add (1)) (Math.sqrt) (-100)\n  //. 11\n  //. ```\n  _.promap = {\n    consts: {p: [Z.Profunctor]},\n    types: [$.Fn (a) (b), $.Fn (c) (d), p (b) (c), p (a) (d)],\n    impl: curry3 (Z.promap)\n  };\n\n  //# alt :: Alt f => f a -> f a -> f a\n  //.\n  //. Curried version of [`Z.alt`][] with arguments flipped to facilitate\n  //. partial application.\n  //.\n  //. ```javascript\n  //. > S.alt (S.Just ('default')) (S.Nothing)\n  //. Just ('default')\n  //.\n  //. > S.alt (S.Just ('default')) (S.Just ('hello'))\n  //. Just ('hello')\n  //.\n  //. > S.alt (S.Right (0)) (S.Left ('X'))\n  //. Right (0)\n  //.\n  //. > S.alt (S.Right (0)) (S.Right (1))\n  //. Right (1)\n  //. ```\n  function alt(y) {\n    return function(x) {\n      return Z.alt (x, y);\n    };\n  }\n  _.alt = {\n    consts: {f: [Z.Alt]},\n    types: [f (a), f (a), f (a)],\n    impl: alt\n  };\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.zero`][].\n  //.\n  //. ```javascript\n  //. > S.zero (Array)\n  //. []\n  //.\n  //. > S.zero (Object)\n  //. {}\n  //.\n  //. > S.zero (S.Maybe)\n  //. Nothing\n  //. ```\n  _.zero = {\n    consts: {f: [Z.Plus]},\n    types: [TypeRep (f (a)), f (a)],\n    impl: Z.zero\n  };\n\n  //# reduce :: Foldable f => (b -> a -> b) -> b -> f a -> b\n  //.\n  //. Takes a curried binary function, an initial value, and a [Foldable][],\n  //. and applies the function to the initial value and the Foldable's first\n  //. value, then applies the function to the result of the previous\n  //. application and the Foldable's second value. Repeats this process\n  //. until each of the Foldable's values has been used. Returns the initial\n  //. value if the Foldable is empty; the result of the final application\n  //. otherwise.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.add) (0) ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.reduce (xs => x => S.prepend (x) (xs)) ([]) ([1, 2, 3, 4, 5])\n  //. [5, 4, 3, 2, 1]\n  //. ```\n  function reduce(f) {\n    return function(initial) {\n      return function(foldable) {\n        return Z.reduce (function(y, x) { return f (y) (x); },\n                         initial,\n                         foldable);\n      };\n    };\n  }\n  _.reduce = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Fn (a) ($.Fn (b) (a)), a, f (b), a],\n    impl: reduce\n  };\n\n  //# traverse :: (Applicative f, Traversable t) => TypeRep f -> (a -> f b) -> t a -> f (t b)\n  //.\n  //. Curried version of [`Z.traverse`][].\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (S.Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //.\n  //. > S.traverse (Array) (S.words) (S.Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C'])\n  //. Just ([10, 11, 12])\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C', 'X'])\n  //. Nothing\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C'})\n  //. Just ({a: 10, b: 11, c: 12})\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C', x: 'X'})\n  //. Nothing\n  //. ```\n  _.traverse = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep (f (b)), $.Fn (a) (f (b)), t (a), f (t (b))],\n    impl: curry3 (Z.traverse)\n  };\n\n  //# sequence :: (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n  //.\n  //. Curried version of [`Z.sequence`][]. Inverts the given `t (f a)`\n  //. to produce an `f (t a)`.\n  //.\n  //. ```javascript\n  //. > S.sequence (Array) (S.Just ([1, 2, 3]))\n  //. [Just (1), Just (2), Just (3)]\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Just (3)])\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Nothing])\n  //. Nothing\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Just (3)})\n  //. Just ({a: 1, b: 2, c: 3})\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Nothing})\n  //. Nothing\n  //. ```\n  _.sequence = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep (f (a)), t (f (a)), f (t (a))],\n    impl: curry2 (Z.sequence)\n  };\n\n  //# ap :: Apply f => f (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.ap`][].\n  //.\n  //. ```javascript\n  //. > S.ap ([Math.sqrt, x => x * x]) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > S.ap ({x: Math.sqrt, y: S.add (1), z: S.sub (1)}) ({w: 4, x: 4, y: 4})\n  //. {x: 2, y: 5}\n  //.\n  //. > S.ap (S.Just (Math.sqrt)) (S.Just (64))\n  //. Just (8)\n  //. ```\n  //.\n  //. Replacing `Apply f => f` with `Function x` produces the S combinator\n  //. from combinatory logic:\n  //.\n  //.     Apply f => f (a -> b) -> f a -> f b\n  //.     Function x (a -> b) -> Function x a -> Function x b\n  //.     Function x (a -> c) -> Function x a -> Function x c\n  //.     Function x (b -> c) -> Function x b -> Function x c\n  //.     Function a (b -> c) -> Function a b -> Function a c\n  //.     (a -> b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.ap (s => n => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //. ```\n  _.ap = {\n    consts: {f: [Z.Apply]},\n    types: [f ($.Fn (a) (b)), f (a), f (b)],\n    impl: curry2 (Z.ap)\n  };\n\n  //# lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n  //.\n  //. Promotes a curried binary function to a function that operates on two\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Just (3))\n  //. Just (5)\n  //.\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (true))\n  //. Just (true)\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (false))\n  //. Just (false)\n  //. ```\n  _.lift2 = {\n    consts: {f: [Z.Apply]},\n    types: [$.Fn (a) ($.Fn (b) (c)), f (a), f (b), f (c)],\n    impl: curry3 (Z.lift2)\n  };\n\n  //# lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n  //.\n  //. Promotes a curried ternary function to a function that operates on three\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Just ([1, 2, 3]))\n  //. Just (6)\n  //.\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Nothing)\n  //. Nothing\n  //. ```\n  _.lift3 = {\n    consts: {f: [Z.Apply]},\n    types: [$.Fn (a) ($.Fn (b) ($.Fn (c) (d))), f (a), f (b), f (c), f (d)],\n    impl: curry4 (Z.lift3)\n  };\n\n  //# apFirst :: Apply f => f a -> f b -> f a\n  //.\n  //. Curried version of [`Z.apFirst`][]. Combines two effectful actions,\n  //. keeping only the result of the first. Equivalent to Haskell's `(<*)`\n  //. function.\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > S.apFirst ([1, 2]) ([3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > S.apFirst (S.Just (1)) (S.Just (2))\n  //. Just (1)\n  //. ```\n  _.apFirst = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (a)],\n    impl: curry2 (Z.apFirst)\n  };\n\n  //# apSecond :: Apply f => f a -> f b -> f b\n  //.\n  //. Curried version of [`Z.apSecond`][]. Combines two effectful actions,\n  //. keeping only the result of the second. Equivalent to Haskell's `(*>)`\n  //. function.\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > S.apSecond ([1, 2]) ([3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > S.apSecond (S.Just (1)) (S.Just (2))\n  //. Just (2)\n  //. ```\n  _.apSecond = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (b)],\n    impl: curry2 (Z.apSecond)\n  };\n\n  //# of :: Applicative f => TypeRep f -> a -> f a\n  //.\n  //. Curried version of [`Z.of`][].\n  //.\n  //. ```javascript\n  //. > S.of (Array) (42)\n  //. [42]\n  //.\n  //. > S.of (Function) (42) (null)\n  //. 42\n  //.\n  //. > S.of (S.Maybe) (42)\n  //. Just (42)\n  //.\n  //. > S.of (S.Either) (42)\n  //. Right (42)\n  //. ```\n  function of(typeRep) {\n    return function(x) {\n      return Z.of (typeRep, x);\n    };\n  }\n  _.of = {\n    consts: {f: [Z.Applicative]},\n    types: [TypeRep (f (a)), a, f (a)],\n    impl: of\n  };\n\n  //# chain :: Chain m => (a -> m b) -> m a -> m b\n  //.\n  //. Curried version of [`Z.chain`][].\n  //.\n  //. ```javascript\n  //. > S.chain (x => [x, x]) ([1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > S.chain (n => s => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('slice')\n  //. 'sli'\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('123'))\n  //. Just (123)\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('XXX'))\n  //. Nothing\n  //. ```\n  _.chain = {\n    consts: {m: [Z.Chain]},\n    types: [$.Fn (a) (m (b)), m (a), m (b)],\n    impl: curry2 (Z.chain)\n  };\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.join`][].\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. ```javascript\n  //. > S.join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > S.join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > S.join (S.Just (S.Just (1)))\n  //. Just (1)\n  //.\n  //. > S.join (S.Pair ('foo') (S.Pair ('bar') ('baz')))\n  //. Pair ('foobar') ('baz')\n  //. ```\n  //.\n  //. Replacing `Chain m => m` with `Function x` produces the W combinator\n  //. from combinatory logic:\n  //.\n  //.     Chain m => m (m a) -> m a\n  //.     Function x (Function x a) -> Function x a\n  //.     (x -> x -> a) -> (x -> a)\n  //.\n  //. ```javascript\n  //. > S.join (S.concat) ('abc')\n  //. 'abcabc'\n  //. ```\n  _.join = {\n    consts: {m: [Z.Chain]},\n    types: [m (m (a)), m (a)],\n    impl: Z.join\n  };\n\n  //# chainRec :: ChainRec m => TypeRep m -> (a -> m (Either a b)) -> a -> m b\n  //.\n  //. Performs a [`chain`](#chain)-like computation with constant stack usage.\n  //. Similar to [`Z.chainRec`][], but curried and more convenient due to the\n  //. use of the Either type to indicate completion (via a Right).\n  //.\n  //. ```javascript\n  //. > S.chainRec (Array)\n  //. .            (s => s.length === 2 ? S.map (S.Right) ([s + '!', s + '?'])\n  //. .                                 : S.map (S.Left) ([s + 'o', s + 'n']))\n  //. .            ('')\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep) {\n    return function(f) {\n      return function(x) {\n        return Z.chainRec (typeRep, step, x);\n      };\n      function step(next, done, x) {\n        return Z.map (either (next) (done), f (x));\n      }\n    };\n  }\n  _.chainRec = {\n    consts: {m: [Z.ChainRec]},\n    types: [TypeRep (m (b)), $.Fn (a) (m ($.Either (a) (b))), a, m (b)],\n    impl: chainRec\n  };\n\n  //# extend :: Extend w => (w a -> b) -> w a -> w b\n  //.\n  //. Curried version of [`Z.extend`][].\n  //.\n  //. ```javascript\n  //. > S.extend (S.joinWith ('')) (['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > S.extend (f => f ([3, 4])) (S.reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.extend = {\n    consts: {w: [Z.Extend]},\n    types: [$.Fn (w (a)) (b), w (a), w (b)],\n    impl: curry2 (Z.extend)\n  };\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.duplicate`][].\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. ```javascript\n  //. > S.duplicate (S.Just (1))\n  //. Just (Just (1))\n  //.\n  //. > S.duplicate ([1])\n  //. [[1]]\n  //.\n  //. > S.duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > S.duplicate (S.reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.duplicate = {\n    consts: {w: [Z.Extend]},\n    types: [w (a), w (w (a))],\n    impl: Z.duplicate\n  };\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.extract`][].\n  //.\n  //. ```javascript\n  //. > S.extract (S.Pair ('foo') ('bar'))\n  //. 'bar'\n  //. ```\n  _.extract = {\n    consts: {w: [Z.Comonad]},\n    types: [w (a), a],\n    impl: Z.extract\n  };\n\n  //# contramap :: Contravariant f => (b -> a) -> f a -> f b\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.contramap`][].\n  //.\n  //. ```javascript\n  //. > S.contramap (s => s.length) (Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  _.contramap = {\n    consts: {f: [Z.Contravariant]},\n    types: [$.Fn (b) (a), f (a), f (b)],\n    impl: curry2 (Z.contramap)\n  };\n\n  //. ### Combinator\n\n  //# I :: a -> a\n  //.\n  //. The I combinator. Returns its argument. Equivalent to Haskell's `id`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.I ('foo')\n  //. 'foo'\n  //. ```\n  function I(x) {\n    return x;\n  }\n  _.I = {\n    consts: {},\n    types: [a, a],\n    impl: I\n  };\n\n  //# K :: a -> b -> a\n  //.\n  //. The K combinator. Takes two values and returns the first. Equivalent to\n  //. Haskell's `const` function.\n  //.\n  //. ```javascript\n  //. > S.K ('foo') ('bar')\n  //. 'foo'\n  //.\n  //. > S.map (S.K (42)) (S.range (0) (5))\n  //. [42, 42, 42, 42, 42]\n  //. ```\n  function K(x) {\n    return function(y) {\n      return x;\n    };\n  }\n  _.K = {\n    consts: {},\n    types: [a, b, a],\n    impl: K\n  };\n\n  //# T :: a -> (a -> b) -> b\n  //.\n  //. The T ([thrush][]) combinator. Takes a value and a function, and returns\n  //. the result of applying the function to the value. Equivalent to Haskell's\n  //. `(&)` function.\n  //.\n  //. ```javascript\n  //. > S.T (42) (S.add (1))\n  //. 43\n  //.\n  //. > S.map (S.T (100)) ([S.add (1), Math.sqrt])\n  //. [101, 10]\n  //. ```\n  function T(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n  _.T = {\n    consts: {},\n    types: [a, $.Fn (a) (b), b],\n    impl: T\n  };\n\n  //. ### Function\n\n  //# curry2 :: ((a, b) -> c) -> a -> b -> c\n  //.\n  //. Curries the given binary function.\n  //.\n  //. ```javascript\n  //. > S.map (S.curry2 (Math.pow) (10)) ([1, 2, 3])\n  //. [10, 100, 1000]\n  //. ```\n  function curry2(f) {\n    return function(x) {\n      return function(y) {\n        return f (x, y);\n      };\n    };\n  }\n  _.curry2 = {\n    consts: {},\n    types: [$.Function ([a, b, c]), a, b, c],\n    impl: curry2\n  };\n\n  //# curry3 :: ((a, b, c) -> d) -> a -> b -> c -> d\n  //.\n  //. Curries the given ternary function.\n  //.\n  //. ```javascript\n  //. > const replaceString = S.curry3 ((what, replacement, string) =>\n  //. .   string.replace (what, replacement)\n  //. . )\n  //.\n  //. > replaceString ('banana') ('orange') ('banana icecream')\n  //. 'orange icecream'\n  //. ```\n  function curry3(f) {\n    return function(x) {\n      return function(y) {\n        return function(z) {\n          return f (x, y, z);\n        };\n      };\n    };\n  }\n  _.curry3 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d]), a, b, c, d],\n    impl: curry3\n  };\n\n  //# curry4 :: ((a, b, c, d) -> e) -> a -> b -> c -> d -> e\n  //.\n  //. Curries the given quaternary function.\n  //.\n  //. ```javascript\n  //. > const createRect = S.curry4 ((x, y, width, height) =>\n  //. .   ({x, y, width, height})\n  //. . )\n  //.\n  //. > createRect (0) (0) (10) (10)\n  //. {x: 0, y: 0, width: 10, height: 10}\n  //. ```\n  function curry4(f) {\n    return function(w) {\n      return function(x) {\n        return function(y) {\n          return function(z) {\n            return f (w, x, y, z);\n          };\n        };\n      };\n    };\n  }\n  _.curry4 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e]), a, b, c, d, e],\n    impl: curry4\n  };\n\n  //# curry5 :: ((a, b, c, d, e) -> f) -> a -> b -> c -> d -> e -> f\n  //.\n  //. Curries the given quinary function.\n  //.\n  //. ```javascript\n  //. > const toUrl = S.curry5 ((protocol, creds, hostname, port, pathname) =>\n  //. .   protocol + '//' +\n  //. .   S.maybe ('') (S.flip (S.concat) ('@')) (creds) +\n  //. .   hostname +\n  //. .   S.maybe ('') (S.concat (':')) (port) +\n  //. .   pathname\n  //. . )\n  //.\n  //. > toUrl ('https:') (S.Nothing) ('example.com') (S.Just ('443')) ('/foo/bar')\n  //. 'https://example.com:443/foo/bar'\n  //. ```\n  function curry5(f) {\n    return function(v) {\n      return function(w) {\n        return function(x) {\n          return function(y) {\n            return function(z) {\n              return f (v, w, x, y, z);\n            };\n          };\n        };\n      };\n    };\n  }\n  _.curry5 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e, r]), a, b, c, d, e, r],\n    impl: curry5\n  };\n\n  //. ### Composition\n\n  //# compose :: Semigroupoid s => s b c -> s a b -> s a c\n  //.\n  //. Curried version of [`Z.compose`][].\n  //.\n  //. When specialized to Function, `compose` composes two unary functions,\n  //. from right to left (this is the B combinator from combinatory logic).\n  //.\n  //. The generalized type signature indicates that `compose` is compatible\n  //. with any [Semigroupoid][].\n  //.\n  //. See also [`pipe`](#pipe).\n  //.\n  //. ```javascript\n  //. > S.compose (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  _.compose = {\n    consts: {s: [Z.Semigroupoid]},\n    types: [s (b) (c), s (a) (b), s (a) (c)],\n    impl: curry2 (Z.compose)\n  };\n\n  //# pipe :: Foldable f => f (Any -> Any) -> a -> b\n  //.\n  //. Takes a sequence of functions assumed to be unary and a value of any\n  //. type, and returns the result of applying the sequence of transformations\n  //. to the initial value.\n  //.\n  //. In general terms, `pipe` performs left-to-right composition of a sequence\n  //. of functions. `pipe ([f, g, h]) (x)` is equivalent to `h (g (f (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipe ([S.add (1), Math.sqrt, S.sub (1)]) (99)\n  //. 9\n  //. ```\n  function pipe(fs) {\n    return function(x) {\n      return reduce (T) (x) (fs);\n    };\n  }\n  _.pipe = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Fn ($.Any) ($.Any)), a, b],\n    impl: pipe\n  };\n\n  //# pipeK :: (Foldable f, Chain m) => f (Any -> m Any) -> m a -> m b\n  //.\n  //. Takes a sequence of functions assumed to be unary that return values\n  //. with a [Chain][], and a value of that Chain, and returns the result\n  //. of applying the sequence of transformations to the initial value.\n  //.\n  //. In general terms, `pipeK` performs left-to-right [Kleisli][] composition\n  //. of an sequence of functions. `pipeK ([f, g, h]) (x)` is equivalent to\n  //. `chain (h) (chain (g) (chain (f) (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipeK ([S.tail, S.tail, S.head]) (S.Just ([1, 2, 3, 4]))\n  //. Just (3)\n  //. ```\n  function pipeK(fs) {\n    return function(x) {\n      return Z.reduce (function(x, f) { return Z.chain (f, x); }, x, fs);\n    };\n  }\n  _.pipeK = {\n    consts: {f: [Z.Foldable], m: [Z.Chain]},\n    types: [f ($.Fn ($.Any) (m ($.Any))), m (a), m (b)],\n    impl: pipeK\n  };\n\n  //# on :: (b -> b -> c) -> (a -> b) -> a -> a -> c\n  //.\n  //. Takes a binary function `f`, a unary function `g`, and two\n  //. values `x` and `y`. Returns `f (g (x)) (g (y))`.\n  //.\n  //. This is the P combinator from combinatory logic.\n  //.\n  //. ```javascript\n  //. > S.on (S.concat) (S.reverse) ([1, 2, 3]) ([4, 5, 6])\n  //. [3, 2, 1, 6, 5, 4]\n  //. ```\n  function on(f) {\n    return function(g) {\n      return function(x) {\n        return function(y) {\n          return f (g (x)) (g (y));\n        };\n      };\n    };\n  }\n  _.on = {\n    consts: {},\n    types: [$.Fn (b) ($.Fn (b) (c)), $.Fn (a) (b), a, a, c],\n    impl: on\n  };\n\n  //. ### Pair type\n  //.\n  //. Pair is the canonical product type: a value of type `Pair a b` always\n  //. contains exactly two values: one of type `a`; one of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-pair][].\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > S.Pair ('foo') (42)\n  //. Pair ('foo') (42)\n  //. ```\n  _.Pair = {\n    consts: {},\n    types: [a, b, $.Pair (a) (b)],\n    impl: Pair\n  };\n\n  //# pair :: (a -> b -> c) -> Pair a b -> c\n  //.\n  //. Case analysis for the `Pair a b` type.\n  //.\n  //. ```javascript\n  //. > S.pair (S.concat) (S.Pair ('foo') ('bar'))\n  //. 'foobar'\n  //. ```\n  function pair(f) {\n    return function(pair) {\n      return f (pair.fst) (pair.snd);\n    };\n  }\n  _.pair = {\n    consts: {},\n    types: [$.Fn (a) ($.Fn (b) (c)), $.Pair (a) (b), c],\n    impl: pair\n  };\n\n  //# fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > S.fst (S.Pair ('foo') (42))\n  //. 'foo'\n  //. ```\n  _.fst = {\n    consts: {},\n    types: [$.Pair (a) (b), a],\n    impl: pair (K)\n  };\n\n  //# snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.snd (S.Pair ('foo') (42))\n  //. 42\n  //. ```\n  _.snd = {\n    consts: {},\n    types: [$.Pair (a) (b), b],\n    impl: pair (C (K))\n  };\n\n  //# swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > S.swap (S.Pair ('foo') (42))\n  //. Pair (42) ('foo')\n  //. ```\n  _.swap = {\n    consts: {},\n    types: [$.Pair (a) (b), $.Pair (b) (a)],\n    impl: pair (C (Pair))\n  };\n\n  //. ### Maybe type\n  //.\n  //. The Maybe type represents optional values: a value of type `Maybe a` is\n  //. either Nothing (the empty value) or a Just whose value is of type `a`.\n  //.\n  //. The implementation is provided by [sanctuary-maybe][].\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > S.Nothing\n  //. Nothing\n  //. ```\n\n  //# Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Just (42)\n  //. Just (42)\n  //. ```\n  _.Just = {\n    consts: {},\n    types: [a, $.Maybe (a)],\n    impl: Just\n  };\n\n  //# isNothing :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is Nothing; `false` if it is a Just.\n  //.\n  //. ```javascript\n  //. > S.isNothing (S.Nothing)\n  //. true\n  //.\n  //. > S.isNothing (S.Just (42))\n  //. false\n  //. ```\n  function isNothing(maybe) {\n    return maybe.isNothing;\n  }\n  _.isNothing = {\n    consts: {},\n    types: [$.Maybe (a), $.Boolean],\n    impl: isNothing\n  };\n\n  //# isJust :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is a Just; `false` if it is Nothing.\n  //.\n  //. ```javascript\n  //. > S.isJust (S.Just (42))\n  //. true\n  //.\n  //. > S.isJust (S.Nothing)\n  //. false\n  //. ```\n  function isJust(maybe) {\n    return maybe.isJust;\n  }\n  _.isJust = {\n    consts: {},\n    types: [$.Maybe (a), $.Boolean],\n    impl: isJust\n  };\n\n  //# fromMaybe :: a -> Maybe a -> a\n  //.\n  //. Takes a default value and a Maybe, and returns the Maybe's value\n  //. if the Maybe is a Just; the default value otherwise.\n  //.\n  //. See also [`fromMaybe_`](#fromMaybe_) and\n  //. [`maybeToNullable`](#maybeToNullable).\n  //.\n  //. ```javascript\n  //. > S.fromMaybe (0) (S.Just (42))\n  //. 42\n  //.\n  //. > S.fromMaybe (0) (S.Nothing)\n  //. 0\n  //. ```\n  _.fromMaybe = {\n    consts: {},\n    types: [a, $.Maybe (a), a],\n    impl: C (maybe) (I)\n  };\n\n  //# fromMaybe_ :: (() -> a) -> Maybe a -> a\n  //.\n  //. Variant of [`fromMaybe`](#fromMaybe) that takes a thunk so the default\n  //. value is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Just (1000000))\n  //. 1000000\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Nothing)\n  //. 832040\n  //. ```\n  _.fromMaybe_ = {\n    consts: {},\n    types: [$.Thunk (a), $.Maybe (a), a],\n    impl: C (maybe_) (I)\n  };\n\n  //# maybeToNullable :: Maybe a -> Nullable a\n  //.\n  //. Returns the given Maybe's value if the Maybe is a Just; `null` otherwise.\n  //. [Nullable][] is defined in [sanctuary-def][].\n  //.\n  //. See also [`fromMaybe`](#fromMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToNullable (S.Just (42))\n  //. 42\n  //.\n  //. > S.maybeToNullable (S.Nothing)\n  //. null\n  //. ```\n  function maybeToNullable(maybe) {\n    return maybe.isJust ? maybe.value : null;\n  }\n  _.maybeToNullable = {\n    consts: {},\n    types: [$.Maybe (a), $.Nullable (a)],\n    impl: maybeToNullable\n  };\n\n  //# maybe :: b -> (a -> b) -> Maybe a -> b\n  //.\n  //. Takes a value of any type, a function, and a Maybe. If the Maybe is\n  //. a Just, the return value is the result of applying the function to\n  //. the Just's value. Otherwise, the first argument is returned.\n  //.\n  //. See also [`maybe_`](#maybe_).\n  //.\n  //. ```javascript\n  //. > S.maybe (0) (S.prop ('length')) (S.Just ('refuge'))\n  //. 6\n  //.\n  //. > S.maybe (0) (S.prop ('length')) (S.Nothing)\n  //. 0\n  //. ```\n  function maybe(x) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : x;\n      };\n    };\n  }\n  _.maybe = {\n    consts: {},\n    types: [b, $.Fn (a) (b), $.Maybe (a), b],\n    impl: maybe\n  };\n\n  //# maybe_ :: (() -> b) -> (a -> b) -> Maybe a -> b\n  //.\n  //. Variant of [`maybe`](#maybe) that takes a thunk so the default value\n  //. is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Just (1000000))\n  //. 1000\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Nothing)\n  //. 832040\n  //. ```\n  function maybe_(thunk) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : thunk ();\n      };\n    };\n  }\n  _.maybe_ = {\n    consts: {},\n    types: [$.Thunk (b), $.Fn (a) (b), $.Maybe (a), b],\n    impl: maybe_\n  };\n\n  //# justs :: (Filterable f, Functor f) => f (Maybe a) -> f a\n  //.\n  //. Discards each element that is Nothing, and unwraps each element that is\n  //. a Just. Related to Haskell's `catMaybes` function.\n  //.\n  //. See also [`lefts`](#lefts) and [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.justs ([S.Just ('foo'), S.Nothing, S.Just ('baz')])\n  //. ['foo', 'baz']\n  //. ```\n  function justs(maybes) {\n    return map (prop ('value')) (filter (isJust) (maybes));\n  }\n  _.justs = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Maybe (a)), f (a)],\n    impl: justs\n  };\n\n  //# mapMaybe :: (Filterable f, Functor f) => (a -> Maybe b) -> f a -> f b\n  //.\n  //. Takes a function and a structure, applies the function to each element\n  //. of the structure, and returns the \"successful\" results. If the result of\n  //. applying the function to an element is Nothing, the result is discarded;\n  //. if the result is a Just, the Just's value is included.\n  //.\n  //. ```javascript\n  //. > S.mapMaybe (S.head) ([[], [1, 2, 3], [], [4, 5, 6], []])\n  //. [1, 4]\n  //.\n  //. > S.mapMaybe (S.head) ({x: [1, 2, 3], y: [], z: [4, 5, 6]})\n  //. {x: 1, z: 4}\n  //. ```\n  _.mapMaybe = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [$.Fn (a) ($.Maybe (b)), f (a), f (b)],\n    impl: B (B (justs)) (map)\n  };\n\n  //# maybeToEither :: a -> Maybe b -> Either a b\n  //.\n  //. Converts a Maybe to an Either. Nothing becomes a Left (containing the\n  //. first argument); a Just becomes a Right.\n  //.\n  //. See also [`eitherToMaybe`](#eitherToMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('xyz'))\n  //. Left ('Expecting an integer')\n  //.\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('42'))\n  //. Right (42)\n  //. ```\n  function maybeToEither(x) {\n    return maybe (Left (x)) (Right);\n  }\n  _.maybeToEither = {\n    consts: {},\n    types: [a, $.Maybe (b), $.Either (a) (b)],\n    impl: maybeToEither\n  };\n\n  //. ### Either type\n  //.\n  //. The Either type represents values with two possibilities: a value of type\n  //. `Either a b` is either a Left whose value is of type `a` or a Right whose\n  //. value is of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-either][].\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Left ('Cannot divide by zero')\n  //. Left ('Cannot divide by zero')\n  //. ```\n  _.Left = {\n    consts: {},\n    types: [a, $.Either (a) (b)],\n    impl: Left\n  };\n\n  //# Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > S.Right (42)\n  //. Right (42)\n  //. ```\n  _.Right = {\n    consts: {},\n    types: [b, $.Either (a) (b)],\n    impl: Right\n  };\n\n  //# isLeft :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Left; `false` if it is a Right.\n  //.\n  //. ```javascript\n  //. > S.isLeft (S.Left ('Cannot divide by zero'))\n  //. true\n  //.\n  //. > S.isLeft (S.Right (42))\n  //. false\n  //. ```\n  function isLeft(either) {\n    return either.isLeft;\n  }\n  _.isLeft = {\n    consts: {},\n    types: [$.Either (a) (b), $.Boolean],\n    impl: isLeft\n  };\n\n  //# isRight :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Right; `false` if it is a Left.\n  //.\n  //. ```javascript\n  //. > S.isRight (S.Right (42))\n  //. true\n  //.\n  //. > S.isRight (S.Left ('Cannot divide by zero'))\n  //. false\n  //. ```\n  function isRight(either) {\n    return either.isRight;\n  }\n  _.isRight = {\n    consts: {},\n    types: [$.Either (a) (b), $.Boolean],\n    impl: isRight\n  };\n\n  //# fromEither :: b -> Either a b -> b\n  //.\n  //. Takes a default value and an Either, and returns the Right value\n  //. if the Either is a Right; the default value otherwise.\n  //.\n  //. ```javascript\n  //. > S.fromEither (0) (S.Right (42))\n  //. 42\n  //.\n  //. > S.fromEither (0) (S.Left (42))\n  //. 0\n  //. ```\n  function fromEither(x) {\n    return either (K (x)) (I);\n  }\n  _.fromEither = {\n    consts: {},\n    types: [b, $.Either (a) (b), b],\n    impl: fromEither\n  };\n\n  //# either :: (a -> c) -> (b -> c) -> Either a b -> c\n  //.\n  //. Takes two functions and an Either, and returns the result of\n  //. applying the first function to the Left's value, if the Either\n  //. is a Left, or the result of applying the second function to the\n  //. Right's value, if the Either is a Right.\n  //.\n  //. ```javascript\n  //. > S.either (S.toUpper) (S.show) (S.Left ('Cannot divide by zero'))\n  //. 'CANNOT DIVIDE BY ZERO'\n  //.\n  //. > S.either (S.toUpper) (S.show) (S.Right (42))\n  //. '42'\n  //. ```\n  function either(l) {\n    return function(r) {\n      return function(either) {\n        return (either.isLeft ? l : r) (either.value);\n      };\n    };\n  }\n  _.either = {\n    consts: {},\n    types: [$.Fn (a) (c), $.Fn (b) (c), $.Either (a) (b), c],\n    impl: either\n  };\n\n  //# lefts :: (Filterable f, Functor f) => f (Either a b) -> f a\n  //.\n  //. Discards each element that is a Right, and unwraps each element that is\n  //. a Left.\n  //.\n  //. See also [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.lefts ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. ['foo', 'bar']\n  //. ```\n  _.lefts = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Either (a) (b)), f (a)],\n    impl: B (map (prop ('value'))) (filter (isLeft))\n  };\n\n  //# rights :: (Filterable f, Functor f) => f (Either a b) -> f b\n  //.\n  //. Discards each element that is a Left, and unwraps each element that is\n  //. a Right.\n  //.\n  //. See also [`lefts`](#lefts).\n  //.\n  //. ```javascript\n  //. > S.rights ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. [20, 10]\n  //. ```\n  _.rights = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Either (a) (b)), f (b)],\n    impl: B (map (prop ('value'))) (filter (isRight))\n  };\n\n  //# tagBy :: (a -> Boolean) -> a -> Either a a\n  //.\n  //. Takes a predicate and a value, and returns a Right of the value if it\n  //. satisfies the predicate; a Left of the value otherwise.\n  //.\n  //. ```javascript\n  //. > S.tagBy (S.odd) (0)\n  //. Left (0)\n  //\n  //. > S.tagBy (S.odd) (1)\n  //. Right (1)\n  //. ```\n  function tagBy(pred) {\n    return ifElse (pred) (Right) (Left);\n  }\n  _.tagBy = {\n    consts: {},\n    types: [$.Predicate (a), a, $.Either (a) (a)],\n    impl: tagBy\n  };\n\n  //# encase :: (a -> b) -> a -> Either Error b\n  //.\n  //. Takes a function that may throw and returns a pure function.\n  //.\n  //. ```javascript\n  //. > S.encase (JSON.parse) ('[\"foo\",\"bar\",\"baz\"]')\n  //. Right (['foo', 'bar', 'baz'])\n  //.\n  //. > S.encase (JSON.parse) ('[')\n  //. Left (new SyntaxError ('Unexpected end of JSON input'))\n  //. ```\n  function encase(f) {\n    return function(x) {\n      try {\n        return Right (f (x));\n      } catch (err) {\n        return Left (err);\n      }\n    };\n  }\n  _.encase = {\n    consts: {},\n    types: [$.Fn (a) (b), a, $.Either ($.Error) (b)],\n    impl: encase\n  };\n\n  //# eitherToMaybe :: Either a b -> Maybe b\n  //.\n  //. Converts an Either to a Maybe. A Left becomes Nothing; a Right becomes\n  //. a Just.\n  //.\n  //. See also [`maybeToEither`](#maybeToEither).\n  //.\n  //. ```javascript\n  //. > S.eitherToMaybe (S.Left ('Cannot divide by zero'))\n  //. Nothing\n  //.\n  //. > S.eitherToMaybe (S.Right (42))\n  //. Just (42)\n  //. ```\n  function eitherToMaybe(either) {\n    return either.isLeft ? Nothing : Just (either.value);\n  }\n  _.eitherToMaybe = {\n    consts: {},\n    types: [$.Either (a) (b), $.Maybe (b)],\n    impl: eitherToMaybe\n  };\n\n  //. ### Logic\n\n  //# and :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"and\".\n  //.\n  //. ```javascript\n  //. > S.and (false) (false)\n  //. false\n  //.\n  //. > S.and (false) (true)\n  //. false\n  //.\n  //. > S.and (true) (false)\n  //. false\n  //.\n  //. > S.and (true) (true)\n  //. true\n  //. ```\n  function and(x) {\n    return function(y) {\n      return x && y;\n    };\n  }\n  _.and = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: and\n  };\n\n  //# or :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"or\".\n  //.\n  //. ```javascript\n  //. > S.or (false) (false)\n  //. false\n  //.\n  //. > S.or (false) (true)\n  //. true\n  //.\n  //. > S.or (true) (false)\n  //. true\n  //.\n  //. > S.or (true) (true)\n  //. true\n  //. ```\n  function or(x) {\n    return function(y) {\n      return x || y;\n    };\n  }\n  _.or = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: or\n  };\n\n  //# not :: Boolean -> Boolean\n  //.\n  //. Boolean \"not\".\n  //.\n  //. See also [`complement`](#complement).\n  //.\n  //. ```javascript\n  //. > S.not (false)\n  //. true\n  //.\n  //. > S.not (true)\n  //. false\n  //. ```\n  function not(x) {\n    return !x;\n  }\n  _.not = {\n    consts: {},\n    types: [$.Boolean, $.Boolean],\n    impl: not\n  };\n\n  //# complement :: (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a unary predicate and a value of any type, and returns the logical\n  //. negation of applying the predicate to the value.\n  //.\n  //. See also [`not`](#not).\n  //.\n  //. ```javascript\n  //. > Number.isInteger (42)\n  //. true\n  //.\n  //. > S.complement (Number.isInteger) (42)\n  //. false\n  //. ```\n  _.complement = {\n    consts: {},\n    types: [$.Predicate (a), a, $.Boolean],\n    impl: B (not)\n  };\n\n  //# boolean :: a -> a -> Boolean -> a\n  //.\n  //. Case analysis for the `Boolean` type. `boolean (x) (y) (b)` evaluates\n  //. to `x` if `b` is `false`; to `y` if `b` is `true`.\n  //.\n  //. ```javascript\n  //. > S.boolean ('no') ('yes') (false)\n  //. 'no'\n  //.\n  //. > S.boolean ('no') ('yes') (true)\n  //. 'yes'\n  //. ```\n  function boolean(x) {\n    return function(y) {\n      return function(b) {\n        return b ? y : x;\n      };\n    };\n  }\n  _.boolean = {\n    consts: {},\n    types: [a, a, $.Boolean, a],\n    impl: boolean\n  };\n\n  //# ifElse :: (a -> Boolean) -> (a -> b) -> (a -> b) -> a -> b\n  //.\n  //. Takes a unary predicate, a unary \"if\" function, a unary \"else\"\n  //. function, and a value of any type, and returns the result of\n  //. applying the \"if\" function to the value if the value satisfies\n  //. the predicate; the result of applying the \"else\" function to the\n  //. value otherwise.\n  //.\n  //. See also [`when`](#when) and [`unless`](#unless).\n  //.\n  //. ```javascript\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (-1)\n  //. 1\n  //.\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (16)\n  //. 4\n  //. ```\n  function ifElse(pred) {\n    return function(f) {\n      return function(g) {\n        return function(x) {\n          return (pred (x) ? f : g) (x);\n        };\n      };\n    };\n  }\n  _.ifElse = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (b), $.Fn (a) (b), a, b],\n    impl: ifElse\n  };\n\n  //# when :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. satisfies the predicate; the value otherwise.\n  //.\n  //. See also [`unless`](#unless) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.when (x => x >= 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.when (x => x >= 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function when(pred) {\n    return C (ifElse (pred)) (I);\n  }\n  _.when = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (a), a, a],\n    impl: when\n  };\n\n  //# unless :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. does not satisfy the predicate; the value otherwise.\n  //.\n  //. See also [`when`](#when) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.unless (x => x < 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.unless (x => x < 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function unless(pred) {\n    return ifElse (pred) (I);\n  }\n  _.unless = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (a), a, a],\n    impl: unless\n  };\n\n  //. ### Array\n\n  //# array :: b -> (a -> Array a -> b) -> Array a -> b\n  //.\n  //. Case analysis for the `Array a` type.\n  //.\n  //. ```javascript\n  //. > S.array (S.Nothing) (head => tail => S.Just (head)) ([])\n  //. Nothing\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (head)) ([1, 2, 3])\n  //. Just (1)\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (tail)) ([])\n  //. Nothing\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (tail)) ([1, 2, 3])\n  //. Just ([2, 3])\n  //. ```\n  function array(y) {\n    return function(f) {\n      return function(xs) {\n        return xs.length === 0 ? y : f (xs[0]) (xs.slice (1));\n      };\n    };\n  }\n  _.array = {\n    consts: {},\n    types: [b, $.Fn (a) ($.Fn ($.Array (a)) (b)), $.Array (a), b],\n    impl: array\n  };\n\n  //# head :: Foldable f => f a -> Maybe a\n  //.\n  //. Returns Just the first element of the given structure if the structure\n  //. contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.head ([1, 2, 3])\n  //. Just (1)\n  //.\n  //. > S.head ([])\n  //. Nothing\n  //.\n  //. > S.head (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (1)\n  //.\n  //. > S.head (Nil)\n  //. Nothing\n  //. ```\n  function head(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable[0]) : Nothing;\n    }\n    return Z.reduce (function(m, x) { return m.isJust ? m : Just (x); },\n                     Nothing,\n                     foldable);\n  }\n  _.head = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Maybe (a)],\n    impl: head\n  };\n\n  //# last :: Foldable f => f a -> Maybe a\n  //.\n  //. Returns Just the last element of the given structure if the structure\n  //. contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.last ([1, 2, 3])\n  //. Just (3)\n  //.\n  //. > S.last ([])\n  //. Nothing\n  //.\n  //. > S.last (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (3)\n  //.\n  //. > S.last (Nil)\n  //. Nothing\n  //. ```\n  function last(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable[foldable.length - 1])\n                                 : Nothing;\n    }\n    return Z.reduce (function(_, x) { return Just (x); }, Nothing, foldable);\n  }\n  _.last = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Maybe (a)],\n    impl: last\n  };\n\n  //# tail :: (Applicative f, Foldable f, Monoid (f a)) => f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the first of the given structure's elements if the\n  //. structure contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.tail ([1, 2, 3])\n  //. Just ([2, 3])\n  //.\n  //. > S.tail ([])\n  //. Nothing\n  //.\n  //. > S.tail (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (Cons (2) (Cons (3) (Nil)))\n  //\n  //. > S.tail (Nil)\n  //. Nothing\n  //. ```\n  function tail(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable.slice (1)) : Nothing;\n    }\n    var empty = Z.empty (foldable.constructor);\n    return Z.reduce (function(m, x) {\n      return Just (maybe (empty) (append (x)) (m));\n    }, Nothing, foldable);\n  }\n  _.tail = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), $.Maybe (f (a))],\n    impl: tail\n  };\n\n  //# init :: (Applicative f, Foldable f, Monoid (f a)) => f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the last of the given structure's elements if the\n  //. structure contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.init ([1, 2, 3])\n  //. Just ([1, 2])\n  //.\n  //. > S.init ([])\n  //. Nothing\n  //.\n  //. > S.init (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (Cons (1) (Cons (2) (Nil)))\n  //.\n  //. > S.init (Nil)\n  //. Nothing\n  //. ```\n  function init(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable.slice (0, -1)) : Nothing;\n    }\n    var empty = Z.empty (foldable.constructor);\n    return Z.map (Pair.snd, Z.reduce (function(m, x) {\n      return Just (Pair (x) (maybe (empty) (pair (append)) (m)));\n    }, Nothing, foldable));\n  }\n  _.init = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), $.Maybe (f (a))],\n    impl: init\n  };\n\n  //# take :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just the first N elements of the given structure if N is\n  //. non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.take (0) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.take (1) (['foo', 'bar'])\n  //. Just (['foo'])\n  //.\n  //. > S.take (2) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.take (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.take (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Cons (5) (Nil))))))\n  //. Just (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. ```\n  function _takeDrop(arrayCase, generalCase) {\n    return function(n) {\n      return function(xs) {\n        if (n < 0) return Nothing;\n\n        //  Fast path for arrays.\n        if (Array.isArray (xs)) {\n          return n <= xs.length ? Just (arrayCase (n, xs)) : Nothing;\n        }\n\n        //  m :: Maybe (Pair Integer (f a))\n        var m = Z.reduce (function(m, x) {\n          return Z.map (function(pair) {\n            var n = pair.fst;\n            var xs = pair.snd;\n            return Pair (n - 1) (generalCase (n, xs, x));\n          }, m);\n        }, Just (Pair (n) (Z.empty (xs.constructor))), xs);\n\n        return Z.map (Pair.snd, Z.reject (B (gt (0)) (Pair.fst), m));\n      };\n    };\n  }\n  var take = _takeDrop (\n    function(n, xs) { return xs.slice (0, n); },\n    function(n, xs, x) { return n > 0 ? Z.append (x, xs) : xs; }\n  );\n  _.take = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: take\n  };\n\n  //# drop :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the first N elements of the given structure if\n  //. N is non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.drop (0) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.drop (1) (['foo', 'bar'])\n  //. Just (['bar'])\n  //.\n  //. > S.drop (2) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.drop (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.drop (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Cons (5) (Nil))))))\n  //. Just (Cons (4) (Cons (5) (Nil)))\n  //. ```\n  var drop = _takeDrop (\n    function(n, xs) { return xs.slice (n); },\n    function(n, xs, x) { return n > 0 ? xs : Z.append (x, xs); }\n  );\n  _.drop = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: drop\n  };\n\n  //# takeLast :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just the last N elements of the given structure if N is\n  //. non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.takeLast (0) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.takeLast (1) (['foo', 'bar'])\n  //. Just (['bar'])\n  //.\n  //. > S.takeLast (2) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.takeLast (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.takeLast (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Nil)))))\n  //. Just (Cons (2) (Cons (3) (Cons (4) (Nil))))\n  //. ```\n  function takeLast(n) {\n    return function(xs) {\n      return Z.map (Z.reverse, take (n) (Z.reverse (xs)));\n    };\n  }\n  _.takeLast = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: takeLast\n  };\n\n  //# dropLast :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the last N elements of the given structure if\n  //. N is non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.dropLast (0) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.dropLast (1) (['foo', 'bar'])\n  //. Just (['foo'])\n  //.\n  //. > S.dropLast (2) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.dropLast (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.dropLast (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Nil)))))\n  //. Just (Cons (1) (Nil))\n  //. ```\n  function dropLast(n) {\n    return function(xs) {\n      return Z.map (Z.reverse, drop (n) (Z.reverse (xs)));\n    };\n  }\n  _.dropLast = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: dropLast\n  };\n\n  //# takeWhile :: (a -> Boolean) -> Array a -> Array a\n  //.\n  //. Discards the first element that does not satisfy the predicate,\n  //. and all subsequent elements.\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > S.takeWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7]\n  //.\n  //. > S.takeWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. []\n  //. ```\n  function takeWhile(pred) {\n    return function(xs) {\n      var idx = 0;\n      while (idx < xs.length && pred (xs[idx])) idx += 1;\n      return xs.slice (0, idx);\n    };\n  }\n  _.takeWhile = {\n    consts: {},\n    types: [$.Predicate (a), $.Array (a), $.Array (a)],\n    impl: takeWhile\n  };\n\n  //# dropWhile :: (a -> Boolean) -> Array a -> Array a\n  //.\n  //. Retains the first element that does not satisfy the predicate,\n  //. and all subsequent elements.\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > S.dropWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [6, 3, 5, 4]\n  //.\n  //. > S.dropWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7, 6, 3, 5, 4]\n  //. ```\n  function dropWhile(pred) {\n    return function(xs) {\n      var idx = 0;\n      while (idx < xs.length && pred (xs[idx])) idx += 1;\n      return xs.slice (idx);\n    };\n  }\n  _.dropWhile = {\n    consts: {},\n    types: [$.Predicate (a), $.Array (a), $.Array (a)],\n    impl: dropWhile\n  };\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.size ([])\n  //. 0\n  //.\n  //. > S.size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > S.size (Nil)\n  //. 0\n  //.\n  //. > S.size (Cons ('foo') (Cons ('bar') (Cons ('baz') (Nil))))\n  //. 3\n  //.\n  //. > S.size (S.Nothing)\n  //. 0\n  //.\n  //. > S.size (S.Just ('quux'))\n  //. 1\n  //.\n  //. > S.size (S.Pair ('ignored!') ('counted!'))\n  //. 1\n  //. ```\n  _.size = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Integer],\n    impl: Z.size\n  };\n\n  //# all :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] all the elements of the structure satisfy the\n  //. predicate.\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > S.all (S.odd) ([])\n  //. true\n  //.\n  //. > S.all (S.odd) ([1, 3, 5])\n  //. true\n  //.\n  //. > S.all (S.odd) ([1, 2, 3])\n  //. false\n  //. ```\n  _.all = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.all)\n  };\n\n  //# any :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] any element of the structure satisfies the\n  //. predicate.\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > S.any (S.odd) ([])\n  //. false\n  //.\n  //. > S.any (S.odd) ([2, 4, 6])\n  //. false\n  //.\n  //. > S.any (S.odd) ([1, 2, 3])\n  //. true\n  //. ```\n  _.any = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.any)\n  };\n\n  //# none :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] none of the elements of the structure satisfies\n  //. the predicate.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: a -> Boolean, xs :: Foldable f => f a.\n  //.      S.none (p) (xs) = S.not (S.any (p) (xs))`\n  //.\n  //.   - `forall p :: a -> Boolean, xs :: Foldable f => f a.\n  //.      S.none (p) (xs) = S.all (S.complement (p)) (xs)`\n  //.\n  //. See also [`all`](#all) and [`any`](#any).\n  //.\n  //. ```javascript\n  //. > S.none (S.odd) ([])\n  //. true\n  //.\n  //. > S.none (S.odd) ([2, 4, 6])\n  //. true\n  //.\n  //. > S.none (S.odd) ([1, 2, 3])\n  //. false\n  //. ```\n  _.none = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.none)\n  };\n\n  //# append :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > S.append (3) ([1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > S.append (3) (Cons (1) (Cons (2) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.append ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.append ([3]) (S.Just ([1, 2]))\n  //. Just ([1, 2, 3])\n  //. ```\n  function append(x) {\n    return function(xs) {\n      return Z.append (x, xs);\n    };\n  }\n  _.append = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: append\n  };\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > S.prepend (1) ([2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > S.prepend (1) (Cons (2) (Cons (3) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.prepend ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.prepend ([1]) (S.Just ([2, 3]))\n  //. Just ([1, 2, 3])\n  //. ```\n  _.prepend = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: curry2 (Z.prepend)\n  };\n\n  //# joinWith :: String -> Array String -> String\n  //.\n  //. Joins the strings of the second argument separated by the first argument.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s) (S.splitOn (s) (t)) = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.joinWith (':') (['foo', 'bar', 'baz'])\n  //. 'foo:bar:baz'\n  //. ```\n  _.joinWith = {\n    consts: {},\n    types: [$.String, $.Array ($.String), $.String],\n    impl: invoke1 ('join')\n  };\n\n  //# elem :: (Setoid a, Foldable f) => a -> f a -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` [iff][] the value is an\n  //. element of the structure.\n  //.\n  //. See also [`find`](#find).\n  //.\n  //. ```javascript\n  //. > S.elem ('c') (['a', 'b', 'c'])\n  //. true\n  //.\n  //. > S.elem ('x') (['a', 'b', 'c'])\n  //. false\n  //.\n  //. > S.elem (3) ({x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > S.elem (8) ({x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > S.elem (0) (S.Just (0))\n  //. true\n  //.\n  //. > S.elem (0) (S.Just (1))\n  //. false\n  //.\n  //. > S.elem (0) (S.Nothing)\n  //. false\n  //. ```\n  _.elem = {\n    consts: {a: [Z.Setoid], f: [Z.Foldable]},\n    types: [a, f (a), $.Boolean],\n    impl: curry2 (Z.elem)\n  };\n\n  //# find :: Foldable f => (a -> Boolean) -> f a -> Maybe a\n  //.\n  //. Takes a predicate and a structure and returns Just the leftmost element\n  //. of the structure that satisfies the predicate; Nothing if there is no\n  //. such element.\n  //.\n  //. See also [`elem`](#elem).\n  //.\n  //. ```javascript\n  //. > S.find (S.lt (0)) ([1, -2, 3, -4, 5])\n  //. Just (-2)\n  //.\n  //. > S.find (S.lt (0)) ([1, 2, 3, 4, 5])\n  //. Nothing\n  //. ```\n  function find(pred) {\n    return function(xs) {\n      return Z.reduce (\n        function(m, x) {\n          return m.isJust ? m : pred (x) ? Just (x) : Nothing;\n        },\n        Nothing,\n        xs\n      );\n    };\n  }\n  _.find = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Maybe (a)],\n    impl: find\n  };\n\n  //# foldMap :: (Monoid m, Foldable f) => TypeRep m -> (a -> m) -> f a -> m\n  //.\n  //. Curried version of [`Z.foldMap`][]. Deconstructs a foldable by mapping\n  //. every element to a monoid and concatenating the results.\n  //.\n  //. ```javascript\n  //. > S.foldMap (String) (f => f.name) ([Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //.\n  //. > S.foldMap (Array) (x => [x + 1, x + 2]) ([10, 20, 30])\n  //. [11, 12, 21, 22, 31, 32]\n  //. ```\n  _.foldMap = {\n    consts: {b: [Z.Monoid], f: [Z.Foldable]},\n    types: [TypeRep (b), $.Fn (a) (b), f (a), b],\n    impl: curry3 (Z.foldMap)\n  };\n\n  //# unfoldr :: (b -> Maybe (Pair a b)) -> b -> Array a\n  //.\n  //. Takes a function and a seed value, and returns an array generated by\n  //. applying the function repeatedly. The array is initially empty. The\n  //. function is initially applied to the seed value. Each application\n  //. of the function should result in either:\n  //.\n  //.   - Nothing, in which case the array is returned; or\n  //.\n  //.   - Just a pair, in which case the first element is appended to\n  //.     the array and the function is applied to the second element.\n  //.\n  //. ```javascript\n  //. > S.unfoldr (n => n < 1000 ? S.Just (S.Pair (n) (2 * n)) : S.Nothing) (1)\n  //. [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]\n  //. ```\n  function unfoldr(f) {\n    return function(x) {\n      var result = [];\n      for (var m = f (x); m.isJust; m = f (m.value.snd)) {\n        result.push (m.value.fst);\n      }\n      return result;\n    };\n  }\n  _.unfoldr = {\n    consts: {},\n    types: [$.Fn (b) ($.Maybe ($.Pair (a) (b))), b, $.Array (a)],\n    impl: unfoldr\n  };\n\n  //# range :: Integer -> Integer -> Array Integer\n  //.\n  //. Returns an array of consecutive integers starting with the first argument\n  //. and ending with the second argument minus one. Returns `[]` if the second\n  //. argument is less than or equal to the first argument.\n  //.\n  //. ```javascript\n  //. > S.range (0) (10)\n  //. [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  //.\n  //. > S.range (-5) (0)\n  //. [-5, -4, -3, -2, -1]\n  //.\n  //. > S.range (0) (-5)\n  //. []\n  //. ```\n  function range(from) {\n    return function(to) {\n      var result = [];\n      for (var n = from; n < to; n += 1) result.push (n);\n      return result;\n    };\n  }\n  _.range = {\n    consts: {},\n    types: [$.Integer, $.Integer, $.Array ($.Integer)],\n    impl: range\n  };\n\n  //# groupBy :: (a -> a -> Boolean) -> Array a -> Array (Array a)\n  //.\n  //. Splits its array argument into an array of arrays of equal,\n  //. adjacent elements. Equality is determined by the function\n  //. provided as the first argument. Its behaviour can be surprising\n  //. for functions that aren't reflexive, transitive, and symmetric\n  //. (see [equivalence][] relation).\n  //.\n  //. Properties:\n  //.\n  //.   - `forall f :: a -> a -> Boolean, xs :: Array a.\n  //.      S.join (S.groupBy (f) (xs)) = xs`\n  //.\n  //. ```javascript\n  //. > S.groupBy (S.equals) ([1, 1, 2, 1, 1])\n  //. [[1, 1], [2], [1, 1]]\n  //.\n  //. > S.groupBy (x => y => x + y === 0) ([2, -3, 3, 3, 3, 4, -4, 4])\n  //. [[2], [-3, 3, 3, 3], [4, -4], [4]]\n  //. ```\n  function groupBy(f) {\n    return function(xs) {\n      if (xs.length === 0) return [];\n      var x0 = xs[0];         // :: a\n      var active = [x0];      // :: Array a\n      var result = [active];  // :: Array (Array a)\n      for (var idx = 1; idx < xs.length; idx += 1) {\n        var x = xs[idx];\n        if (f (x0) (x)) active.push (x); else result.push (active = [x0 = x]);\n      }\n      return result;\n    };\n  }\n  _.groupBy = {\n    consts: {},\n    types: [$.Fn (a) ($.Predicate (a)), $.Array (a), $.Array ($.Array (a))],\n    impl: groupBy\n  };\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > S.reverse (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Cons (3) (Cons (2) (Cons (1) (Nil)))\n  //.\n  //. > S.pipe ([S.splitOn (''), S.reverse, S.joinWith ('')]) ('abc')\n  //. 'cba'\n  //. ```\n  _.reverse = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), f (a)],\n    impl: Z.reverse\n  };\n\n  //# sort :: (Ord a, Applicative m, Foldable m, Monoid (m a)) => m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] for comparisons.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sort (S.sort (m)) = S.sort (m)` (idempotence)\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > S.sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > S.sort ([S.Left (4), S.Right (3), S.Left (2), S.Right (1)])\n  //. [Left (2), Left (4), Right (1), Right (3)]\n  //. ```\n  _.sort = {\n    consts: {a: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [m (a), m (a)],\n    impl: Z.sort\n  };\n\n  //# sortBy :: (Ord b, Applicative m, Foldable m, Monoid (m a)) => (a -> b) -> m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] to compare the values produced by applying the given function\n  //. to each element of the structure.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sortBy (f) (S.sortBy (f) (m)) = S.sortBy (f) (m)` (idempotence)\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > S.sortBy (S.prop ('rank')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 2, suit: 'hearts'},\n  //. . {rank: 5, suit: 'hearts'},\n  //. . {rank: 5, suit: 'spades'},\n  //. . {rank: 7, suit: 'spades'} ]\n  //.\n  //. > S.sortBy (S.prop ('suit')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 5, suit: 'hearts'},\n  //. . {rank: 2, suit: 'hearts'},\n  //. . {rank: 7, suit: 'spades'},\n  //. . {rank: 5, suit: 'spades'} ]\n  //. ```\n  //.\n  //. If descending order is desired, one may use [`Descending`][]:\n  //.\n  //. ```javascript\n  //. > S.sortBy (Descending) ([83, 97, 110, 99, 116, 117, 97, 114, 121])\n  //. [121, 117, 116, 114, 110, 99, 97, 97, 83]\n  //. ```\n  _.sortBy = {\n    consts: {b: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Fn (a) (b), m (a), m (a)],\n    impl: curry2 (Z.sortBy)\n  };\n\n  //# zip :: Array a -> Array b -> Array (Pair a b)\n  //.\n  //. Returns an array of pairs of corresponding elements from the given\n  //. arrays. The length of the resulting array is equal to the length of\n  //. the shorter input array.\n  //.\n  //. See also [`zipWith`](#zipWith).\n  //.\n  //. ```javascript\n  //. > S.zip (['a', 'b']) (['x', 'y', 'z'])\n  //. [Pair ('a') ('x'), Pair ('b') ('y')]\n  //.\n  //. > S.zip ([1, 3, 5]) ([2, 4])\n  //. [Pair (1) (2), Pair (3) (4)]\n  //. ```\n  _.zip = {\n    consts: {},\n    types: [$.Array (a), $.Array (b), $.Array ($.Pair (a) (b))],\n    impl: zipWith (Pair)\n  };\n\n  //# zipWith :: (a -> b -> c) -> Array a -> Array b -> Array c\n  //.\n  //. Returns the result of combining, pairwise, the given arrays using the\n  //. given binary function. The length of the resulting array is equal to the\n  //. length of the shorter input array.\n  //.\n  //. See also [`zip`](#zip).\n  //.\n  //. ```javascript\n  //. > S.zipWith (a => b => a + b) (['a', 'b']) (['x', 'y', 'z'])\n  //. ['ax', 'by']\n  //.\n  //. > S.zipWith (a => b => [a, b]) ([1, 3, 5]) ([2, 4])\n  //. [[1, 2], [3, 4]]\n  //. ```\n  function zipWith(f) {\n    return function(xs) {\n      return function(ys) {\n        var result = [];\n        var len = Math.min (xs.length, ys.length);\n        for (var idx = 0; idx < len; idx += 1) {\n          result.push (f (xs[idx]) (ys[idx]));\n        }\n        return result;\n      };\n    };\n  }\n  _.zipWith = {\n    consts: {},\n    types: [$.Fn (a) ($.Fn (b) (c)), $.Array (a), $.Array (b), $.Array (c)],\n    impl: zipWith\n  };\n\n  //. ### Object\n\n  //# prop :: String -> a -> b\n  //.\n  //. Takes a property name and an object with known properties and returns\n  //. the value of the specified property. If for some reason the object\n  //. lacks the specified property, a type error is thrown.\n  //.\n  //. For accessing properties of uncertain objects, use [`get`](#get) instead.\n  //. For accessing string map values by key, use [`value`](#value) instead.\n  //.\n  //. ```javascript\n  //. > S.prop ('a') ({a: 1, b: 2})\n  //. 1\n  //. ```\n  function prop(key) {\n    return function(x) {\n      var obj = toObject (x);\n      if (key in obj) return obj[key];\n      throw new TypeError ('‘prop’ expected object to have a property named ' +\n                           '‘' + key + '’; ' + show (x) + ' does not');\n    };\n  }\n  _.prop = {\n    consts: {},\n    types: [$.String, a, b],\n    impl: prop\n  };\n\n  //# props :: Array String -> a -> b\n  //.\n  //. Takes a property path (an array of property names) and an object with\n  //. known structure and returns the value at the given path. If for some\n  //. reason the path does not exist, a type error is thrown.\n  //.\n  //. For accessing property paths of uncertain objects, use [`gets`](#gets)\n  //. instead.\n  //.\n  //. ```javascript\n  //. > S.props (['a', 'b', 'c']) ({a: {b: {c: 1}}})\n  //. 1\n  //. ```\n  function props(path) {\n    return function(x) {\n      return path.reduce (function(x, key) {\n        var obj = toObject (x);\n        if (key in obj) return obj[key];\n        throw new TypeError ('‘props’ expected object to have a property at ' +\n                             show (path) + '; ' + show (x) + ' does not');\n      }, x);\n    };\n  }\n  _.props = {\n    consts: {},\n    types: [$.Array ($.String), a, b],\n    impl: props\n  };\n\n  //# get :: (Any -> Boolean) -> String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property name, and an object and returns Just the\n  //. value of the specified object property if it exists and the value\n  //. satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`gets`](#gets), [`prop`](#prop), and [`value`](#value).\n  //.\n  //. ```javascript\n  //. > S.get (S.is ($.Number)) ('x') ({x: 1, y: 2})\n  //. Just (1)\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({x: '1', y: '2'})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3]})\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3, null]})\n  //. Nothing\n  //. ```\n  function get(pred) {\n    return B (B (filter (pred))) (get_);\n  }\n  _.get = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, a, $.Maybe (b)],\n    impl: get\n  };\n\n  //# gets :: (Any -> Boolean) -> Array String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property path (an array of property names), and\n  //. an object and returns Just the value at the given path if such a path\n  //. exists and the value satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: 42}}})\n  //. Just (42)\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: '42'}}})\n  //. Nothing\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({})\n  //. Nothing\n  //. ```\n  function gets(pred) {\n    return function(keys) {\n      return function(x) {\n        return Z.filter (pred, keys.reduce (function(maybe, key) {\n          return Z.chain (get_ (key), maybe);\n        }, Just (x)));\n      };\n    };\n  }\n  _.gets = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.Array ($.String), a, $.Maybe (b)],\n    impl: gets\n  };\n\n  //. ### StrMap\n  //.\n  //. StrMap is an abbreviation of _string map_. A string map is an object,\n  //. such as `{foo: 1, bar: 2, baz: 3}`, whose values are all members of\n  //. the same type. Formally, a value is a member of type `StrMap a` if its\n  //. [type identifier][] is `'Object'` and the values of its enumerable own\n  //. properties are all members of type `a`.\n\n  //# value :: String -> StrMap a -> Maybe a\n  //.\n  //. Retrieve the value associated with the given key in the given string map.\n  //.\n  //. Formally, `value (k) (m)` evaluates to `Just (m[k])` if `k` is an\n  //. enumerable own property of `m`; `Nothing` otherwise.\n  //.\n  //. See also [`prop`](#prop) and [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.value ('foo') ({foo: 1, bar: 2})\n  //. Just (1)\n  //.\n  //. > S.value ('bar') ({foo: 1, bar: 2})\n  //. Just (2)\n  //.\n  //. > S.value ('baz') ({foo: 1, bar: 2})\n  //. Nothing\n  //. ```\n  function value(key) {\n    return function(strMap) {\n      return Object.prototype.propertyIsEnumerable.call (strMap, key) ?\n             Just (strMap[key]) :\n             Nothing;\n    };\n  }\n  _.value = {\n    consts: {},\n    types: [$.String, $.StrMap (a), $.Maybe (a)],\n    impl: value\n  };\n\n  //# singleton :: String -> a -> StrMap a\n  //.\n  //. Takes a string and a value of any type, and returns a string map with\n  //. a single entry (mapping the key to the value).\n  //.\n  //. ```javascript\n  //. > S.singleton ('foo') (42)\n  //. {foo: 42}\n  //. ```\n  function singleton(key) {\n    return function(val) {\n      var strMap = {};\n      strMap[key] = val;\n      return strMap;\n    };\n  }\n  _.singleton = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a)],\n    impl: singleton\n  };\n\n  //# insert :: String -> a -> StrMap a -> StrMap a\n  //.\n  //. Takes a string, a value of any type, and a string map, and returns a\n  //. string map comprising all the entries of the given string map plus the\n  //. entry specified by the first two arguments (which takes precedence).\n  //.\n  //. Equivalent to Haskell's `insert` function. Similar to Clojure's `assoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.insert ('c') (3) ({a: 1, b: 2})\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.insert ('a') (4) ({a: 1, b: 2})\n  //. {a: 4, b: 2}\n  //. ```\n  function insert(key) {\n    return function(val) {\n      return function(strMap) {\n        return Z.concat (strMap, singleton (key) (val));\n      };\n    };\n  }\n  _.insert = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a), $.StrMap (a)],\n    impl: insert\n  };\n\n  //# remove :: String -> StrMap a -> StrMap a\n  //.\n  //. Takes a string and a string map, and returns a string map comprising all\n  //. the entries of the given string map except the one whose key matches the\n  //. given string (if such a key exists).\n  //.\n  //. Equivalent to Haskell's `delete` function. Similar to Clojure's `dissoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.remove ('c') ({a: 1, b: 2, c: 3})\n  //. {a: 1, b: 2}\n  //.\n  //. > S.remove ('c') ({})\n  //. {}\n  //. ```\n  function remove(key) {\n    return function(strMap) {\n      var result = Z.concat (strMap, {});\n      delete result[key];\n      return result;\n    };\n  }\n  _.remove = {\n    consts: {},\n    types: [$.String, $.StrMap (a), $.StrMap (a)],\n    impl: remove\n  };\n\n  //# keys :: StrMap a -> Array String\n  //.\n  //. Returns the keys of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.keys ({b: 2, c: 3, a: 1}))\n  //. ['a', 'b', 'c']\n  //. ```\n  _.keys = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($.String)],\n    impl: Object.keys\n  };\n\n  //# values :: StrMap a -> Array a\n  //.\n  //. Returns the values of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.values ({a: 1, c: 3, b: 2}))\n  //. [1, 2, 3]\n  //. ```\n  function values(strMap) {\n    return Z.map (function(k) { return strMap[k]; }, Object.keys (strMap));\n  }\n  _.values = {\n    consts: {},\n    types: [$.StrMap (a), $.Array (a)],\n    impl: values\n  };\n\n  //# pairs :: StrMap a -> Array (Pair String a)\n  //.\n  //. Returns the key–value pairs of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.pairs ({b: 2, a: 1, c: 3}))\n  //. [Pair ('a') (1), Pair ('b') (2), Pair ('c') (3)]\n  //. ```\n  function pairs(strMap) {\n    return Z.map (function(k) { return Pair (k) (strMap[k]); },\n                  Object.keys (strMap));\n  }\n  _.pairs = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($.Pair ($.String) (a))],\n    impl: pairs\n  };\n\n  //# fromPairs :: Foldable f => f (Pair String a) -> StrMap a\n  //.\n  //. Returns a string map containing the key–value pairs specified by the\n  //. given [Foldable][]. If a key appears in multiple pairs, the rightmost\n  //. pair takes precedence.\n  //.\n  //. ```javascript\n  //. > S.fromPairs ([S.Pair ('a') (1), S.Pair ('b') (2), S.Pair ('c') (3)])\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.fromPairs ([S.Pair ('x') (1), S.Pair ('x') (2)])\n  //. {x: 2}\n  //. ```\n  function fromPairs(pairs) {\n    return Z.reduce (function(strMap, pair) {\n      strMap[pair.fst] = pair.snd;\n      return strMap;\n    }, {}, pairs);\n  }\n  _.fromPairs = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Pair ($.String) (a)), $.StrMap (a)],\n    impl: fromPairs\n  };\n\n  //. ### Number\n\n  //# negate :: ValidNumber -> ValidNumber\n  //.\n  //. Negates its argument.\n  //.\n  //. ```javascript\n  //. > S.negate (12.5)\n  //. -12.5\n  //.\n  //. > S.negate (-42)\n  //. 42\n  //. ```\n  function negate(n) {\n    return -n;\n  }\n  _.negate = {\n    consts: {},\n    types: [$.ValidNumber, $.ValidNumber],\n    impl: negate\n  };\n\n  //# add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.add (1) (1)\n  //. 2\n  //. ```\n  function add(x) {\n    return function(y) {\n      return x + y;\n    };\n  }\n  _.add = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: add\n  };\n\n  //# sum :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.sum ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.sum ([])\n  //. 0\n  //.\n  //. > S.sum (S.Just (42))\n  //. 42\n  //.\n  //. > S.sum (S.Nothing)\n  //. 0\n  //. ```\n  _.sum = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (add) (0)\n  };\n\n  //# sub :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _subtract `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.sub (1)) ([1, 2, 3])\n  //. [0, 1, 2]\n  //. ```\n  function sub(y) {\n    return function(x) {\n      return x - y;\n    };\n  }\n  _.sub = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: sub\n  };\n\n  //# mult :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mult (4) (2)\n  //. 8\n  //. ```\n  function mult(x) {\n    return function(y) {\n      return x * y;\n    };\n  }\n  _.mult = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: mult\n  };\n\n  //# product :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.product ([1, 2, 3, 4, 5])\n  //. 120\n  //.\n  //. > S.product ([])\n  //. 1\n  //.\n  //. > S.product (S.Just (42))\n  //. 42\n  //.\n  //. > S.product (S.Nothing)\n  //. 1\n  //. ```\n  _.product = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (mult) (1)\n  };\n\n  //# div :: NonZeroFiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a non-zero finite number `n` and returns the _divide by `n`_\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.map (S.div (2)) ([0, 1, 2, 3])\n  //. [0, 0.5, 1, 1.5]\n  //. ```\n  function div(y) {\n    return function(x) {\n      return x / y;\n    };\n  }\n  _.div = {\n    consts: {},\n    types: [$.NonZeroFiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: div\n  };\n\n  //# pow :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _power of `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.pow (2)) ([-3, -2, -1, 0, 1, 2, 3])\n  //. [9, 4, 1, 0, 1, 4, 9]\n  //.\n  //. > S.map (S.pow (0.5)) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5]\n  //. ```\n  function pow(exp) {\n    return function(base) {\n      return Math.pow (base, exp);\n    };\n  }\n  _.pow = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: pow\n  };\n\n  //# mean :: Foldable f => f FiniteNumber -> Maybe FiniteNumber\n  //.\n  //. Returns the mean of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mean ([1, 2, 3, 4, 5])\n  //. Just (3)\n  //.\n  //. > S.mean ([])\n  //. Nothing\n  //.\n  //. > S.mean (S.Just (42))\n  //. Just (42)\n  //.\n  //. > S.mean (S.Nothing)\n  //. Nothing\n  //. ```\n  function mean(foldable) {\n    var result = Z.reduce (\n      function(acc, n) {\n        acc.total += n;\n        acc.count += 1;\n        return acc;\n      },\n      {total: 0, count: 0},\n      foldable\n    );\n    return result.count > 0 ? Just (result.total / result.count) : Nothing;\n  }\n  _.mean = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.Maybe ($.FiniteNumber)],\n    impl: mean\n  };\n\n  //. ### Integer\n\n  //# even :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is even; `false` if it is odd.\n  //.\n  //. ```javascript\n  //. > S.even (42)\n  //. true\n  //.\n  //. > S.even (99)\n  //. false\n  //. ```\n  function even(n) {\n    return n % 2 === 0;\n  }\n  _.even = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: even\n  };\n\n  //# odd :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is odd; `false` if it is even.\n  //.\n  //. ```javascript\n  //. > S.odd (99)\n  //. true\n  //.\n  //. > S.odd (42)\n  //. false\n  //. ```\n  function odd(n) {\n    return n % 2 !== 0;\n  }\n  _.odd = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: odd\n  };\n\n  //. ### Parse\n\n  //# parseDate :: String -> Maybe ValidDate\n  //.\n  //. Takes a string `s` and returns `Just (new Date (s))` if `new Date (s)`\n  //. evaluates to a [`ValidDate`][ValidDate] value; Nothing otherwise.\n  //.\n  //. As noted in [#488][], this function's behaviour is unspecified for some\n  //. inputs! [MDN][date parsing] warns against using the `Date` constructor\n  //. to parse date strings:\n  //.\n  //. > __Note:__ parsing of date strings with the `Date` constructor […] is\n  //. > strongly discouraged due to browser differences and inconsistencies.\n  //. > Support for RFC 2822 format strings is by convention only. Support for\n  //. > ISO 8601 formats differs in that date-only strings (e.g. \"1970-01-01\")\n  //. > are treated as UTC, not local.\n  //.\n  //. ```javascript\n  //. > S.parseDate ('2011-01-19T17:40:00Z')\n  //. Just (new Date ('2011-01-19T17:40:00.000Z'))\n  //.\n  //. > S.parseDate ('today')\n  //. Nothing\n  //. ```\n  function parseDate(s) {\n    var date = new Date (s);\n    return isNaN (date.valueOf ()) ? Nothing : Just (date);\n  }\n  _.parseDate = {\n    consts: {},\n    types: [$.String, $.Maybe ($.ValidDate)],\n    impl: parseDate\n  };\n\n  //  requiredNonCapturingGroup :: Array String -> String\n  function requiredNonCapturingGroup(xs) {\n    return '(?:' + xs.join ('|') + ')';\n  }\n\n  //  optionalNonCapturingGroup :: Array String -> String\n  function optionalNonCapturingGroup(xs) {\n    return requiredNonCapturingGroup (xs) + '?';\n  }\n\n  //  validFloatRepr :: RegExp\n  var validFloatRepr = new RegExp (\n    '^' +                     // start-of-string anchor\n    '\\\\s*' +                  // any number of leading whitespace characters\n    '[+-]?' +                 // optional sign\n    requiredNonCapturingGroup ([\n      'Infinity',             // \"Infinity\"\n      'NaN',                  // \"NaN\"\n      requiredNonCapturingGroup ([\n        '[0-9]+',             // number\n        '[0-9]+[.][0-9]+',    // number with interior decimal point\n        '[0-9]+[.]',          // number with trailing decimal point\n        '[.][0-9]+'           // number with leading decimal point\n      ]) +\n      optionalNonCapturingGroup ([\n        '[Ee]' +              // \"E\" or \"e\"\n        '[+-]?' +             // optional sign\n        '[0-9]+'              // exponent\n      ])\n    ]) +\n    '\\\\s*' +                  // any number of trailing whitespace characters\n    '$'                       // end-of-string anchor\n  );\n\n  //# parseFloat :: String -> Maybe Number\n  //.\n  //. Takes a string and returns Just the number represented by the string\n  //. if it does in fact represent a number; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseFloat ('-123.45')\n  //. Just (-123.45)\n  //.\n  //. > S.parseFloat ('foo.bar')\n  //. Nothing\n  //. ```\n  function parseFloat_(s) {\n    return validFloatRepr.test (s) ? Just (parseFloat (s)) : Nothing;\n  }\n  _.parseFloat = {\n    consts: {},\n    types: [$.String, $.Maybe ($.Number)],\n    impl: parseFloat_\n  };\n\n  //  Radix :: Type\n  var Radix = $.NullaryType\n    ('Radix')\n    ('')\n    ([$.Integer])\n    (function(x) { return x >= 2 && x <= 36; });\n\n  //# parseInt :: Radix -> String -> Maybe Integer\n  //.\n  //. Takes a radix (an integer between 2 and 36 inclusive) and a string,\n  //. and returns Just the number represented by the string if it does in\n  //. fact represent a number in the base specified by the radix; Nothing\n  //. otherwise.\n  //.\n  //. This function is stricter than [`parseInt`][parseInt]: a string\n  //. is considered to represent an integer only if all its non-prefix\n  //. characters are members of the character set specified by the radix.\n  //.\n  //. ```javascript\n  //. > S.parseInt (10) ('-42')\n  //. Just (-42)\n  //.\n  //. > S.parseInt (16) ('0xFF')\n  //. Just (255)\n  //.\n  //. > S.parseInt (16) ('0xGG')\n  //. Nothing\n  //. ```\n  function parseInt_(radix) {\n    return function(s) {\n      var charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'.slice (0, radix);\n      var pattern = new RegExp ('^[' + charset + ']+$', 'i');\n\n      var t = s.replace (/^[+-]/, '');\n      if (pattern.test (radix === 16 ? t.replace (/^0x/i, '') : t)) {\n        var n = parseInt (s, radix);\n        if ($.test ([]) ($.Integer) (n)) return Just (n);\n      }\n      return Nothing;\n    };\n  }\n  _.parseInt = {\n    consts: {},\n    types: [Radix, $.String, $.Maybe ($.Integer)],\n    impl: parseInt_\n  };\n\n  //# parseJson :: (Any -> Boolean) -> String -> Maybe a\n  //.\n  //. Takes a predicate and a string that may or may not be valid JSON, and\n  //. returns Just the result of applying `JSON.parse` to the string *if* the\n  //. result satisfies the predicate; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[\"1\",\"2\",\"3\"]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[0,1.5,3,4.5]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[1,2,3]')\n  //. Just ([1, 2, 3])\n  //. ```\n  function parseJson(pred) {\n    return B (filter (pred)) (B (eitherToMaybe) (encase (JSON.parse)));\n  }\n  _.parseJson = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, $.Maybe (a)],\n    impl: parseJson\n  };\n\n  //. ### RegExp\n\n  //  Match :: Type\n  var Match = $.RecordType ({\n    match: $.String,\n    groups: $.Array ($.Maybe ($.String))\n  });\n\n  //  toMatch :: Array String? -> Match\n  function toMatch(ss) {\n    return {\n      match: ss[0],\n      groups: Z.map (B (reject (equals (undefined))) (Just), ss.slice (1))\n    };\n  }\n\n  //  withRegex :: (RegExp, () -> a) -> a\n  function withRegex(pattern, thunk) {\n    var lastIndex = pattern.lastIndex;\n    var result = thunk ();\n    pattern.lastIndex = lastIndex;\n    return result;\n  }\n\n  //# regex :: RegexFlags -> String -> RegExp\n  //.\n  //. Takes a [RegexFlags][] and a pattern, and returns a RegExp.\n  //.\n  //. ```javascript\n  //. > S.regex ('g') (':\\\\d+:')\n  //. /:\\d+:/g\n  //. ```\n  function regex(flags) {\n    return function(source) {\n      return new RegExp (source, flags);\n    };\n  }\n  _.regex = {\n    consts: {},\n    types: [$.RegexFlags, $.String, $.RegExp],\n    impl: regex\n  };\n\n  //# regexEscape :: String -> String\n  //.\n  //. Takes a string that may contain regular expression metacharacters,\n  //. and returns a string with those metacharacters escaped.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String.\n  //.      S.test (S.regex ('') (S.regexEscape (s))) (s) = true`\n  //.\n  //. ```javascript\n  //. > S.regexEscape ('-=*{XYZ}*=-')\n  //. '\\\\-=\\\\*\\\\{XYZ\\\\}\\\\*=\\\\-'\n  //. ```\n  function regexEscape(s) {\n    return s.replace (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  _.regexEscape = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: regexEscape\n  };\n\n  //# test :: RegExp -> String -> Boolean\n  //.\n  //. Takes a pattern and a string, and returns `true` [iff][] the pattern\n  //. matches the string.\n  //.\n  //. ```javascript\n  //. > S.test (/^a/) ('abacus')\n  //. true\n  //.\n  //. > S.test (/^a/) ('banana')\n  //. false\n  //. ```\n  function test(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() { return pattern.test (s); });\n    };\n  }\n  _.test = {\n    consts: {},\n    types: [$.RegExp, $.String, $.Boolean],\n    impl: test\n  };\n\n  //# match :: NonGlobalRegExp -> String -> Maybe { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns Just a match record if the\n  //. pattern matches the string; Nothing otherwise.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: Pattern, s :: String.\n  //.      S.head (S.matchAll (S.regex ('g') (p)) (s))\n  //.      = S.match (S.regex ('') (p)) (s)`\n  //.\n  //. See also [`matchAll`](#matchAll).\n  //.\n  //. ```javascript\n  //. > S.match (/(good)?bye/) ('goodbye')\n  //. Just ({match: 'goodbye', groups: [Just ('good')]})\n  //.\n  //. > S.match (/(good)?bye/) ('bye')\n  //. Just ({match: 'bye', groups: [Nothing]})\n  //. ```\n  function match(pattern) {\n    return function(s) {\n      return Z.map (toMatch,\n                    Z.reject (equals (null), Just (s.match (pattern))));\n    };\n  }\n  _.match = {\n    consts: {},\n    types: [$.NonGlobalRegExp, $.String, $.Maybe (Match)],\n    impl: match\n  };\n\n  //# matchAll :: GlobalRegExp -> String -> Array { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns an array of match records.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. See also [`match`](#match).\n  //.\n  //. ```javascript\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, world!')\n  //. []\n  //.\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, @foo! Hello, @bar! Hello, @baz!')\n  //. [ {match: '@foo', groups: [Just ('foo')]},\n  //. . {match: '@bar', groups: [Just ('bar')]},\n  //. . {match: '@baz', groups: [Just ('baz')]} ]\n  //. ```\n  function matchAll(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        return unfoldr (function(_) {\n          return Z.map (function(ss) {\n            return Pair (toMatch (ss)) (null);\n          }, Z.reject (equals (null), Just (pattern.exec (s))));\n        }) ([]);\n      });\n    };\n  }\n  _.matchAll = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array (Match)],\n    impl: matchAll\n  };\n\n  //. ### String\n\n  //# toUpper :: String -> String\n  //.\n  //. Returns the upper-case equivalent of its argument.\n  //.\n  //. See also [`toLower`](#toLower).\n  //.\n  //. ```javascript\n  //. > S.toUpper ('ABC def 123')\n  //. 'ABC DEF 123'\n  //. ```\n  _.toUpper = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toUpperCase')\n  };\n\n  //# toLower :: String -> String\n  //.\n  //. Returns the lower-case equivalent of its argument.\n  //.\n  //. See also [`toUpper`](#toUpper).\n  //.\n  //. ```javascript\n  //. > S.toLower ('ABC def 123')\n  //. 'abc def 123'\n  //. ```\n  _.toLower = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toLowerCase')\n  };\n\n  //# trim :: String -> String\n  //.\n  //. Strips leading and trailing whitespace characters.\n  //.\n  //. ```javascript\n  //. > S.trim ('\\t\\t foo bar \\n')\n  //. 'foo bar'\n  //. ```\n  _.trim = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('trim')\n  };\n\n  //# stripPrefix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given prefix (the first argument) if the string starts\n  //. with the prefix; Nothing otherwise.\n  //.\n  //. See also [`stripSuffix`](#stripSuffix).\n  //.\n  //. ```javascript\n  //. > S.stripPrefix ('https://') ('https://sanctuary.js.org')\n  //. Just ('sanctuary.js.org')\n  //.\n  //. > S.stripPrefix ('https://') ('http://sanctuary.js.org')\n  //. Nothing\n  //. ```\n  function stripPrefix(prefix) {\n    return function(s) {\n      var idx = prefix.length;\n      return s.slice (0, idx) === prefix ? Just (s.slice (idx)) : Nothing;\n    };\n  }\n  _.stripPrefix = {\n    consts: {},\n    types: [$.String, $.String, $.Maybe ($.String)],\n    impl: stripPrefix\n  };\n\n  //# stripSuffix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given suffix (the first argument) if the string ends\n  //. with the suffix; Nothing otherwise.\n  //.\n  //. See also [`stripPrefix`](#stripPrefix).\n  //.\n  //. ```javascript\n  //. > S.stripSuffix ('.md') ('README.md')\n  //. Just ('README')\n  //.\n  //. > S.stripSuffix ('.md') ('README')\n  //. Nothing\n  //. ```\n  function stripSuffix(suffix) {\n    return function(s) {\n      var idx = s.length - suffix.length;  // value may be negative\n      return s.slice (idx) === suffix ? Just (s.slice (0, idx)) : Nothing;\n    };\n  }\n  _.stripSuffix = {\n    consts: {},\n    types: [$.String, $.String, $.Maybe ($.String)],\n    impl: stripSuffix\n  };\n\n  //# words :: String -> Array String\n  //.\n  //. Takes a string and returns the array of words the string contains\n  //. (words are delimited by whitespace characters).\n  //.\n  //. See also [`unwords`](#unwords).\n  //.\n  //. ```javascript\n  //. > S.words (' foo bar baz ')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function words(s) {\n    var words = s.split (/\\s+/);\n    var len = words.length;\n    return words.slice (words[0] === '' ? 1 : 0,\n                        words[len - 1] === '' ? len - 1 : len);\n  }\n  _.words = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: words\n  };\n\n  //# unwords :: Array String -> String\n  //.\n  //. Takes an array of words and returns the result of joining the words\n  //. with separating spaces.\n  //.\n  //. See also [`words`](#words).\n  //.\n  //. ```javascript\n  //. > S.unwords (['foo', 'bar', 'baz'])\n  //. 'foo bar baz'\n  //. ```\n  _.unwords = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: invoke1 ('join') (' ')\n  };\n\n  //# lines :: String -> Array String\n  //.\n  //. Takes a string and returns the array of lines the string contains\n  //. (lines are delimited by newlines: `'\\n'` or `'\\r\\n'` or `'\\r'`).\n  //. The resulting strings do not contain newlines.\n  //.\n  //. See also [`unlines`](#unlines).\n  //.\n  //. ```javascript\n  //. > S.lines ('foo\\nbar\\nbaz\\n')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function lines(s) {\n    return s === '' ? []\n                    : (s.replace (/\\r\\n?/g, '\\n')).match (/^(?=[\\s\\S]).*/gm);\n  }\n  _.lines = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: lines\n  };\n\n  //# unlines :: Array String -> String\n  //.\n  //. Takes an array of lines and returns the result of joining the lines\n  //. after appending a terminating line feed (`'\\n'`) to each.\n  //.\n  //. See also [`lines`](#lines).\n  //.\n  //. ```javascript\n  //. > S.unlines (['foo', 'bar', 'baz'])\n  //. 'foo\\nbar\\nbaz\\n'\n  //. ```\n  function unlines(xs) {\n    return xs.reduce (function(s, x) { return s + x + '\\n'; }, '');\n  }\n  _.unlines = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: unlines\n  };\n\n  //# splitOn :: String -> String -> Array String\n  //.\n  //. Returns the substrings of its second argument separated by occurrences\n  //. of its first argument.\n  //.\n  //. See also [`joinWith`](#joinWith) and [`splitOnRegex`](#splitOnRegex).\n  //.\n  //. ```javascript\n  //. > S.splitOn ('::') ('foo::bar::baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  _.splitOn = {\n    consts: {},\n    types: [$.String, $.String, $.Array ($.String)],\n    impl: invoke1 ('split')\n  };\n\n  //# splitOnRegex :: GlobalRegExp -> String -> Array String\n  //.\n  //. Takes a pattern and a string, and returns the result of splitting the\n  //. string at every non-overlapping occurrence of the pattern.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s)\n  //.                 (S.splitOnRegex (S.regex ('g') (S.regexEscape (s))) (t))\n  //.      = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo, bar, baz')\n  //. ['foo', 'bar', 'baz']\n  //.\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo;bar;baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function splitOnRegex(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        var result = [];\n        var lastIndex = 0;\n        var match;\n        while ((match = pattern.exec (s)) != null) {\n          if (pattern.lastIndex === lastIndex && match[0] === '') {\n            if (pattern.lastIndex === s.length) return result;\n            pattern.lastIndex += 1;\n          } else {\n            result.push (s.slice (lastIndex, match.index));\n            lastIndex = match.index + match[0].length;\n          }\n        }\n        result.push (s.slice (lastIndex));\n        return result;\n      });\n    };\n  }\n  _.splitOnRegex = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array ($.String)],\n    impl: splitOnRegex\n  };\n\n  return create ({\n    checkTypes: typeof process === 'undefined'\n                || process == null\n                || process.env == null\n                || process.env.NODE_ENV !== 'production',\n    env: $.env\n  });\n\n}));\n\n//. [#438]:                     https://github.com/sanctuary-js/sanctuary/issues/438\n//. [#488]:                     https://github.com/sanctuary-js/sanctuary/issues/488\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [Either]:                   #either-type\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Folktale]:                 https://folktale.origamitower.com/\n//. [GIGO]:                     https://en.wikipedia.org/wiki/Garbage_in,_garbage_out\n//. [Haskell]:                  https://www.haskell.org/\n//. [Kleisli]:                  https://en.wikipedia.org/wiki/Kleisli_category\n//. [Maybe]:                    #maybe-type\n//. [Nullable]:                 v:sanctuary-js/sanctuary-def#Nullable\n//. [PureScript]:               http://www.purescript.org/\n//. [Ramda]:                    http://ramdajs.com/\n//. [RegexFlags]:               v:sanctuary-js/sanctuary-def#RegexFlags\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [ValidDate]:                v:sanctuary-js/sanctuary-def#ValidDate\n//. [`$.test`]:                 v:sanctuary-js/sanctuary-def#test\n//. [`Descending`]:             v:sanctuary-js/sanctuary-descending#Descending\n//. [`R.__`]:                   http://ramdajs.com/docs/#__\n//. [`R.bind`]:                 http://ramdajs.com/docs/#bind\n//. [`R.invoker`]:              http://ramdajs.com/docs/#invoker\n//. [`Z.alt`]:                  v:sanctuary-js/sanctuary-type-classes#alt\n//. [`Z.ap`]:                   v:sanctuary-js/sanctuary-type-classes#ap\n//. [`Z.apFirst`]:              v:sanctuary-js/sanctuary-type-classes#apFirst\n//. [`Z.apSecond`]:             v:sanctuary-js/sanctuary-type-classes#apSecond\n//. [`Z.bimap`]:                v:sanctuary-js/sanctuary-type-classes#bimap\n//. [`Z.chain`]:                v:sanctuary-js/sanctuary-type-classes#chain\n//. [`Z.chainRec`]:             v:sanctuary-js/sanctuary-type-classes#chainRec\n//. [`Z.compose`]:              v:sanctuary-js/sanctuary-type-classes#compose\n//. [`Z.concat`]:               v:sanctuary-js/sanctuary-type-classes#concat\n//. [`Z.contramap`]:            v:sanctuary-js/sanctuary-type-classes#contramap\n//. [`Z.duplicate`]:            v:sanctuary-js/sanctuary-type-classes#duplicate\n//. [`Z.empty`]:                v:sanctuary-js/sanctuary-type-classes#empty\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.extend`]:               v:sanctuary-js/sanctuary-type-classes#extend\n//. [`Z.extract`]:              v:sanctuary-js/sanctuary-type-classes#extract\n//. [`Z.filter`]:               v:sanctuary-js/sanctuary-type-classes#filter\n//. [`Z.flip`]:                 v:sanctuary-js/sanctuary-type-classes#flip\n//. [`Z.foldMap`]:              v:sanctuary-js/sanctuary-type-classes#foldMap\n//. [`Z.gt`]:                   v:sanctuary-js/sanctuary-type-classes#gt\n//. [`Z.gte`]:                  v:sanctuary-js/sanctuary-type-classes#gte\n//. [`Z.id`]:                   v:sanctuary-js/sanctuary-type-classes#id\n//. [`Z.invert`]:               v:sanctuary-js/sanctuary-type-classes#invert\n//. [`Z.join`]:                 v:sanctuary-js/sanctuary-type-classes#join\n//. [`Z.lt`]:                   v:sanctuary-js/sanctuary-type-classes#lt\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [`Z.map`]:                  v:sanctuary-js/sanctuary-type-classes#map\n//. [`Z.mapLeft`]:              v:sanctuary-js/sanctuary-type-classes#mapLeft\n//. [`Z.of`]:                   v:sanctuary-js/sanctuary-type-classes#of\n//. [`Z.promap`]:               v:sanctuary-js/sanctuary-type-classes#promap\n//. [`Z.reject`]:               v:sanctuary-js/sanctuary-type-classes#reject\n//. [`Z.sequence`]:             v:sanctuary-js/sanctuary-type-classes#sequence\n//. [`Z.traverse`]:             v:sanctuary-js/sanctuary-type-classes#traverse\n//. [`Z.zero`]:                 v:sanctuary-js/sanctuary-type-classes#zero\n//. [`show`]:                   v:sanctuary-js/sanctuary-show#show\n//. [date parsing]:             https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n//. [equivalence]:              https://en.wikipedia.org/wiki/Equivalence_relation\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [parseInt]:                 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\n//. [partial functions]:        https://en.wikipedia.org/wiki/Partial_function\n//. [ramda/ramda#683]:          https://github.com/ramda/ramda/issues/683\n//. [ramda/ramda#1413]:         https://github.com/ramda/ramda/issues/1413\n//. [ramda/ramda#1419]:         https://github.com/ramda/ramda/pull/1419\n//. [sanctuary-def]:            v:sanctuary-js/sanctuary-def\n//. [sanctuary-either]:         v:sanctuary-js/sanctuary-either\n//. [sanctuary-maybe]:          v:sanctuary-js/sanctuary-maybe\n//. [sanctuary-pair]:           v:sanctuary-js/sanctuary-pair\n//. [sanctuary-show]:           v:sanctuary-js/sanctuary-show\n//. [sanctuary-type-classes]:   v:sanctuary-js/sanctuary-type-classes\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [thrush]:                   https://github.com/raganwald-deprecated/homoiconic/blob/master/2008-10-30/thrush.markdown\n//. [total functions]:          https://en.wikipedia.org/wiki/Partial_function#Total_function\n//. [type checking]:            #type-checking\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n//. [variadic functions]:       https://en.wikipedia.org/wiki/Variadic_function\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Takes a `key` and returns a function that expects an array of objects\r\n * (containing a property equal to `key`) that finally returns an Object<K,V>\r\n * where `K` is the key name used to group all elements of `xs` and `V` is an\r\n * array of elements from `xs` matching the `key` value.\r\n *\r\n * @param {String} key\r\n * @return {function(xs: T[]): Object<K,V>}\r\n *\r\n *   Where `K` is the key name used to group all the elements of `xs`.\r\n *\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * dictGroupByKey (\"name\") (persons); //=> {John: Array[1], James: Array[3], Jack: Array[2]}\r\n *\r\n * //\r\n * // {\r\n * //   \"John\": [\r\n * //     { \"id\": 1, \"name\": \"John\" }\r\n * //   ],\r\n * //   \"James\": [\r\n * //     { \"id\": 2, \"name\": \"James\" },\r\n * //     { \"id\": 4, \"name\": \"James\" },\r\n * //     { \"id\": 6, \"name\": \"James\" }\r\n * //   ],\r\n * //   \"Jack\": [\r\n * //     { \"id\": 3, \"name\": \"Jack\" },\r\n * //     { \"id\": 5, \"name\": \"Jack\" }\r\n * //   ]\r\n * // }\r\n * //\r\n *\r\n */\r\nconst dictGroupByKey = key => S.reduce\r\n  (acc => x => ({ ...acc, [x[key]]: acc[x[key]] ? [...acc[x[key]], x] : [x] }))\r\n  ({})\r\n;\r\n\r\nexport { dictGroupByKey };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Takes a `key`, returns a function that expects an array of objects, finally\r\n * returns an object of unique keys.\r\n *\r\n * @param {String} key\r\n * @return {function(xs: T[]): Object<T<K>, Boolean<True>>}\r\n *\r\n *   Where `K` is the key value on some T and `Boolean<True>` is placeholder.\r\n *\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * dictByKey (\"name\") (persons); //=> { John: true, James: true, Jack: true }\r\n *\r\n */\r\nconst dictByKey = key => S.reduce\r\n  (acc => x => ({ ...acc, [x[key]]: true }))\r\n  ({})\r\n;\r\n\r\nexport { dictByKey };\r\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\r\n * isFalse :: a -> Boolean\r\n *\r\n * @param {*} a\r\n * @return {Boolean}\r\n */\r\nconst isFalse = a => !!a;\r\n\r\nexport { isFalse };\r\n","import { isFalse } from \"../conditions/isFalse\";\r\n\r\n/**\r\n * Removes elements of the array that evaluate to false.\r\n *\r\n * filterFalse :: [*] -> [*]\r\n *\r\n * @return {Array}\r\n */\r\nconst filterFalse = xs => Array.prototype.filter.call(xs, isFalse);\r\n\r\nexport { filterFalse };\r\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","import S from \"sanctuary\";\r\nimport { dictByKey } from \"./dictByKey\";\r\n\r\nconst keys = Object.keys;\r\n\r\n/**\r\n * @param {String} key\r\n * @return {function(xs: T[]): String[]}\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * uniqValuesByKey (\"name\") (persons); //=> [\"John\", \"James\", \"Jack\"]\r\n *\r\n */\r\nconst uniqValuesByKey = key => S.pipe([\r\n  dictByKey(key),\r\n  keys\r\n]);\r\n\r\nexport { uniqValuesByKey };\r\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar PROTOTYPE = 'prototype';\nvar Empty = function () { /* empty */ };\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var length = enumBugKeys.length;\n  var lt = '<';\n  var script = 'script';\n  var gt = '>';\n  var js = 'java' + script + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  iframe.src = String(js);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];\n  return createDict();\n};\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n\nhiddenKeys[IE_PROTO] = true;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar hide = require('../internals/hide');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  hide(ArrayPrototype, UNSCOPABLES, create(null));\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar hide = require('../internals/hide');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","module.exports = {};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          hide(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    hide(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  while (!(step = iterator.next()).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common, IS_MAP, IS_WEAK) {\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar classof = require('../internals/classof');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = String(test) !== '[object z]' ? function toString() {\n  return '[object ' + classof(this) + ']';\n} : test.toString;\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (get) {\n  return function Map() { return get(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong, true);\n","var redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\nvar ObjectPrototype = Object.prototype;\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (toString !== ObjectPrototype.toString) {\n  redefine(ObjectPrototype, 'toString', toString, { unsafe: true });\n}\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar bind = require('../internals/bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (classof(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar classof = require('../internals/classof-raw');\nvar macrotask = require('../internals/task').set;\nvar userAgent = require('../internals/user-agent');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar IS_NODE = classof(process) == 'process';\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  } else if (MutationObserver && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar path = require('../internals/path');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar classof = require('../internals/classof-raw');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar userAgent = require('../internals/user-agent');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = global.fetch;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar IS_NODE = classof(process) == 'process';\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  // correct subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var empty = function () { /* empty */ };\n  var FakePromise = (promise.constructor = {})[SPECIES] = function (exec) {\n    exec(empty, empty);\n  };\n  // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !((IS_NODE || typeof PromiseRejectionEvent == 'function')\n    && (!IS_PURE || promise['finally'])\n    && promise.then(empty) instanceof FakePromise\n    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // we can't detect it synchronously, so just check versions\n    && v8.indexOf('6.6') !== 0\n    && userAgent.indexOf('Chrome/66') === -1);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (promise, state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(promise, state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (handler = global['on' + name]) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (promise, state) {\n  task.call(global, function () {\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (promise, state) {\n  task.call(global, function () {\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, promise, state, unwrap) {\n  return function (value) {\n    fn(promise, state, value, unwrap);\n  };\n};\n\nvar internalReject = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(promise, state, true);\n};\n\nvar internalResolve = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, promise, wrapper, state),\n            bind(internalReject, promise, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(promise, wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(promise, state, false);\n    }\n  } catch (error) {\n    internalReject(promise, { done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n    } catch (error) {\n      internalReject(this, state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(this, state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, promise, state);\n    this.reject = bind(internalReject, promise, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = path[PROMISE];\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.github.io/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.github.io/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.github.io/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.github.io/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (get) {\n  return function Set() { return get(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar hide = require('../internals/hide');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      hide(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) hide(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        hide(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","/**\r\n * Adds two numbers together.\r\n *\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @return {Number} The sum of adding two numbers.\r\n */\r\nfunction add(x, y) {\r\n  if (\r\n    Object.prototype.toString.call(x) !== \"[object Number]\" ||\r\n    Object.prototype.toString.call(y) !== \"[object Number]\"\r\n  ) {\r\n    throw new TypeError(\"Supplied arg `x` or `y` is not a valid number\");\r\n  }\r\n\r\n  // try out ES6 features to see transpiled output\r\n  const a = new Promise((resolve, reject) => resolve());\r\n  const b = new Map();\r\n  const values = new Set([x, y]);\r\n\r\n  return [...values].reduce((acc, value) => acc + value, 0);\r\n}\r\n\r\nexport { add };\r\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * @param {String[]} xs\r\n * @return {String}\r\n */\r\nconst joinWithComma = xs => S.joinWith (\",\") (xs);\r\n\r\nexport { joinWithComma };\r\n","import S from \"sanctuary\";\r\nimport { EOL } from \"os\";\r\n\r\n/**\r\n * @param {String[]} xs\r\n * @return {String}\r\n */\r\nconst joinWithNewLine = xs => S.joinWith (EOL) (xs);\r\n\r\nexport { joinWithNewLine };\r\n","'use strict';\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n    if (sham) hide(RegExp.prototype[SYMBOL], 'sham', true);\n  }\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * A curried wrapper around the native `string.replace` function. Function is\r\n * extracted from the sanctuary.js docs.\r\n *\r\n * Does not truncate whitespace.\r\n *\r\n * replaceString :: (String -> (String -> String)) -> String\r\n *\r\n * @see {https://sanctuary.js.org/#curry3}\r\n * @see {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace}\r\n * @example\r\n *\r\n * replaceString (\"bar\") (\"\") (\"foo bar baz\"); //=> \"foo  bar\" (note the double space)\r\n * replaceString (/a/gi) (\"\") (\"foo bar baz\"); //=> \"foo br bz\"\r\n *\r\n */\r\nconst replaceString = S.curry3(function(replace, replacer, replacee) {\r\n  return String.prototype.replace.call(replacee, replace, replacer);\r\n});\r\n\r\nexport { replaceString };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * @param {String} x\r\n * @return {String}\r\n * @example\r\n *\r\n * removeCommas(\"hello,world\"); //=> \"helloworld\"\r\n * removeCommas(\"hello, world\"); //=> \"hello world\"\r\n * removeCommas(\"a,b,c\"); //=> abc\r\n *\r\n */\r\nconst removeCommas = x => replaceString (/,/g) (\"\") (x);\r\n\r\nexport { removeCommas };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * Truncates contiguous ASCII 32 `SPACE` chars into one.\r\n *\r\n * truncateSpace :: String -> String\r\n *\r\n * @return {String}\r\n * @see {@link https://stackoverflow.com/a/7151225/1727232}\r\n * @see {@link https://stackoverflow.com/a/1279878/1727232}\r\n * @example truncateSpace (\"hello   world\"); //=> \"hello world\"\r\n */\r\nconst truncateSpace = replaceString (/ {2,}/g) (\" \");\r\n\r\nexport { truncateSpace };\r\n","import S from \"sanctuary\";\r\n\r\nimport { replaceString } from \"./replaceString\";\r\nimport { truncateSpace } from \"./truncateSpace\";\r\n\r\n/**\r\n * Replaces all occurrences of commas with a single space ensuring to truncate\r\n * two or more resulting adjacent spaces to a single space.\r\n *\r\n * In practice, this means that a comma at the beginning or the end of a\r\n * string will be replaced with a whitespace but will not be trimmed.\r\n *\r\n * replaceCommaWithWhitespace :: String -> String\r\n *\r\n * @type {*|*[]}\r\n * @example\r\n *\r\n * replaceCommaWithWhitespace(\"hello,,, world\"); //=> \"hello world\"\r\n * replaceCommaWithWhitespace(\",hello, world\"); //=> \" hello world\"\r\n * replaceCommaWithWhitespace(\"hello, world,\"); //=> \"hello world \"\r\n * replaceCommaWithWhitespace(\",hello,world,\"); //=> \" hello world \"\r\n *\r\n */\r\nconst replaceCommaWithWhitespace = S.pipe([\r\n  replaceString(/,/g)(\" \"),\r\n  truncateSpace\r\n]);\r\n\r\nexport { replaceCommaWithWhitespace };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Returns array of substrings resulting from splitting the original string\r\n * wherever a comma was found.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitComma (\"foo,bar,baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitComma (\"foo, bar, baz\"); //=> [\"foo\", \" bar\", \" baz\"]\r\n * splitComma (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitComma = S.splitOn (\",\"); // String -> [String]\r\n\r\nexport { splitComma };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Returns array of substrings resulting from splitting the original string\r\n * wherever a comma was found.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitCommaRegex (\"foo,bar,baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitCommaRegex (\"foo, bar, baz\"); //=> [\"foo\", \" bar\", \" baz\"]\r\n * splitCommaRegex (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitCommaRegex = S.splitOnRegex(/,/g);\r\n\r\nexport { splitCommaRegex };\r\n","import S from 'sanctuary'\r\n\r\n/**\r\n * Breaks apart a string into an array of substrings wherever newline\r\n * chars are found - these are `\\r\\n` and `\\n`.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitNewLines (\"hello \\n world\"); //=> [\"hello \", \" world\"]\r\n * splitNewLines (\"hello \\r\\n world\"); //=> [\"hello \", \" world\"]\r\n * splitNewLines (\"hello \\n \\n \\n world\"); //=> [\"hello \", \" \", \" \", \" world\"]\r\n * splitNewLines (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitNewLines = S.splitOnRegex (/\\r\\n|\\n/g);\r\n\r\nexport { splitNewLines }\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever the ASCII 32\r\n * `SPACE` character is found.\r\n *\r\n * splitSpace :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitSpace (\"foo bar baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitSpace (\"hello   world\"); //=> [\"hello\", \"\", \"\", \"world\"]\r\n * splitSpace (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitSpace = S.splitOn(\" \");\r\n\r\nexport { splitSpace };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever the ASCII 32\r\n * `SPACE` character is found.\r\n *\r\n * splitSpaceRegex :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitSpaceRegex (\"foo bar baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitSpaceRegex (\"hello   world\"); //=> [\"hello\", \"\", \"\", \"world\"]\r\n * splitSpaceRegex (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitSpaceRegex = S.splitOnRegex (/ /g);\r\n\r\nexport { splitSpaceRegex };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever whitespace\r\n * characters are found.\r\n *\r\n * This corresponds to all whitespace characters represented by the `\\s`\r\n * metacharacter in regex.\r\n * - see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\r\n *\r\n * splitWhitespace :: String -> [String]\r\n *\r\n * @return {String}\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\r\n * @see All examples from @{splitSpace} and @{splitSpaceRegex} work in\r\n *   addition to all the remaining forms of whitespace characters.\r\n *\r\n * @example\r\n *\r\n * splitWhitespace (\"hello \\t world\"); //=> \"hello\", \"\", \"\", \"world\"\r\n *\r\n */\r\nconst splitWhitespace = S.splitOnRegex(/\\s/g);\r\n\r\nexport { splitWhitespace };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * Truncates all whitespace chars to a single space char.\r\n *\r\n * truncateWhitespace :: String -> String\r\n *\r\n * @return {String}\r\n * @see {@link https://stackoverflow.com/a/1279874/1727232}\r\n * @example\r\n *\r\n * truncateWhitespace (\"hello   world\"); //=> \"hello world\"\r\n * truncateWhitespace (\"foo \\t \\v bar\"); //=> \"foo bar\"\r\n */\r\nconst truncateWhitespace = replaceString (/\\s+/g) (\" \");\r\n\r\nexport { truncateWhitespace };\r\n","/**\r\n * @param {*} x\r\n * @return {String}\r\n * @example\r\n *\r\n * getPrototype({});        //=> \"[object Object]\"\r\n * getPrototype([]);        //=> \"[object Array]\"\r\n * getPrototype(7);         //=> \"[object Number]\"\r\n * getPrototype(\"\");        //=> \"[object String]\"\r\n * getPrototype(true);      //=> \"[object Boolean]\"\r\n * getPrototype(false);     //=> \"[object Boolean]\"\r\n * getPrototype(null);      //=> \"[object Null]\"\r\n * getPrototype(undefined); //=> \"[object Undefined]\"\r\n * getPrototype(void 0);    //=> \"[object Undefined]\"\r\n * getPrototype();          //=> \"[object Undefined]\"\r\n *\r\n */\r\nconst getPrototype = x => Object.prototype.toString.call(x);\r\n\r\nexport { getPrototype };\r\n"],"names":["empty","x","identity","set","get","has","O","check","it","Math","globalThis","window","self","global","Function","exec","error","fails","Object","defineProperty","a","nativePropertyIsEnumerable","propertyIsEnumerable","getOwnPropertyDescriptor","call","1","V","descriptor","this","enumerable","bitmap","value","configurable","writable","toString","slice","split","classof","undefined","TypeError","IndexedObject","requireObjectCoercible","input","PREFERRED_STRING","isObject","fn","val","valueOf","hasOwnProperty","key","document","EXISTS","createElement","DESCRIPTORS","nativeGetOwnPropertyDescriptor","P","toIndexedObject","toPrimitive","IE8_DOM_DEFINE","createPropertyDescriptor","propertyIsEnumerableModule","f","String","nativeDefineProperty","Attributes","anObject","object","definePropertyModule","hide","store","setGlobal","module","push","version","mode","copyright","shared","WeakMap","test","nativeFunctionToString","id","postfix","random","keys","uid","NATIVE_WEAK_MAP","wmget","wmhas","wmset","metadata","STATE","sharedKey","hiddenKeys","objectHas","enforce","getterFor","TYPE","state","type","getInternalState","InternalStateModule","enforceInternalState","TEMPLATE","options","unsafe","simple","noTargetGet","source","join","prototype","require$$0","aFunction","variable","namespace","method","arguments","length","path","ceil","floor","argument","isNaN","min","toInteger","max","createMethod","IS_INCLUDES","$this","el","fromIndex","toLength","index","integer","toAbsoluteIndex","indexOf","includes","names","i","result","enumBugKeys","concat","getOwnPropertyNames","internalObjectKeys","getOwnPropertySymbols","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","target","ownKeys","getOwnPropertyDescriptorModule","replacement","isForced","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","forced","copyConstructorProperties","sham","redefine","Array","isArray","arg","propertyKey","Symbol","name","NATIVE_SYMBOL","SPECIES","wellKnownSymbol","originalArray","C","constructor","METHOD_NAME","array","foo","Boolean","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","arrayMethodHasSpeciesSupport","isConcatSpreadable","spreadable","proto","k","len","E","toObject","A","arraySpeciesCreate","n","createProperty","$$show","seen","entry","o","show","JSON","stringify","NaN","toISOString","message","map","sort","filter","pop","$$type","pattern","RegExp","parse","s","groups","Number","__doctest","require","List","Maybe","Nil","Cons","Nothing","Just","concat_","xs","ys","constant","y","forEachKey","strMap","forEach","pair","sameType","sortedKeys","unary","iterationNext","done","iterationDone","TypeClass","url","dependencies","every","d","Constructor","Value","_funcPath","allowInheritedProps","_x","idx","funcPath","implPath","implementations","functionName","match","$","_name","requirements","getBoundMethod","typeRep","m","bind","typeClass","methods","reduce","Setoid","equals","Ord","lte","Semigroupoid","compose","Category","Semigroup","Monoid","Group","invert","Filterable","Functor","Bifunctor","bimap","Profunctor","promap","Apply","ap","Applicative","of","Chain","chain","ChainRec","chainRec","Monad","Alt","alt","Plus","zero","Alternative","Foldable","Traversable","traverse","Extend","extend","Comonad","extract","Contravariant","contramap","Array$of","Array$prototype$equals","other","Array$prototype$lte","Array$prototype$concat","Object$prototype$concat","assign","$pairs","Null","fantasy-land/equals","fantasy-land/lte","Undefined","Date","ignoreCase","multiline","sticky","unicode","fantasy-land/empty","fantasy-land/concat","fantasy-land/of","fantasy-land/chainRec","nil","todo","head","tail","more","steps","step","fantasy-land/zero","fantasy-land/filter","pred","fantasy-land/map","fantasy-land/ap","fs","idx2","fantasy-land/chain","fantasy-land/alt","fantasy-land/reduce","initial","acc","fantasy-land/traverse","go","lift2","fantasy-land/extend","_","Arguments","Error","theseKeys","otherKeys","shift","z","applicative","v","singleton","fantasy-land/id","fantasy-land/compose","semigroupoid","functor","fantasy-land/promap","g","profunctor","apply","fantasy-land/contramap","contravariant","some","p","lt","filterable","bifunctor","applyF","applyX","chain_","foldable","any","b","sortBy","rs","fx","lte_","r","F","traversable","extend_","gt","gte","clamp","lower","upper","group","reject","flip","thrush","mapLeft","lift3","apFirst","apSecond","append","prepend","size","all","none","elem","foldMap","monoid","reverse","takeWhile","take","dropWhile","sequence","duplicate","comonad","Z","S","EitherType","BinaryType","Either","e","isLeft","env","Unknown","create","checkTypes","Left$prototype","isRight","@@show","Left$prototype$show","fantasy-land/bimap","Left","Right$prototype","Right$prototype$show","Right","util","require$$2","inspect","custom","left","Left$prototype$equals","Left$prototype$lte","Left$prototype$concat","right","Right$prototype$equals","Right$prototype$lte","Right$prototype$concat","next","tag","either","require$$1","MAX_SAFE_INTEGER","pow","MIN_SAFE_INTEGER","B","I","K","W","always2","complement","init","isEmpty","isPrefix","candidate","joinWith","separator","ss","last","memberOf","or","prop","field","record","sizeEq","strRepeat","times","c","toArray","toMarkdownList","trimTrailingSpaces","when","bool","wrap","prefix","suffix","parenthesize","q","stripNamespace","_test","recur","t","supertypes","Type$prototype","@@type","validate","test2","propPath","types","extractors","format","_Type","arity","tuples","_extractors","tuple","outer","inner","BINARY","FUNCTION","INCONSISTENT","NO_ARGUMENTS","NULLARY","RECORD","UNARY","UNKNOWN","VARIABLE","Inconsistent","NoArguments","arityGte","typeEq","typeofEq","typeof_","functionUrl","NullaryTypeWithUrl","NullaryType","UnaryTypeWithUrl","UnaryType","BinaryTypeWithUrl","Any","AnyFunction","Array_","Array0","Array1","Array2","array2","Boolean_","Date_","ValidDate","Descending","Either_","Error_","Fn","$1","$2","Function_","HtmlElement","Identity","NonEmpty","Nullable","nullable","Number_","nonZero","positive","negative","PositiveNumber","NegativeNumber","ValidNumber","NonZeroValidNumber","FiniteNumber","isFinite","NonZeroFiniteNumber","PositiveFiniteNumber","NegativeFiniteNumber","Integer","NonZeroInteger","NonNegativeInteger","PositiveInteger","NegativeInteger","Object_","Pair","fst","snd","RegExp_","GlobalRegExp","NonGlobalRegExp","StrMap","String_","RegexFlags","Symbol_","Type","Unchecked","production","process","NODE_ENV","numbers","numArgs","expandUnknown","extractor","_determineActualTypes","values","expandUnknown4","seen$","expandUnknown2","fromUnaryType","fromBinaryType","isConsistent","determineActualTypesLoose","updateTypeVarMap","typeVarMap","typeVar","$typeVarMap","typeVarName","$entry","valuesByPath","isValid","expandUnknownStrict","expandUnknownStrict2","satisfactoryTypes","typeInfo","expType","invalidValue","constraints","typeClasses","typeClassConstraintViolation","typeVarMap$","okTypes","typeVarConstraintViolation","offset","$1s","$2s","_1","_2","RecordType","fields","reprs","missing","typeVarPred","test1","invalidArgumentsCount","numArgsExpected","args","underline","index_","constraintsRepr","$reprs","typeVarNames","showTypeWith","code","charCodeAt","fromCharCode","showValuesAndTypes","pos","showType","typeSignature","_underline","formatType3","underlineConstraint","formatType5","st","formatType4","carets","label","delta","counter","resolvePropPath","formatType6","indexedPropPath","propPath_","indexedPropPath_","see","tvn","tc","values_","determineActualTypesStrict","underlinedTypeVars","paths","underlineTypeVars","$valuesByPath","invalidArgumentsLength","assertRight","defTypes","opts","def","expTypes","impl","wrapFunctionCond","_typeVarMap","checkValue","output","wrapped","wrapNext","_values","withTypeChecking","fromUncheckedUnaryType","typeConstructor","fromUncheckedBinaryType","EnumType","NamedRecordType","TypeVariable","UnaryTypeVariable","BinaryTypeVariable","Thunk","Predicate","require$$3","require$$4","MaybeType","isJust","Nothing$prototype","isNothing","Nothing$prototype$show","Just$prototype","Just$prototype$show","just","Just$prototype$equals","Just$prototype$lte","Just$prototype$concat","maybe","PairType","Pair$prototype$show","fantasy-land/extract","Pair$prototype$equals","Pair$prototype$lte","Pair$prototype$concat","Pair$prototype$ap","Pair$prototype$chain","iterator","swap","Sum","S_","require$$7","get_","obj","invoke0","invoke1","w","TypeRep","Options","is","consts","unchecked","T","curry2","curry3","curry4","maybe_","thunk","justs","maybes","l","encase","err","eitherToMaybe","not","ifElse","_takeDrop","arrayCase","generalCase","curry5","pipe","pipeK","on","fromMaybe","fromMaybe_","maybeToNullable","mapMaybe","maybeToEither","fromEither","lefts","rights","tagBy","and","boolean","unless","drop","unfoldr","zipWith","add","mult","requiredNonCapturingGroup","takeLast","dropLast","find","range","from","to","groupBy","x0","active","zip","props","gets","insert","remove","pairs","fromPairs","negate","sum","sub","product","div","exp","base","mean","total","count","even","odd","parseDate","date","validFloatRepr","parseFloat","Radix","parseInt","radix","charset","parseJson","Match","toMatch","withRegex","lastIndex","regex","flags","regexEscape","matchAll","toUpper","toLower","trim","stripPrefix","stripSuffix","words","unwords","lines","unlines","splitOn","splitOnRegex","require$$5","require$$6","dictGroupByKey","dictByKey","that","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","specificCreate","boundFunction","$filter","findIndex","isFalse","filterFalse","FAILS_ON_PRIMITIVES","nativeKeys","uniqValuesByKey","defineProperties","Properties","objectKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","documentCreateElement","style","display","html","appendChild","src","contentWindow","open","write","close","UNSCOPABLES","ArrayPrototype","IteratorPrototype","PrototypeOfArrayIteratorPrototype","arrayIterator","getPrototypeOf","ObjectPrototype","CORRECT_PROTOTYPE_GETTER","ITERATOR","BUGGY_SAFARI_ITERATORS","TO_STRING_TAG","TAG","returnThis","setPrototypeOf","setter","CORRECT_SETTER","aPossiblePrototype","__proto__","IteratorsCore","Iterable","NAME","IteratorConstructor","DEFAULT","IS_SET","FORCED","setToStringTag","Iterators","createIteratorConstructor","CurrentIteratorPrototype","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","setInternalState","defineIterator","iterated","kind","addToUnscopables","isExtensible","preventExtensions","METADATA","setMetadata","objectID","weakData","meta","REQUIRED","fastKey","getWeakData","onFreeze","FREEZING","CORRECT_ARGUMENTS","classofRaw","tryGet","callee","ENTRIES","returnMethod","Result","stopped","iterable","AS_ENTRIES","IS_ITERATOR","iterFn","getIteratorMethod","callWithSafeIterationClosing","stop","SAFE_CLOSING","called","iteratorWithReturn","return","SKIP_CLOSING","ITERATION_SUPPORT","CONSTRUCTOR_NAME","wrapper","common","IS_WEAK","NativeConstructor","NativePrototype","ADDER","exported","fixMethod","nativeMethod","getConstructor","InternalMetadataModule","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","checkCorrectnessOfIteration","BUGGY_ZERO","$instance","dummy","anInstance","Wrapper","NewTarget","NewTargetPrototype","inheritIfRequired","iterate","clear","setStrong","internalStateGetterFor","first","define","previous","getEntry","removed","redefineAll","delete","prev","ITERATOR_NAME","getInternalCollectionState","getInternalIteratorState","setSpecies","collection","collectionStrong","defer","channel","port","Promise","location","setImmediate","clearImmediate","MessageChannel","Dispatch","queue","run","runner","listener","event","post","postMessage","protocol","host","nextTick","now","port2","port1","onmessage","addEventListener","importScripts","removeChild","setTimeout","flush","notify","toggle","node","promise","then","macrotask","MutationObserver","WebKitMutationObserver","IS_NODE","queueMicrotaskDescriptor","queueMicrotask","parent","domain","exit","enter","userAgent","createTextNode","observe","characterData","resolve","Internal","OwnPromiseCapability","PromiseWrapper","nativeThen","task","PromiseCapability","$$resolve","$$reject","promiseCapability","newPromiseCapability","PROMISE","getInternalPromiseState","PromiseConstructor","NativePromise","$fetch","fetch","versions","v8","newPromiseCapabilityModule","newGenericPromiseCapability","DISPATCH_EVENT","createEvent","dispatchEvent","FakePromise","PromiseRejectionEvent","INCORRECT_ITERATION","isThenable","isReject","notified","reactions","microtask","ok","exited","reaction","handler","fail","rejection","onHandleUnhandled","onUnhandled","reason","initEvent","console","hostReportErrors","isUnhandled","perform","emit","unwrap","internalReject","internalResolve","executor","onFulfilled","onRejected","defaultConstructor","speciesConstructor","catch","promiseResolve","capability","$promiseResolve","remaining","alreadyCalled","race","dotAll","RegExpPrototype","nativeToString","NOT_GENERIC","INCORRECT_NAME","R","rf","CONVERT_TO_STRING","second","position","charAt","codeAt","point","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","ArrayValues","ArrayIteratorMethods","COLLECTION_NAME","DOMIterables","Collection","CollectionPrototype","_toConsumableArray","Set","re1","re2","joinWithComma","joinWithNewLine","EOL","nativeExec","nativeReplace","patchedExec","UPDATES_LAST_INDEX_WRONG","NPCG_INCLUDED","str","reCopy","re","regexpFlags","REPLACE_SUPPORTS_NAMED_GROUPS","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","regexpExec","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","regexp","arg2","forceStringMethod","stringMethod","regexMethod","REPLACE","maybeCallNative","searchValue","replaceValue","replacer","res","rx","functionalReplace","fullUnicode","results","regExpExec","advanceStringIndex","accumulatedResult","nextSourcePosition","matched","captures","j","namedCaptures","replacerArgs","getSubstitution","tailPos","symbols","ch","capture","replaceString","replacee","removeCommas","truncateSpace","replaceCommaWithWhitespace","splitComma","splitCommaRegex","splitNewLines","splitSpace","splitSpaceRegex","splitWhitespace","truncateWhitespace","getPrototype"],"mappings":"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"}