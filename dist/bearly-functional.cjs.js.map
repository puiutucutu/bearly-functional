{"version":3,"file":"bearly-functional.cjs.js","sources":["../src/conditions/empty.js","../src/conditions/identity.js","../node_modules/core-js/internals/global.js","../node_modules/core-js/internals/fails.js","../node_modules/core-js/internals/descriptors.js","../node_modules/core-js/internals/object-property-is-enumerable.js","../node_modules/core-js/internals/create-property-descriptor.js","../node_modules/core-js/internals/classof-raw.js","../node_modules/core-js/internals/indexed-object.js","../node_modules/core-js/internals/require-object-coercible.js","../node_modules/core-js/internals/to-indexed-object.js","../node_modules/core-js/internals/is-object.js","../node_modules/core-js/internals/to-primitive.js","../node_modules/core-js/internals/has.js","../node_modules/core-js/internals/document-create-element.js","../node_modules/core-js/internals/ie8-dom-define.js","../node_modules/core-js/internals/object-get-own-property-descriptor.js","../node_modules/core-js/internals/an-object.js","../node_modules/core-js/internals/object-define-property.js","../node_modules/core-js/internals/hide.js","../node_modules/core-js/internals/set-global.js","../node_modules/core-js/internals/is-pure.js","../node_modules/core-js/internals/shared.js","../node_modules/core-js/internals/function-to-string.js","../node_modules/core-js/internals/native-weak-map.js","../node_modules/core-js/internals/uid.js","../node_modules/core-js/internals/shared-key.js","../node_modules/core-js/internals/hidden-keys.js","../node_modules/core-js/internals/internal-state.js","../node_modules/core-js/internals/redefine.js","../node_modules/core-js/internals/path.js","../node_modules/core-js/internals/get-built-in.js","../node_modules/core-js/internals/to-integer.js","../node_modules/core-js/internals/to-length.js","../node_modules/core-js/internals/to-absolute-index.js","../node_modules/core-js/internals/array-includes.js","../node_modules/core-js/internals/object-keys-internal.js","../node_modules/core-js/internals/enum-bug-keys.js","../node_modules/core-js/internals/object-get-own-property-names.js","../node_modules/core-js/internals/object-get-own-property-symbols.js","../node_modules/core-js/internals/own-keys.js","../node_modules/core-js/internals/copy-constructor-properties.js","../node_modules/core-js/internals/is-forced.js","../node_modules/core-js/internals/export.js","../node_modules/core-js/internals/is-array.js","../node_modules/core-js/internals/to-object.js","../node_modules/core-js/internals/create-property.js","../node_modules/core-js/internals/native-symbol.js","../node_modules/core-js/internals/well-known-symbol.js","../node_modules/core-js/internals/array-species-create.js","../node_modules/core-js/internals/array-method-has-species-support.js","../node_modules/core-js/modules/es.array.concat.js","../node_modules/sanctuary-show/index.js","../node_modules/sanctuary-type-identifiers/index.js","../node_modules/sanctuary-def/node_modules/sanctuary-either/node_modules/sanctuary-type-classes/index.js","../node_modules/sanctuary-def/node_modules/sanctuary-either/index.js","../node_modules/sanctuary-type-classes/index.js","../node_modules/sanctuary-def/index.js","../node_modules/sanctuary-either/index.js","../node_modules/sanctuary-maybe/index.js","../node_modules/sanctuary-pair/index.js","../node_modules/sanctuary/index.js","../src/data/dictGroupByKey.js","../src/data/dictByKey.js","../node_modules/core-js/internals/a-function.js","../node_modules/core-js/internals/bind-context.js","../node_modules/core-js/internals/array-iteration.js","../node_modules/core-js/modules/es.array.filter.js","../src/conditions/isFalse.js","../src/data/filterFalse.js","../node_modules/core-js/internals/object-keys.js","../node_modules/core-js/modules/es.object.keys.js","../src/data/uniqValuesByKey.js","../node_modules/core-js/internals/object-define-properties.js","../node_modules/core-js/internals/html.js","../node_modules/core-js/internals/object-create.js","../node_modules/core-js/internals/add-to-unscopables.js","../node_modules/core-js/internals/iterators.js","../node_modules/core-js/internals/correct-prototype-getter.js","../node_modules/core-js/internals/object-get-prototype-of.js","../node_modules/core-js/internals/iterators-core.js","../node_modules/core-js/internals/set-to-string-tag.js","../node_modules/core-js/internals/create-iterator-constructor.js","../node_modules/core-js/internals/a-possible-prototype.js","../node_modules/core-js/internals/object-set-prototype-of.js","../node_modules/core-js/internals/define-iterator.js","../node_modules/core-js/modules/es.array.iterator.js","../node_modules/core-js/internals/freezing.js","../node_modules/core-js/internals/internal-metadata.js","../node_modules/core-js/internals/is-array-iterator-method.js","../node_modules/core-js/internals/classof.js","../node_modules/core-js/internals/get-iterator-method.js","../node_modules/core-js/internals/call-with-safe-iteration-closing.js","../node_modules/core-js/internals/iterate.js","../node_modules/core-js/internals/an-instance.js","../node_modules/core-js/internals/check-correctness-of-iteration.js","../node_modules/core-js/internals/inherit-if-required.js","../node_modules/core-js/internals/collection.js","../node_modules/core-js/internals/redefine-all.js","../node_modules/core-js/internals/set-species.js","../node_modules/core-js/internals/collection-strong.js","../node_modules/core-js/modules/es.map.js","../node_modules/core-js/internals/object-to-string.js","../node_modules/core-js/modules/es.object.to-string.js","../node_modules/core-js/internals/native-promise-constructor.js","../node_modules/core-js/internals/species-constructor.js","../node_modules/core-js/internals/task.js","../node_modules/core-js/internals/user-agent.js","../node_modules/core-js/internals/microtask.js","../node_modules/core-js/internals/new-promise-capability.js","../node_modules/core-js/internals/promise-resolve.js","../node_modules/core-js/internals/host-report-errors.js","../node_modules/core-js/internals/perform.js","../node_modules/core-js/modules/es.promise.js","../node_modules/core-js/internals/regexp-flags.js","../node_modules/core-js/modules/es.regexp.to-string.js","../node_modules/core-js/modules/es.set.js","../node_modules/core-js/internals/string-multibyte.js","../node_modules/core-js/modules/es.string.iterator.js","../node_modules/core-js/internals/dom-iterables.js","../node_modules/core-js/modules/web.dom-collections.iterator.js","../src/math/add.js","../src/strings/joinWithComma.js","../src/strings/joinWithNewLine.js","../node_modules/core-js/internals/regexp-exec.js","../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","../node_modules/core-js/internals/advance-string-index.js","../node_modules/core-js/internals/regexp-exec-abstract.js","../node_modules/core-js/modules/es.string.replace.js","../src/strings/replaceString.js","../src/strings/removeCommas.js","../src/strings/truncateSpace.js","../src/strings/replaceCommaWithWhitespace.js","../src/strings/splitComma.js","../src/strings/splitCommaRegex.js","../src/strings/splitNewLines.js","../src/strings/splitSpace.js","../src/strings/splitSpaceRegex.js","../src/strings/splitWhitespace.js","../src/strings/truncateWhitespace.js","../src/utils/getPrototype.js"],"sourcesContent":["const empty = x => !!x; // a -> Boolean\r\n\r\nexport { empty };\r\n","const identity = x => x; // a -> a\r\n\r\nexport { identity };\r\n","var O = 'object';\nvar check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == O && globalThis) ||\n  check(typeof window == O && window) ||\n  check(typeof self == O && self) ||\n  check(typeof global == O && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar hide = require('../internals/hide');\n\nmodule.exports = function (key, value) {\n  try {\n    hide(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","module.exports = false;\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\nvar IS_PURE = require('../internals/is-pure');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.2.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var shared = require('../internals/shared');\n\nmodule.exports = shared('native-function-to-string', Function.toString);\n","var global = require('../internals/global');\nvar nativeFunctionToString = require('../internals/function-to-string');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar hide = require('../internals/hide');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    hide(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hide = require('../internals/hide');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar nativeFunctionToString = require('../internals/function-to-string');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(nativeFunctionToString).split('toString');\n\nshared('inspectSource', function (it) {\n  return nativeFunctionToString.call(it);\n});\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else hide(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);\n});\n","module.exports = require('../internals/global');\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      hide(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar Symbol = global.Symbol;\nvar store = shared('wks');\n\nmodule.exports = function (name) {\n  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]\n    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  return !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\nvar IS_CONCAT_SPREADABLE_SUPPORT = !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","//. # sanctuary-show\n//.\n//. Haskell has a `show` function which can be applied to a compatible value to\n//. produce a descriptive string representation of that value. The idea is that\n//. the string representation should, if possible, be an expression which would\n//. produce the original value if evaluated.\n//.\n//. This library provides a similar [`show`](#show) function.\n//.\n//. In general, this property should hold: `eval (show (x)) = x`. In some cases\n//. parens are necessary to ensure correct interpretation (`{}`, for example,\n//. is an empty block rather than an empty object in some contexts). Thus the\n//. property is more accurately stated `eval ('(' + show (x) + ')') = x`.\n//.\n//. One can make values of a custom type compatible with [`show`](#show) by\n//. defining a `@@show` method. For example:\n//.\n//. ```javascript\n//. //# Maybe#@@show :: Maybe a ~> () -> String\n//. //.\n//. //. ```javascript\n//. //. > show (Nothing)\n//. //. 'Nothing'\n//. //.\n//. //. > show (Just (['foo', 'bar', 'baz']))\n//. //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n//. //. ```\n//. Maybe.prototype['@@show'] = function() {\n//.   return this.isNothing ? 'Nothing' : 'Just (' + show (this.value) + ')';\n//. };\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryShow = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$show :: String\n  var $$show = '@@show';\n\n  //  seen :: Array Any\n  var seen = [];\n\n  //  entry :: Object -> String -> String\n  function entry(o) {\n    return function(k) {\n      return show(k) + ': ' + show(o[k]);\n    };\n  }\n\n  //# show :: Showable a => a -> String\n  //.\n  //. Returns a useful string representation of the given value.\n  //.\n  //. Dispatches to the value's `@@show` method if present.\n  //.\n  //. Where practical, `show (eval ('(' + show (x) + ')')) = show (x)`.\n  //.\n  //. ```javascript\n  //. > show (null)\n  //. 'null'\n  //.\n  //. > show (undefined)\n  //. 'undefined'\n  //.\n  //. > show (true)\n  //. 'true'\n  //.\n  //. > show (new Boolean (false))\n  //. 'new Boolean (false)'\n  //.\n  //. > show (-0)\n  //. '-0'\n  //.\n  //. > show (NaN)\n  //. 'NaN'\n  //.\n  //. > show (new Number (Infinity))\n  //. 'new Number (Infinity)'\n  //.\n  //. > show ('foo\\n\"bar\"\\nbaz\\n')\n  //. '\"foo\\\\n\\\\\"bar\\\\\"\\\\nbaz\\\\n\"'\n  //.\n  //. > show (new String (''))\n  //. 'new String (\"\")'\n  //.\n  //. > show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > show ([[[[[0]]]]])\n  //. '[[[[[0]]]]]'\n  //.\n  //. > show ({x: [1, 2], y: [3, 4], z: [5, 6]})\n  //. '{\"x\": [1, 2], \"y\": [3, 4], \"z\": [5, 6]}'\n  //. ```\n  function show(x) {\n    if (seen.indexOf(x) >= 0) return '<Circular>';\n\n    switch (Object.prototype.toString.call(x)) {\n\n      case '[object Boolean]':\n        return typeof x === 'object' ?\n          'new Boolean (' + show(x.valueOf()) + ')' :\n          x.toString();\n\n      case '[object Number]':\n        return typeof x === 'object' ?\n          'new Number (' + show(x.valueOf()) + ')' :\n          1 / x === -Infinity ? '-0' : x.toString(10);\n\n      case '[object String]':\n        return typeof x === 'object' ?\n          'new String (' + show(x.valueOf()) + ')' :\n          JSON.stringify(x);\n\n      case '[object Date]':\n        return 'new Date (' +\n               show(isNaN(x.valueOf()) ? NaN : x.toISOString()) +\n               ')';\n\n      case '[object Error]':\n        return 'new ' + x.name + ' (' + show(x.message) + ')';\n\n      case '[object Arguments]':\n        return 'function () { return arguments; } (' +\n               Array.prototype.map.call(x, show).join(', ') +\n               ')';\n\n      case '[object Array]':\n        seen.push(x);\n        try {\n          return '[' + x.map(show).concat(\n            Object.keys(x)\n            .sort()\n            .filter(function(k) { return !/^\\d+$/.test(k); })\n            .map(entry(x))\n          ).join(', ') + ']';\n        } finally {\n          seen.pop();\n        }\n\n      case '[object Object]':\n        seen.push(x);\n        try {\n          return (\n            $$show in x &&\n            (x.constructor == null || x.constructor.prototype !== x) ?\n              x[$$show]() :\n              '{' + Object.keys(x).sort().map(entry(x)).join(', ') + '}'\n          );\n        } finally {\n          seen.pop();\n        }\n\n      default:\n        return String(x);\n\n    }\n  }\n\n  return show;\n\n}));\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. sanctuary-type-identifiers comprises:\n//.\n//.   - an npm and browser -compatible package for deriving the\n//.     _type identifier_ of a JavaScript value; and\n//.   - a specification which authors may follow to specify type\n//.     identifiers for their types.\n//.\n//. ### Specification\n//.\n//. For a type to be compatible with the algorithm:\n//.\n//.   - every member of the type MUST have a `constructor` property\n//.     pointing to an object known as the _type representative_;\n//.\n//.   - the type representative MUST have a `@@type` property\n//.     (the _type identifier_); and\n//.\n//.   - the type identifier MUST be a string primitive and SHOULD have\n//.     format `'<namespace>/<name>[@<version>]'`, where:\n//.\n//.       - `<namespace>` MUST consist of one or more characters, and\n//.         SHOULD equal the name of the npm package which defines the\n//.         type (including [scope][3] where appropriate);\n//.\n//.       - `<name>` MUST consist of one or more characters, and SHOULD\n//.         be the unique name of the type; and\n//.\n//.       - `<version>` MUST consist of one or more digits, and SHOULD\n//.         represent the version of the type.\n//.\n//. If the type identifier does not conform to the format specified above,\n//. it is assumed that the entire string represents the _name_ of the type;\n//. _namespace_ will be `null` and _version_ will be `0`.\n//.\n//. If the _version_ is not given, it is assumed to be `0`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  pattern :: RegExp\n  var pattern = new RegExp(\n    '^'\n  + '([\\\\s\\\\S]+)'   //  <namespace>\n  + '/'             //  SOLIDUS (U+002F)\n  + '([\\\\s\\\\S]+?)'  //  <name>\n  + '(?:'           //  optional non-capturing group {\n  +   '@'           //    COMMERCIAL AT (U+0040)\n  +   '([0-9]+)'    //    <version>\n  + ')?'            //  }\n  + '$'\n  );\n\n  //. ### Usage\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //. ```\n  //.\n  //. ```javascript\n  //. > function Identity(x) {\n  //. .   if (!(this instanceof Identity)) return new Identity(x);\n  //. .   this.value = x;\n  //. . }\n  //. . Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. > type.parse(type(Identity(0)))\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  //.\n  //. ### API\n  //.\n  //# type :: Any -> String\n  //.\n  //. Takes any value and returns a string which identifies its type. If the\n  //. value conforms to the [specification][4], the custom type identifier is\n  //. returned.\n  //.\n  //. ```javascript\n  //. > type(null)\n  //. 'Null'\n  //.\n  //. > type(true)\n  //. 'Boolean'\n  //.\n  //. > type(Identity(0))\n  //. 'my-package/Identity@1'\n  //. ```\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  //# type.parse :: String -> { namespace :: Nullable String, name :: String, version :: Number }\n  //.\n  //. Takes any string and parses it according to the [specification][4],\n  //. returning an object with `namespace`, `name`, and `version` fields.\n  //.\n  //. ```javascript\n  //. > type.parse('my-package/List@2')\n  //. {namespace: 'my-package', name: 'List', version: 2}\n  //.\n  //. > type.parse('nonsense!')\n  //. {namespace: null, name: 'nonsense!', version: 0}\n  //.\n  //. > type.parse(Identity['@@type'])\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  type.parse = function parse(s) {\n    var groups = pattern.exec(s);\n    return {\n      namespace: groups == null || groups[1] == null ? null : groups[1],\n      name:      groups == null                      ? s    : groups[2],\n      version:   groups == null || groups[3] == null ? 0    : Number(groups[3])\n    };\n  };\n\n  return type;\n\n}));\n\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: https://docs.npmjs.com/misc/scope\n//. [4]: #specification\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f (self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require ('sanctuary-identity');\n    var List = __doctest.require ('./test/List');\n    var Maybe = __doctest.require ('sanctuary-maybe');\n    var Pair = __doctest.require ('sanctuary-pair');\n    var Sum = __doctest.require ('./test/Sum');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat (ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    (Object.keys (strMap)).forEach (f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call (o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type (x) === type (y);\n  }\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n\n  //  unary :: (a -> b) -> (a, Any...) -> b\n  function unary(f) {\n    return function(x) {\n      return f (x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass (\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod ('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass (\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod ('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass (name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every (function(d) { return d.test (x); }) &&\n             test (x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass@1';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has (k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath (true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath (false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has ('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec (f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath ([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath ([functionName (typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath ([name], x);\n          if (m == null)    m = implPath ([type (x), 'prototype', name]);\n          return m && m.bind (x);\n        };\n    }\n\n    var version = '10.0.0';  // updated programmatically\n    var keys = Object.keys (requirements);\n\n    var typeClass = TypeClass (\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every (function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod (_name) (arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce (function(methods, _name) {\n      methods[_name] = getBoundMethod (_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test (null)\n  //. true\n  //. ```\n  var Setoid = $ ('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test (0)\n  //. true\n  //.\n  //. > Ord.test (Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $ ('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test (Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test (0)\n  //. false\n  //. ```\n  var Semigroupoid = $ ('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test (Math.sqrt)\n  //. true\n  //.\n  //. > Category.test (0)\n  //. false\n  //. ```\n  var Category = $ ('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test ('')\n  //. true\n  //.\n  //. > Semigroup.test (0)\n  //. false\n  //. ```\n  var Semigroup = $ ('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test ('')\n  //. true\n  //.\n  //. > Monoid.test (0)\n  //. false\n  //. ```\n  var Monoid = $ ('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test (Sum (0))\n  //. true\n  //.\n  //. > Group.test ('')\n  //. false\n  //. ```\n  var Group = $ ('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test ({})\n  //. true\n  //.\n  //. > Filterable.test ('')\n  //. false\n  //. ```\n  var Filterable = $ ('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test ([])\n  //. true\n  //.\n  //. > Functor.test ('')\n  //. false\n  //. ```\n  var Functor = $ ('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test (Pair ('foo') (64))\n  //. true\n  //.\n  //. > Bifunctor.test ([])\n  //. false\n  //. ```\n  var Bifunctor = $ ('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test (Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test ([])\n  //. false\n  //. ```\n  var Profunctor = $ ('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test ([])\n  //. true\n  //.\n  //. > Apply.test ('')\n  //. false\n  //. ```\n  var Apply = $ ('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test ([])\n  //. true\n  //.\n  //. > Applicative.test ({})\n  //. false\n  //. ```\n  var Applicative = $ ('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test ([])\n  //. true\n  //.\n  //. > Chain.test ({})\n  //. false\n  //. ```\n  var Chain = $ ('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test ([])\n  //. true\n  //.\n  //. > ChainRec.test ({})\n  //. false\n  //. ```\n  var ChainRec = $ ('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test ([])\n  //. true\n  //.\n  //. > Monad.test ({})\n  //. false\n  //. ```\n  var Monad = $ ('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test ({})\n  //. true\n  //.\n  //. > Alt.test ('')\n  //. false\n  //. ```\n  var Alt = $ ('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test ({})\n  //. true\n  //.\n  //. > Plus.test ('')\n  //. false\n  //. ```\n  var Plus = $ ('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test ([])\n  //. true\n  //.\n  //. > Alternative.test ({})\n  //. false\n  //. ```\n  var Alternative = $ ('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test ({})\n  //. true\n  //.\n  //. > Foldable.test ('')\n  //. false\n  //. ```\n  var Foldable = $ ('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test ([])\n  //. true\n  //.\n  //. > Traversable.test ('')\n  //. false\n  //. ```\n  var Traversable = $ ('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test ([])\n  //. true\n  //.\n  //. > Extend.test ({})\n  //. false\n  //. ```\n  var Extend = $ ('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test (Identity (0))\n  //. true\n  //.\n  //. > Comonad.test ([])\n  //. false\n  //. ```\n  var Comonad = $ ('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test (Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test ([])\n  //. false\n  //. ```\n  var Contravariant = $ ('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      isNaN (this) && isNaN (other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      isNaN (this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals (this.valueOf (), other.valueOf ());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte (this.valueOf (), other.valueOf ());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f (iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push (step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!(equals (this[idx], other[idx]))) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!(equals (this[idx], other[idx]))) {\n        return lte (this[idx], other[idx]);\n      }\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat (other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter (function(x) { return pred (x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map (function(x) { return f (x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push (fs[idx] (this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f (this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push (xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f (acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of (typeRep, []);\n        case 2: return lift2 (pair, f (xs[idx]), f (xs[idx + 1]));\n        default:\n          var m = Math.floor (n / 4) * 2;\n          return lift2 (concat_, go (idx, m), go (idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2 (concat_, map (Array$of, f (this[0])), go (1, this.length - 1)) :\n      go (0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map (function(_, idx, xs) { return f (xs.slice (idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call (this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call (this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals (this.name, other.name) &&\n           equals (this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = sortedKeys (this);\n    return equals (keys, sortedKeys (other)) &&\n           keys.every (function(k) { return equals (self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = sortedKeys (this);\n    var otherKeys = sortedKeys (other);\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift ();\n      var z = otherKeys.shift ();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!(equals (this[k], other[k]))) return lte (this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey (this, assign);\n    forEachKey (other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (pred (this[k])) result[k] = this[k];\n    });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey (this, function(k) { result[k] = f (this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (has (k, other)) result[k] = other[k] (this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f (acc, self[k]); }\n    return (sortedKeys (this)).reduce (reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return (Object.keys (this)).reduce (function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call (o, singleton);\n        };\n      }\n      return lift2 (set, applicative, f (self[k]));\n    }, of (typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext (x);\n      while (!step.done) {\n        step = f (iterationNext, iterationDone, step.value) (a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other (semigroupoid (x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f (functor (x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g (profunctor (f (x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f (x) (apply (x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f (chain (x)) (x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f (function(y) { return extend (concat (x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant (f (x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals (0, -0)\n  //. true\n  //.\n  //. > equals (NaN, NaN)\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (1, Cons (2, Nil)))\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (2, Cons (1, Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Setoid.test (x) &&\n               Setoid.test (y) &&\n               Setoid.methods.equals (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt (0, 0)\n  //. false\n  //.\n  //. > lt (0, 1)\n  //. true\n  //.\n  //. > lt (1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType (x, y) && !(lte (y, x));\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte (0, 0)\n  //. true\n  //.\n  //. > lte (0, 1)\n  //. true\n  //.\n  //. > lte (1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return equals (x, y);\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Ord.test (x) && Ord.test (y) && Ord.methods.lte (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt (0, 0)\n  //. false\n  //.\n  //. > gt (0, 1)\n  //. false\n  //.\n  //. > gt (1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt (y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte (0, 0)\n  //. true\n  //.\n  //. > gte (0, 1)\n  //. false\n  //.\n  //. > gte (1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte (y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min (10, 2)\n  //. 2\n  //.\n  //. > min (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > min ('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte (x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max (10, 2)\n  //. 10\n  //.\n  //. > max (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > max ('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte (x, y) ? y : x;\n  }\n\n  //# clamp :: Ord a => (a, a, a) -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. This function is derived from [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > clamp (0, 100, 42)\n  //. 42\n  //.\n  //. > clamp (0, 100, -1)\n  //. 0\n  //.\n  //. > clamp ('A', 'Z', '~')\n  //. 'Z'\n  //. ```\n  function clamp(lower, upper, x) {\n    return max (lower, min (upper, x));\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose (Math.sqrt, x => x + 1) (99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose (y) (x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id (Function) ('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id (typeRep) ();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat ('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat ({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat (Cons ('foo', Cons ('bar', Cons ('baz', Nil))), Cons ('quux', Nil))\n  //. Cons ('foo', Cons ('bar', Cons ('baz', Cons ('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat (x) (y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty (String)\n  //. ''\n  //.\n  //. > empty (Array)\n  //. []\n  //.\n  //. > empty (Object)\n  //. {}\n  //.\n  //. > empty (List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty (typeRep) ();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert (group) ();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter (x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > filter (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (0))\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter (filterable) (pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject (x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (2, Nil)\n  //.\n  //. > reject (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject (x => x % 2 == 1, Just (0))\n  //. Just (0)\n  //.\n  //. > reject (x => x % 2 == 1, Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter (function(x) { return !(pred (x)); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile (s => /x/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile (s => /y/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile (s => /z/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter (function(x) { return take = take && pred (x); },\n                   filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile (s => /x/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile (s => /y/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile (s => /z/.test (s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter (function(x) { return take = take || !(pred (x)); },\n                   filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map (Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map (Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map (Math.sqrt, s => s.length) ('Sanctuary')\n  //. 3\n  //.\n  //. > map (Math.sqrt, Pair ('foo') (64))\n  //. Pair ('foo') (8)\n  //.\n  //. > map (Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map (Math.sqrt, Cons (1, Cons (4, Cons (9, Nil))))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map (functor) (f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip (x => y => x + y, '!') ('foo')\n  //. 'foo!'\n  //.\n  //. > flip ([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip ({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip (Cons (Math.floor, Cons (Math.ceil, Nil)), 1.5)\n  //. Cons (1, Cons (2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map (functor) (thrush (x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap (s => s.toUpperCase (), Math.sqrt, Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap (bifunctor) (f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft (Math.sqrt, Pair (64) (9))\n  //. Pair (8) (9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap (f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap (Math.abs, x => x + 1, Math.sqrt) (-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap (profunctor) (f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap ([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap ({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap (s => n => s.slice (0, n), s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap (Identity (Math.sqrt), Identity (64))\n  //. Identity (8)\n  //.\n  //. > ap (Cons (Math.sqrt, Cons (x => x * x, Nil)), Cons (16, Cons (100, Nil)))\n  //. Cons (4, Cons (10, Cons (256, Cons (10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap (applyX) (applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2 (x => y => Math.pow (x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2 (x => y => Math.pow (x, y), Identity (10), Identity (3))\n  //. Identity (1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap (map (f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        ['<', '['],\n  //. .        ['>', ']'],\n  //. .        ['foo', 'bar', 'baz'])\n  //. [ '<foo>', '<bar>', '<baz>',\n  //. . '<foo]', '<bar]', '<baz]',\n  //. . '[foo>', '[bar>', '[baz>',\n  //. . '[foo]', '[bar]', '[baz]' ]\n  //.\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        Identity ('<'),\n  //. .        Identity ('>'),\n  //. .        Identity ('baz'))\n  //. Identity ('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap (ap (map (f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst ([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst (Identity (1), Identity (2))\n  //. Identity (1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2 (constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond ([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond (Identity (1), Identity (2))\n  //. Identity (2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2 (constant (identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of (Array, 42)\n  //. [42]\n  //.\n  //. > of (Function, 42) (null)\n  //. 42\n  //.\n  //. > of (List, 42)\n  //. Cons (42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of (typeRep) (x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append (3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append (3, Cons (1, Cons (2, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat (xs, of (xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend (1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend (1, Cons (2, Cons (3, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat (of (xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain (x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain (x => x % 2 == 1 ? of (List, x) : Nil,\n  //. .        Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > chain (n => s => s.slice (0, n),\n  //. .        s => Math.ceil (s.length / 2))\n  //. .       ('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain (chain_) (f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join (Identity (Identity (1)))\n  //. Identity (1)\n  //. ```\n  function join(chain_) {\n    return chain (identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec (\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map (done)\n  //. .                                    : [s + 'o', s + 'n'].map (next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec (typeRep) (f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt (Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt (Nothing, Just (1))\n  //. Just (1)\n  //.\n  //. > alt (Just (2), Just (3))\n  //. Just (2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt (x) (y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero (Array)\n  //. []\n  //.\n  //. > zero (Object)\n  //. {}\n  //.\n  //. > zero (Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero (typeRep) ();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce ((xs, x) => [x].concat (xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce (concat, '', Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce (foldable) (f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size ([])\n  //. 0\n  //.\n  //. > size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size (Nil)\n  //. 0\n  //.\n  //. > size (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.length;\n    return reduce (function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# all :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if all the elements of the structure satisfy the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > all (Number.isInteger, [])\n  //. true\n  //.\n  //. > all (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > all (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function all(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.every (unary (pred));\n    return reduce (function(b, x) { return b && pred (x); }, true, foldable);\n  }\n\n  //# any :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if any element of the structure satisfies the predicate;\n  //. `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > any (Number.isInteger, [])\n  //. false\n  //.\n  //. > any (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > any (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. true\n  //. ```\n  function any(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.some (unary (pred));\n    return reduce (function(b, x) { return b || pred (x); }, false, foldable);\n  }\n\n  //# none :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if none of the elements of the structure satisfies the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`any`](#any). `none (pred, foldable)` is\n  //. equivalent to `!(any (pred, foldable))`.\n  //.\n  //. See also [`all`](#all).\n  //.\n  //. ```javascript\n  //. > none (Number.isInteger, [])\n  //. true\n  //.\n  //. > none (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function none(pred, foldable) {\n    return !(any (pred, foldable));\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem ('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem ('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem (3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem (8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem (0, Just (0))\n  //. true\n  //.\n  //. > elem (0, Just (1))\n  //. false\n  //.\n  //. > elem (0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return any (function(y) { return equals (x, y); }, foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap (String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce (function(monoid, x) { return concat (monoid, f (x)); },\n                   empty (typeRep),\n                   foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse (Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (3, Cons (2, Cons (1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return (foldable.slice ()).reverse ();\n    var F = foldable.constructor;\n    return reduce (function(xs, x) { return concat (of (F, x), xs); },\n                   empty (F),\n                   foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort ([Just (2), Nothing, Just (1)])\n  //. [Nothing, Just (1), Just (2)]\n  //.\n  //. > sort (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. Cons ('bar', Cons ('baz', Cons ('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy (identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy (s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy (s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy (s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy (s => s.length, Cons ('red', Cons ('green', Cons ('blue', Nil))))\n  //. Cons ('red', Cons ('blue', Cons ('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce (function(rs, x) {\n      rs.push ({idx: rs.length, x: x, fx: f (x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    } (rs[0]));\n\n    rs.sort (function(a, b) {\n      return lte_ (a.fx, b.fx) ? lte_ (b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray (foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty (F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat (result, of (F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse (Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse (Identity, x => Identity (x + 1), [1, 2, 3])\n  //. Identity ([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse (traversable) (typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence (Array, Identity ([1, 2, 3]))\n  //. [Identity (1), Identity (2), Identity (3)]\n  //.\n  //. > sequence (Identity, [Identity (1), Identity (2), Identity (3)])\n  //. Identity ([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse (typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend (ss => ss.join (''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend (f => f ([3, 4]), reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend (extend_) (f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate (Identity (1))\n  //. Identity (Identity (1))\n  //.\n  //. > duplicate ([1])\n  //. [[1]]\n  //.\n  //. > duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate (reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend (identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract (Identity (42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract (comonad) ();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap (s => s.length, Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap (contravariant) (f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    clamp: clamp,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    all: all,\n    any: any,\n    none: none,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*\n         _______    ___    _________    ___   ___    _______    ______\n        /  ____/\\  /  /\\  /__   ___/\\  /  /\\ /  /\\  /  ____/\\  /  __  \\\n       /  /\\___\\/ /  / /  \\_/  /\\__\\/ /  /_//  / / /  /\\___\\/ /  /\\/  /\\\n      /  ____/\\  /  / /    /  / /    /  ___   / / /  ____/\\  /      _/ /\n     /  /\\___\\/ /  / /    /  / /    /  /\\_/  / / /  /\\___\\/ /  /|  |\\\\/\n    /______/\\  /__/ /    /__/ /    /__/ //__/ / /______/\\  /__/ |__| |\n    \\______\\/  \\__\\/     \\__\\/     \\__\\/ \\__\\/  \\______\\/  \\__\\/ \\__\\|\n                                                                            */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-either\n//.\n//. The Either type represents values with two possibilities: a value of type\n//. `Either a b` is either a Left whose value is of type `a` or a Right whose\n//. value is of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], f);\n  } else {\n    self.sanctuaryEither = f (self.sanctuaryShow, self.sanctuaryTypeClasses);\n  }\n\n} (function(show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var EitherType = $.BinaryType\n        ('sanctuary-either/Either')\n        ('')\n        (function(x) { return type (x) === Either['@@type']; })\n        (function(e) { return e.isLeft ? [e.value] : []; })\n        (function(e) { return e.isLeft ? [] : [e.value]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, EitherType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Either = {};\n\n  var Left$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 true,\n    'isRight':                false,\n    '@@show':                 Left$prototype$show,\n    'fantasy-land/map':       Left$prototype$map,\n    'fantasy-land/bimap':     Left$prototype$bimap,\n    'fantasy-land/ap':        Left$prototype$ap,\n    'fantasy-land/chain':     Left$prototype$chain,\n    'fantasy-land/alt':       Left$prototype$alt,\n    'fantasy-land/reduce':    Left$prototype$reduce,\n    'fantasy-land/traverse':  Left$prototype$traverse,\n    'fantasy-land/extend':    Left$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Right$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 false,\n    'isRight':                true,\n    '@@show':                 Right$prototype$show,\n    'fantasy-land/map':       Right$prototype$map,\n    'fantasy-land/bimap':     Right$prototype$bimap,\n    'fantasy-land/ap':        Right$prototype$ap,\n    'fantasy-land/chain':     Right$prototype$chain,\n    'fantasy-land/alt':       Right$prototype$alt,\n    'fantasy-land/reduce':    Right$prototype$reduce,\n    'fantasy-land/traverse':  Right$prototype$traverse,\n    'fantasy-land/extend':    Right$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var util =\n    typeof module === 'object' && typeof module.exports === 'object' ?\n    require ('util') :\n    /* istanbul ignore next */ {};\n  var inspect =\n    util.inspect != null && typeof util.inspect.custom === 'symbol' ?\n    /* istanbul ignore next */ util.inspect.custom :\n    /* istanbul ignore next */ 'inspect';\n  Left$prototype[inspect] = Left$prototype$show;\n  Right$prototype[inspect] = Right$prototype$show;\n\n  //. `Either a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Right (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Right (['foo'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */               '\\u274C   '))\n  //. .       (S.keys (Z.filter ($.test ([]) ($.TypeClass), Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Either.Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Left ('sqrt undefined for -1')\n  //. Left ('sqrt undefined for -1')\n  //. ```\n  var Left = Either.Left = function(value) {\n    var left = Object.create (Left$prototype);\n    if (Z.Setoid.test (value)) {\n      left['fantasy-land/equals'] = Left$prototype$equals;\n      if (Z.Ord.test (value)) {\n        left['fantasy-land/lte'] = Left$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      left['fantasy-land/concat'] = Left$prototype$concat;\n    }\n    left.value = value;\n    return left;\n  };\n\n  //# Either.Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > Right (42)\n  //. Right (42)\n  //. ```\n  var Right = Either.Right = function Right(value) {\n    var right = Object.create (Right$prototype);\n    if (Z.Setoid.test (value)) {\n      right['fantasy-land/equals'] = Right$prototype$equals;\n      if (Z.Ord.test (value)) {\n        right['fantasy-land/lte'] = Right$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      right['fantasy-land/concat'] = Right$prototype$concat;\n    }\n    right.value = value;\n    return right;\n  };\n\n  //# Either.@@type :: String\n  //.\n  //. Either [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Right (42))\n  //. 'sanctuary-either/Either@1'\n  //.\n  //. > type.parse (type (Right (42)))\n  //. {namespace: 'sanctuary-either', name: 'Either', version: 1}\n  //. ```\n  Either['@@type'] = 'sanctuary-either/Either@1';\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //.   - `of (Either) (x)` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Either) (42)\n  //. Right (42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Either.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Either d c, a) -> Either d b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Left ('!!')\n  //.\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Right (65536)\n  //. ```\n  Either['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var either = f (next, done, r.value);\n      if (either.isLeft) return either;\n      r = either.value;\n    }\n    return Right (r.value);\n  };\n\n  //# Either#@@show :: (Showable a, Showable b) => Either a b ~> () -> String\n  //.\n  //.   - `show (Left (x))` is equivalent to `'Left (' + show (x) + ')'`\n  //.   - `show (Right (x))` is equivalent to `'Right (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Left ('sqrt undefined for -1'))\n  //. 'Left (\"sqrt undefined for -1\")'\n  //.\n  //. > show (Right ([1, 2, 3]))\n  //. 'Right ([1, 2, 3])'\n  //. ```\n  function Left$prototype$show() {\n    return 'Left (' + show (this.value) + ')';\n  }\n  function Right$prototype$show() {\n    return 'Right (' + show (this.value) + ')';\n  }\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is equal to `Left (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Right (x)` is equal to `Right (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Left (x)` is never equal to `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.equals (Left ([1, 2, 3])) (Left ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Right ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Left ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. false\n  //. ```\n  function Left$prototype$equals(other) {\n    return other.isLeft && Z.equals (this.value, other.value);\n  }\n  function Right$prototype$equals(other) {\n    return other.isRight && Z.equals (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is less than or equal to `Left (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Right (x)` is less than or equal to `Right (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Left (x)` is always less than `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Left (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1)]\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Right (0), Right (1), Right (2)])\n  //. [Right (0), Right (1)]\n  //.\n  //. > S.filter (S.lte (Left (1))) ([Right (0), Right (1), Right (2)])\n  //. []\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1), Left (2)]\n  //. ```\n  function Left$prototype$lte(other) {\n    return other.isRight || Z.lte (this.value, other.value);\n  }\n  function Right$prototype$lte(other) {\n    return other.isRight && Z.lte (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `concat (Left (x)) (Left (y))` is equivalent to\n  //.     `Left (concat (x) (y))`\n  //.   - `concat (Right (x)) (Right (y))` is equivalent to\n  //.     `Right (concat (x) (y))`\n  //.   - `concat (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `concat (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Left ('abc')) (Left ('def'))\n  //. Left ('abcdef')\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Right ([4, 5, 6]))\n  //. Right ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Left ('abc')) (Right ([1, 2, 3]))\n  //. Right ([1, 2, 3])\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Left ('abc'))\n  //. Right ([1, 2, 3])\n  //. ```\n  function Left$prototype$concat(other) {\n    return other.isLeft ? Left (Z.concat (this.value, other.value)) : other;\n  }\n  function Right$prototype$concat(other) {\n    return other.isRight ? Right (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //.   - `map (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `map (f) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (S.add (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.map (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$map(f) {\n    return this;\n  }\n  function Right$prototype$map(f) {\n    return Right (f (this.value));\n  }\n\n  //# Either#fantasy-land/bimap :: Either a c ~> (a -> b, c -> d) -> Either b d\n  //.\n  //.   - `bimap (f) (g) (Left (x))` is equivalent to `Left (f (x))`\n  //.   - `bimap (f) (g) (Right (x))` is equivalent to `Right (g (x))`\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (S.add (1)) (Left ('abc'))\n  //. Left ('ABC')\n  //.\n  //. > S.bimap (S.toUpper) (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$bimap(f, g) {\n    return Left (f (this.value));\n  }\n  function Right$prototype$bimap(f, g) {\n    return Right (g (this.value));\n  }\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //.   - `ap (Left (x)) (Left (y))` is equivalent to `Left (x)`\n  //.   - `ap (Left (x)) (Right (y))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Left (x))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Left ('div undefined for 0')) (Left ('sqrt undefined for -1'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Left ('div undefined for 0')) (Right (99))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Right (S.add (1))) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.ap (Right (S.add (1))) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$ap(other) {\n    return other.isLeft ? other : this;\n  }\n  function Right$prototype$ap(other) {\n    return other.isLeft ? other : Right (other.value (this.value));\n  }\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //.   - `chain (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `chain (f) (Right (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const sqrt = n => n < 0 ? Left ('sqrt undefined for ' + show (n))\n  //. .                         : Right (Math.sqrt (n))\n  //.\n  //. > S.chain (sqrt) (Left ('div undefined for 0'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.chain (sqrt) (Right (-1))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.chain (sqrt) (Right (25))\n  //. Right (5)\n  //. ```\n  function Left$prototype$chain(f) {\n    return this;\n  }\n  function Right$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `alt (Left (x)) (Left (y))` is equivalent to `Left (y)`\n  //.   - `alt (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `alt (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.   - `alt (Right (x)) (Right (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Left ('A')) (Left ('B'))\n  //. Left ('B')\n  //.\n  //. > S.alt (Left ('C')) (Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (Right (2)) (Left ('D'))\n  //. Right (2)\n  //.\n  //. > S.alt (Right (3)) (Right (4))\n  //. Right (3)\n  //. ```\n  function Left$prototype$alt(other) {\n    return other;\n  }\n  function Right$prototype$alt(other) {\n    return this;\n  }\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //.   - `reduce (f) (x) (Left (y))` is equivalent to `x`\n  //.   - `reduce (f) (x) (Right (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1]) (Left ('sqrt undefined for -1'))\n  //. [1]\n  //.\n  //. > S.reduce (S.concat) ([1]) (Right ([2]))\n  //. [1, 2]\n  //. ```\n  function Left$prototype$reduce(f, x) {\n    return x;\n  }\n  function Right$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //.   - `traverse (A) (f) (Left (x))` is equivalent to `of (A) (Left (x))`\n  //.   - `traverse (A) (f) (Right (x))` is equivalent to `map (Right) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Left ('sqrt undefined for -1'))\n  //. [Left ('sqrt undefined for -1')]\n  //.\n  //. > S.traverse (Array) (S.words) (Right ('foo bar baz'))\n  //. [Right ('foo'), Right ('bar'), Right ('baz')]\n  //. ```\n  function Left$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Right$prototype$traverse(typeRep, f) {\n    return Z.map (Right, f (this.value));\n  }\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //.   - `extend (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `extend (f) (Right (x))` is equivalent to `Right (f (Right (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$extend(f) {\n    return this;\n  }\n  function Right$prototype$extend(f) {\n    return Right (f (this));\n  }\n\n  return Either;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f (self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require ('sanctuary-identity');\n    var List = __doctest.require ('./test/List');\n    var Maybe = __doctest.require ('sanctuary-maybe');\n    var Pair = __doctest.require ('sanctuary-pair');\n    var Sum = __doctest.require ('./test/Sum');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat (ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    (Object.keys (strMap)).forEach (f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call (o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type (x) === type (y);\n  }\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n\n  //  unary :: (a -> b) -> (a, Any...) -> b\n  function unary(f) {\n    return function(x) {\n      return f (x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass (\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod ('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass (\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod ('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass (name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every (function(d) { return d.test (x); }) &&\n             test (x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass@1';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has (k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath (true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath (false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has ('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec (f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath ([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath ([functionName (typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath ([name], x);\n          if (m == null)    m = implPath ([type (x), 'prototype', name]);\n          return m && m.bind (x);\n        };\n    }\n\n    var version = '11.0.0';  // updated programmatically\n    var keys = Object.keys (requirements);\n\n    var typeClass = TypeClass (\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every (function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod (_name) (arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce (function(methods, _name) {\n      methods[_name] = getBoundMethod (_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test (null)\n  //. true\n  //. ```\n  var Setoid = $ ('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test (0)\n  //. true\n  //.\n  //. > Ord.test (Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $ ('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test (Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test (0)\n  //. false\n  //. ```\n  var Semigroupoid = $ ('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test (Math.sqrt)\n  //. true\n  //.\n  //. > Category.test (0)\n  //. false\n  //. ```\n  var Category = $ ('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test ('')\n  //. true\n  //.\n  //. > Semigroup.test (0)\n  //. false\n  //. ```\n  var Semigroup = $ ('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test ('')\n  //. true\n  //.\n  //. > Monoid.test (0)\n  //. false\n  //. ```\n  var Monoid = $ ('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test (Sum (0))\n  //. true\n  //.\n  //. > Group.test ('')\n  //. false\n  //. ```\n  var Group = $ ('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test ({})\n  //. true\n  //.\n  //. > Filterable.test ('')\n  //. false\n  //. ```\n  var Filterable = $ ('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test ([])\n  //. true\n  //.\n  //. > Functor.test ('')\n  //. false\n  //. ```\n  var Functor = $ ('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test (Pair ('foo') (64))\n  //. true\n  //.\n  //. > Bifunctor.test ([])\n  //. false\n  //. ```\n  var Bifunctor = $ ('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test (Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test ([])\n  //. false\n  //. ```\n  var Profunctor = $ ('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test ([])\n  //. true\n  //.\n  //. > Apply.test ('')\n  //. false\n  //. ```\n  var Apply = $ ('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test ([])\n  //. true\n  //.\n  //. > Applicative.test ({})\n  //. false\n  //. ```\n  var Applicative = $ ('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test ([])\n  //. true\n  //.\n  //. > Chain.test ({})\n  //. false\n  //. ```\n  var Chain = $ ('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test ([])\n  //. true\n  //.\n  //. > ChainRec.test ({})\n  //. false\n  //. ```\n  var ChainRec = $ ('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test ([])\n  //. true\n  //.\n  //. > Monad.test ({})\n  //. false\n  //. ```\n  var Monad = $ ('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test ({})\n  //. true\n  //.\n  //. > Alt.test ('')\n  //. false\n  //. ```\n  var Alt = $ ('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test ({})\n  //. true\n  //.\n  //. > Plus.test ('')\n  //. false\n  //. ```\n  var Plus = $ ('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test ([])\n  //. true\n  //.\n  //. > Alternative.test ({})\n  //. false\n  //. ```\n  var Alternative = $ ('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test ({})\n  //. true\n  //.\n  //. > Foldable.test ('')\n  //. false\n  //. ```\n  var Foldable = $ ('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test ([])\n  //. true\n  //.\n  //. > Traversable.test ('')\n  //. false\n  //. ```\n  var Traversable = $ ('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test ([])\n  //. true\n  //.\n  //. > Extend.test ({})\n  //. false\n  //. ```\n  var Extend = $ ('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test (Identity (0))\n  //. true\n  //.\n  //. > Comonad.test ([])\n  //. false\n  //. ```\n  var Comonad = $ ('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test (Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test ([])\n  //. false\n  //. ```\n  var Contravariant = $ ('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      isNaN (this) && isNaN (other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      isNaN (this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals (this.valueOf (), other.valueOf ());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte (this.valueOf (), other.valueOf ());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals (this.valueOf (), other.valueOf ()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte (this.valueOf (), other.valueOf ()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f (iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push (step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!(equals (this[idx], other[idx]))) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!(equals (this[idx], other[idx]))) {\n        return lte (this[idx], other[idx]);\n      }\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat (other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter (function(x) { return pred (x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map (function(x) { return f (x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push (fs[idx] (this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f (this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push (xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f (acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of (typeRep, []);\n        case 2: return lift2 (pair, f (xs[idx]), f (xs[idx + 1]));\n        default:\n          var m = Math.floor (n / 4) * 2;\n          return lift2 (concat_, go (idx, m), go (idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2 (concat_, map (Array$of, f (this[0])), go (1, this.length - 1)) :\n      go (0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map (function(_, idx, xs) { return f (xs.slice (idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call (this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call (this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals (this.name, other.name) &&\n           equals (this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = sortedKeys (this);\n    return equals (keys, sortedKeys (other)) &&\n           keys.every (function(k) { return equals (self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = sortedKeys (this);\n    var otherKeys = sortedKeys (other);\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift ();\n      var z = otherKeys.shift ();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!(equals (this[k], other[k]))) return lte (this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey (this, assign);\n    forEachKey (other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (pred (this[k])) result[k] = this[k];\n    });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey (this, function(k) { result[k] = f (this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey (this, function(k) {\n      if (has (k, other)) result[k] = other[k] (this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f (acc, self[k]); }\n    return (sortedKeys (this)).reduce (reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return (Object.keys (this)).reduce (function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call (o, singleton);\n        };\n      }\n      return lift2 (set, applicative, f (self[k]));\n    }, of (typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext (x);\n      while (!step.done) {\n        step = f (iterationNext, iterationDone, step.value) (a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other (semigroupoid (x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f (functor (x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g (profunctor (f (x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f (x) (apply (x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f (chain (x)) (x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f (function(y) { return extend (concat (x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant (f (x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals (0, -0)\n  //. true\n  //.\n  //. > equals (NaN, NaN)\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (1, Cons (2, Nil)))\n  //. true\n  //.\n  //. > equals (Cons (1, Cons (2, Nil)), Cons (2, Cons (1, Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Setoid.test (x) &&\n               Setoid.test (y) &&\n               Setoid.methods.equals (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt (0, 0)\n  //. false\n  //.\n  //. > lt (0, 1)\n  //. true\n  //.\n  //. > lt (1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType (x, y) && !(lte (y, x));\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte (0, 0)\n  //. true\n  //.\n  //. > lte (0, 1)\n  //. true\n  //.\n  //. > lte (1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!(sameType (x, y))) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some (function(p) { return p[0] === x && p[1] === y; })) {\n        return equals (x, y);\n      }\n\n      $pairs.push ([x, y]);\n      try {\n        return Ord.test (x) && Ord.test (y) && Ord.methods.lte (x) (y);\n      } finally {\n        $pairs.pop ();\n      }\n    };\n  } ());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt (0, 0)\n  //. false\n  //.\n  //. > gt (0, 1)\n  //. false\n  //.\n  //. > gt (1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt (y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte (0, 0)\n  //. true\n  //.\n  //. > gte (0, 1)\n  //. false\n  //.\n  //. > gte (1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte (y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min (10, 2)\n  //. 2\n  //.\n  //. > min (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > min ('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte (x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max (10, 2)\n  //. 10\n  //.\n  //. > max (new Date ('1999-12-31'), new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > max ('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte (x, y) ? y : x;\n  }\n\n  //# clamp :: Ord a => (a, a, a) -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. This function is derived from [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > clamp (0, 100, 42)\n  //. 42\n  //.\n  //. > clamp (0, 100, -1)\n  //. 0\n  //.\n  //. > clamp ('A', 'Z', '~')\n  //. 'Z'\n  //. ```\n  function clamp(lower, upper, x) {\n    return max (lower, min (upper, x));\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose (Math.sqrt, x => x + 1) (99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose (y) (x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id (Function) ('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id (typeRep) ();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat ('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat ({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat (Cons ('foo', Cons ('bar', Cons ('baz', Nil))), Cons ('quux', Nil))\n  //. Cons ('foo', Cons ('bar', Cons ('baz', Cons ('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat (x) (y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty (String)\n  //. ''\n  //.\n  //. > empty (Array)\n  //. []\n  //.\n  //. > empty (Object)\n  //. {}\n  //.\n  //. > empty (List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty (typeRep) ();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert (group) ();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter (x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > filter (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (0))\n  //. Nothing\n  //.\n  //. > filter (x => x % 2 == 1, Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter (filterable) (pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject (x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject (x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject (x => x % 2 == 1, Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (2, Nil)\n  //.\n  //. > reject (x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject (x => x % 2 == 1, Just (0))\n  //. Just (0)\n  //.\n  //. > reject (x => x % 2 == 1, Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter (function(x) { return !(pred (x)); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map (Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map (Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map (Math.sqrt, s => s.length) ('Sanctuary')\n  //. 3\n  //.\n  //. > map (Math.sqrt, Pair ('foo') (64))\n  //. Pair ('foo') (8)\n  //.\n  //. > map (Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map (Math.sqrt, Cons (1, Cons (4, Cons (9, Nil))))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map (functor) (f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip (x => y => x + y, '!') ('foo')\n  //. 'foo!'\n  //.\n  //. > flip ([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip ({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip (Cons (Math.floor, Cons (Math.ceil, Nil)), 1.5)\n  //. Cons (1, Cons (2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map (functor) (thrush (x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap (s => s.toUpperCase (), Math.sqrt, Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap (bifunctor) (f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft (Math.sqrt, Pair (64) (9))\n  //. Pair (8) (9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap (f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap (Math.abs, x => x + 1, Math.sqrt) (-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap (profunctor) (f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap ([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap ({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap (s => n => s.slice (0, n), s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap (Identity (Math.sqrt), Identity (64))\n  //. Identity (8)\n  //.\n  //. > ap (Cons (Math.sqrt, Cons (x => x * x, Nil)), Cons (16, Cons (100, Nil)))\n  //. Cons (4, Cons (10, Cons (256, Cons (10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap (applyX) (applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2 (x => y => Math.pow (x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2 (x => y => Math.pow (x, y), Identity (10), Identity (3))\n  //. Identity (1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap (map (f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        ['<', '['],\n  //. .        ['>', ']'],\n  //. .        ['foo', 'bar', 'baz'])\n  //. [ '<foo>', '<bar>', '<baz>',\n  //. . '<foo]', '<bar]', '<baz]',\n  //. . '[foo>', '[bar>', '[baz>',\n  //. . '[foo]', '[bar]', '[baz]' ]\n  //.\n  //. > lift3 (x => y => z => x + z + y,\n  //. .        Identity ('<'),\n  //. .        Identity ('>'),\n  //. .        Identity ('baz'))\n  //. Identity ('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap (ap (map (f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst ([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst (Identity (1), Identity (2))\n  //. Identity (1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2 (constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond ([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond (Identity (1), Identity (2))\n  //. Identity (2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2 (constant (identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of (Array, 42)\n  //. [42]\n  //.\n  //. > of (Function, 42) (null)\n  //. 42\n  //.\n  //. > of (List, 42)\n  //. Cons (42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of (typeRep) (x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append (3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append (3, Cons (1, Cons (2, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat (xs, of (xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend (1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend (1, Cons (2, Cons (3, Nil)))\n  //. Cons (1, Cons (2, Cons (3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat (of (xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain (x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain (x => x % 2 == 1 ? of (List, x) : Nil,\n  //. .        Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (1, Cons (3, Nil))\n  //.\n  //. > chain (n => s => s.slice (0, n),\n  //. .        s => Math.ceil (s.length / 2))\n  //. .       ('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain (chain_) (f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join (Identity (Identity (1)))\n  //. Identity (1)\n  //. ```\n  function join(chain_) {\n    return chain (identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec (\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map (done)\n  //. .                                    : [s + 'o', s + 'n'].map (next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec (typeRep) (f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt ([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt (Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt (Nothing, Just (1))\n  //. Just (1)\n  //.\n  //. > alt (Just (2), Just (3))\n  //. Just (2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt (x) (y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero (Array)\n  //. []\n  //.\n  //. > zero (Object)\n  //. {}\n  //.\n  //. > zero (Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero (typeRep) ();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce ((xs, x) => [x].concat (xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce (concat, '', Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce (foldable) (f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size ([])\n  //. 0\n  //.\n  //. > size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size (Nil)\n  //. 0\n  //.\n  //. > size (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.length;\n    return reduce (function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# all :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if all the elements of the structure satisfy the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > all (Number.isInteger, [])\n  //. true\n  //.\n  //. > all (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > all (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function all(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.every (unary (pred));\n    return reduce (function(b, x) { return b && pred (x); }, true, foldable);\n  }\n\n  //# any :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if any element of the structure satisfies the predicate;\n  //. `false` otherwise.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > any (Number.isInteger, [])\n  //. false\n  //.\n  //. > any (Number.isInteger, [1, 2, 3])\n  //. true\n  //.\n  //. > any (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. true\n  //. ```\n  function any(pred, foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return foldable.some (unary (pred));\n    return reduce (function(b, x) { return b || pred (x); }, false, foldable);\n  }\n\n  //# none :: Foldable f => (a -> Boolean, f a) -> Boolean\n  //.\n  //. Returns `true` if none of the elements of the structure satisfies the\n  //. predicate; `false` otherwise.\n  //.\n  //. This function is derived from [`any`](#any). `none (pred, foldable)` is\n  //. equivalent to `!(any (pred, foldable))`.\n  //.\n  //. See also [`all`](#all).\n  //.\n  //. ```javascript\n  //. > none (Number.isInteger, [])\n  //. true\n  //.\n  //. > none (Number.isInteger, [0, 0.25, 0.5, 0.75, 1])\n  //. false\n  //. ```\n  function none(pred, foldable) {\n    return !(any (pred, foldable));\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem ('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem ('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem (3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem (8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem (0, Just (0))\n  //. true\n  //.\n  //. > elem (0, Just (1))\n  //. false\n  //.\n  //. > elem (0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return any (function(y) { return equals (x, y); }, foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap (String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce (function(monoid, x) { return concat (monoid, f (x)); },\n                   empty (typeRep),\n                   foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse (Cons (1, Cons (2, Cons (3, Nil))))\n  //. Cons (3, Cons (2, Cons (1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) return (foldable.slice ()).reverse ();\n    var F = foldable.constructor;\n    return reduce (function(xs, x) { return concat (of (F, x), xs); },\n                   empty (F),\n                   foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort ([Just (2), Nothing, Just (1)])\n  //. [Nothing, Just (1), Just (2)]\n  //.\n  //. > sort (Cons ('foo', Cons ('bar', Cons ('baz', Nil))))\n  //. Cons ('bar', Cons ('baz', Cons ('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy (identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy (s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy (s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy (s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy (s => s.length, Cons ('red', Cons ('green', Cons ('blue', Nil))))\n  //. Cons ('red', Cons ('blue', Cons ('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce (function(rs, x) {\n      rs.push ({idx: rs.length, x: x, fx: f (x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    } (rs[0]));\n\n    rs.sort (function(a, b) {\n      return lte_ (a.fx, b.fx) ? lte_ (b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray (foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty (F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat (result, of (F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse (Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse (Identity, x => Identity (x + 1), [1, 2, 3])\n  //. Identity ([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse (traversable) (typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence (Array, Identity ([1, 2, 3]))\n  //. [Identity (1), Identity (2), Identity (3)]\n  //.\n  //. > sequence (Identity, [Identity (1), Identity (2), Identity (3)])\n  //. Identity ([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse (typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend (ss => ss.join (''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend (f => f ([3, 4]), reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend (extend_) (f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate (Identity (1))\n  //. Identity (Identity (1))\n  //.\n  //. > duplicate ([1])\n  //. [[1]]\n  //.\n  //. > duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate (reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend (identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract (Identity (42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract (comonad) ();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap (s => s.length, Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap (contravariant) (f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    clamp: clamp,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    all: all,\n    any: any,\n    none: none,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*              ___                 ______\n               /  /\\               /  ___/\\\n        ______/  / / _______    __/  /___\\/\n       /  ___   / / /  ___  \\  /_   __/\\\n      /  /\\_/  / / /  /__/  /\\ \\/  /\\_\\/\n     /  / //  / / /  ______/ / /  / /\n    /  /_//  / / /  /______\\/ /  / /\n    \\_______/ /  \\_______/\\  /__/ /\n     \\______\\/    \\______\\/  \\__*/\n\n//. # sanctuary-def\n//.\n//. sanctuary-def is a run-time type system for JavaScript. It facilitates\n//. the definition of curried JavaScript functions that are explicit about\n//. the number of arguments to which they may be applied and the types of\n//. those arguments.\n//.\n//. It is conventional to import the package as `$`:\n//.\n//. ```javascript\n//. const $ = require ('sanctuary-def');\n//. ```\n//.\n//. The next step is to define an environment. An environment is an array\n//. of [types][]. [`env`][] is an environment containing all the built-in\n//. JavaScript types. It may be used as the basis for environments that\n//. include custom types in addition to the built-in types:\n//.\n//. ```javascript\n//. //    Integer :: Type\n//. const Integer = '...';\n//.\n//. //    NonZeroInteger :: Type\n//. const NonZeroInteger = '...';\n//.\n//. //    env :: Array Type\n//. const env = $.env.concat ([Integer, NonZeroInteger]);\n//. ```\n//.\n//. Type constructors such as `List :: Type -> Type` cannot be included in\n//. an environment as they're not of the correct type. One could, though,\n//. use a type constructor to define a fixed number of concrete types:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([\n//.   List ($.Number),                // :: Type\n//.   List ($.String),                // :: Type\n//.   List (List ($.Number)),         // :: Type\n//.   List (List ($.String)),         // :: Type\n//.   List (List (List ($.Number))),  // :: Type\n//.   List (List (List ($.String))),  // :: Type\n//. ]);\n//. ```\n//.\n//. Not only would this be tedious, but one could never enumerate all possible\n//. types as there are infinitely many. Instead, one should use [`Unknown`][]:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([List ($.Unknown)]);\n//. ```\n//.\n//. The next step is to define a `def` function for the environment:\n//.\n//. ```javascript\n//. const def = $.create ({checkTypes: true, env});\n//. ```\n//.\n//. The `checkTypes` option determines whether type checking is enabled.\n//. This allows one to only pay the performance cost of run-time type checking\n//. during development. For example:\n//.\n//. ```javascript\n//. const def = $.create ({\n//.   checkTypes: process.env.NODE_ENV === 'development',\n//.   env,\n//. });\n//. ```\n//.\n//. `def` is a function for defining functions. For example:\n//.\n//. ```javascript\n//. //    add :: Number -> Number -> Number\n//. const add =\n//. def ('add')\n//.     ({})\n//.     ([$.Number, $.Number, $.Number])\n//.     (x => y => x + y);\n//. ```\n//.\n//. `[$.Number, $.Number, $.Number]` specifies that `add` takes two arguments\n//. of type `Number`, one at a time, and returns a value of type `Number`.\n//.\n//. Applying `add` to two arguments, one at a time, gives the expected result:\n//.\n//. ```javascript\n//. add (2) (2);\n//. // => 4\n//. ```\n//.\n//. Applying `add` to multiple arguments at once results in an exception being\n//. thrown:\n//.\n//. ```javascript\n//. add (2, 2, 2);\n//. // ! TypeError: ‘add’ applied to the wrong number of arguments\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   Expected one argument but received three arguments:\n//. //\n//. //     - 2\n//. //     - 2\n//. //     - 2\n//. ```\n//.\n//. Applying `add` to one argument produces a function awaiting the remaining\n//. argument. This is known as partial application. Partial application allows\n//. more specific functions to be defined in terms of more general ones:\n//.\n//. ```javascript\n//. //    inc :: Number -> Number\n//. const inc = add (1);\n//.\n//. inc (7);\n//. // => 8\n//. ```\n//.\n//. JavaScript's implicit type coercion often obfuscates the source of type\n//. errors. Consider the following function:\n//.\n//. ```javascript\n//. //    _add :: Number -> Number -> Number\n//. const _add = x => y => x + y;\n//. ```\n//.\n//. The type signature indicates that `_add` takes arguments of type `Number`,\n//. but this is not enforced. This allows type errors to be silently ignored:\n//.\n//. ```javascript\n//. _add ('2') ('2');\n//. // => '22'\n//. ```\n//.\n//. `add`, on the other hand, throws if applied to arguments of the wrong\n//. types:\n//.\n//. ```javascript\n//. add ('2') ('2');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"2\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n//.\n//. Type checking is performed as arguments are provided (rather than once all\n//. arguments have been provided), so type errors are reported early:\n//.\n//. ```javascript\n//. add ('X');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"X\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-either'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-either',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            function(Either, show, Z, type) {\n              return f (util, Either, show, Z, type);\n            });\n  } else {\n    self.sanctuaryDef = f (util,\n                           self.sanctuaryEither,\n                           self.sanctuaryShow,\n                           self.sanctuaryTypeClasses,\n                           self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(util, Either, show, Z, type) {\n\n  'use strict';\n\n  var MAX_SAFE_INTEGER = Math.pow (2, 53) - 1;\n  var MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n  var slice             = Array.prototype.slice;\n  var hasOwnProperty    = Object.prototype.hasOwnProperty;\n  var toString          = Object.prototype.toString;\n\n  var inspect = typeof util.inspect.custom === 'symbol' ?\n                util.inspect.custom :\n                /* istanbul ignore next */ 'inspect';\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  B :: (b -> c) -> (a -> b) -> a -> c\n  function B(f) {\n    return function(g) {\n      return function(x) {\n        return f (g (x));\n      };\n    };\n  }\n\n  //  I :: a -> a\n  function I(x) { return x; }\n\n  //  K :: a -> b -> a\n  function K(x) { return function(y) { return x; }; }\n\n  //  W :: (a -> a -> b) -> a -> b\n  function W(f) { return function(x) { return f (x) (x); }; }\n\n  //  always0 :: a -> () -> a\n  function always0(x) { return function() { return x; }; }\n\n  //  always2 :: a -> (b, c) -> a\n  function always2(x) { return function(y, z) { return x; }; }\n\n  //  complement :: (a -> Boolean) -> a -> Boolean\n  function complement(pred) { return function(x) { return !(pred (x)); }; }\n\n  //  filter :: Filterable f => (a -> Boolean) -> f a -> f a\n  function filter(pred) {\n    return function(xs) {\n      return Z.filter (pred, xs);\n    };\n  }\n\n  //  init :: Array a -> Array a\n  function init(xs) { return xs.slice (0, -1); }\n\n  //  isEmpty :: Foldable f => f a -> Boolean\n  function isEmpty(xs) { return Z.size (xs) === 0; }\n\n  //  isPrefix :: Array a -> Array a -> Boolean\n  function isPrefix(candidate) {\n    return function(xs) {\n      if (candidate.length > xs.length) return false;\n      for (var idx = 0; idx < candidate.length; idx += 1) {\n        if (candidate[idx] !== xs[idx]) return false;\n      }\n      return true;\n    };\n  }\n\n  //  joinWith :: (String, Array String) -> String\n  function joinWith(separator, ss) {\n    return ss.join (separator);\n  }\n\n  //  last :: Array a -> a\n  function last(xs) { return xs[xs.length - 1]; }\n\n  //  memberOf :: Array a -> a -> Boolean\n  function memberOf(xs) {\n    return function(y) {\n      return xs.some (function(x) { return Z.equals (x, y); });\n    };\n  }\n\n  //  or :: (Array a, Array a) -> Array a\n  function or(xs, ys) { return isEmpty (xs) ? ys : xs; }\n\n  //  prop :: String -> {} -> a\n  function prop(field) { return function(record) { return record[field]; }; }\n\n  //  sizeEq :: Foldable f => Integer -> f a -> Boolean\n  function sizeEq(n) { return function(xs) { return Z.size (xs) === n; }; }\n\n  //  strRepeat :: (String, Integer) -> String\n  function strRepeat(s, times) {\n    return joinWith (s, Array (times + 1));\n  }\n\n  //  r :: Char -> String -> String\n  function r(c) {\n    return function(s) {\n      return strRepeat (c, s.length);\n    };\n  }\n\n  //  _ :: String -> String\n  var _ = r (' ');\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  toArray :: Foldable f => f a -> Array a\n  function toArray(foldable) {\n    return Array.isArray (foldable) ?\n           foldable :\n           Z.reduce (function(xs, x) { xs.push (x); return xs; },\n                     [],\n                     foldable);\n  }\n\n  //  toMarkdownList :: (String, String, a -> String, Array a) -> String\n  function toMarkdownList(empty, s, f, xs) {\n    return isEmpty (xs) ?\n      empty :\n      Z.reduce (function(s, x) { return s + '  - ' + f (x) + '\\n'; }, s, xs);\n  }\n\n  //  trimTrailingSpaces :: String -> String\n  function trimTrailingSpaces(s) {\n    return s.replace (/[ ]+$/gm, '');\n  }\n\n  //  when :: Boolean -> (a -> a) -> a -> a\n  function when(bool) {\n    return function(f) {\n      return function(x) {\n        return bool ? f (x) : x;\n      };\n    };\n  }\n\n  //  wrap :: String -> String -> String -> String\n  function wrap(prefix) {\n    return function(suffix) {\n      return function(s) {\n        return prefix + s + suffix;\n      };\n    };\n  }\n\n  //  parenthesize :: (String -> String) -> String -> String\n  function parenthesize(f) { return wrap (f ('(')) (f (')')); }\n\n  //  q :: String -> String\n  var q = wrap ('\\u2018') ('\\u2019');\n\n  //  stripNamespace :: TypeClass -> String\n  function stripNamespace(typeClass) {\n    return typeClass.name.slice (typeClass.name.indexOf ('/') + 1);\n  }\n\n  function _test(env) {\n    return function(x) {\n      return function recur(t) {\n        return t.supertypes.every (recur) && t._test (env) (x);\n      };\n    };\n  }\n\n  var Type$prototype = {\n    'constructor': {'@@type': 'sanctuary-def/Type@1'},\n    'validate': function(env) {\n      var test2 = _test (env);\n      var type = this;\n      return function(x) {\n        if (!(test2 (x) (type))) return Left ({value: x, propPath: []});\n        for (var idx = 0; idx < type.keys.length; idx += 1) {\n          var k = type.keys[idx];\n          var t = type.types[k];\n          var ys = type.extractors[k] (x);\n          for (var idx2 = 0; idx2 < ys.length; idx2 += 1) {\n            var result = t.validate (env) (ys[idx2]);\n            if (result.isLeft) {\n              return Left ({value: result.value.value,\n                            propPath: Z.concat ([k], result.value.propPath)});\n            }\n          }\n        }\n        return Right (x);\n      };\n    },\n    'fantasy-land/equals': function(other) {\n      return (\n        Z.equals (this.type, other.type) &&\n        Z.equals (this.name, other.name) &&\n        Z.equals (this.url, other.url) &&\n        Z.equals (this.supertypes, other.supertypes) &&\n        Z.equals (this.keys, other.keys) &&\n        Z.equals (this.types, other.types)\n      );\n    },\n    '@@show': function() {\n      return this.format (I, K (I));\n    }\n  };\n\n  //  _Type :: ... -> Type\n  function _Type(\n    type,       // :: String\n    name,       // :: String\n    url,        // :: String\n    arity,      // :: NonNegativeInteger\n    format,\n    // :: Nullable ((String -> String, String -> String -> String) -> String)\n    supertypes, // :: Array Type\n    test,       // :: Any -> Boolean\n    tuples      // :: Array (Array3 String (a -> Array b) Type)\n  ) {\n    var t = Object.create (Type$prototype);\n    t._test = test;\n    t._extractors = tuples.reduce (function(_extractors, tuple) {\n      _extractors[tuple[0]] = tuple[1];\n      return _extractors;\n    }, {});\n    t.arity = arity;  // number of type parameters\n    t.extractors = Z.map (B (toArray), t._extractors);\n    t.format = format || function(outer, inner) {\n      return Z.reduce (function(s, tuple) {\n        return s +\n               outer (' ') +\n               when (tuple[2].arity > 0)\n                    (parenthesize (outer))\n                    (inner (tuple[0]) (show (tuple[2])));\n      }, outer (name), tuples);\n    };\n    t.keys = tuples.map (function(tuple) { return tuple[0]; });\n    t.name = name;\n    t.supertypes = supertypes;\n    t.type = type;\n    t.types = tuples.reduce (function(types, tuple) {\n      types[tuple[0]] = tuple[2];\n      return types;\n    }, {});\n    t.url = url;\n    return t;\n  }\n\n  var BINARY        = 'BINARY';\n  var FUNCTION      = 'FUNCTION';\n  var INCONSISTENT  = 'INCONSISTENT';\n  var NO_ARGUMENTS  = 'NO_ARGUMENTS';\n  var NULLARY       = 'NULLARY';\n  var RECORD        = 'RECORD';\n  var UNARY         = 'UNARY';\n  var UNKNOWN       = 'UNKNOWN';\n  var VARIABLE      = 'VARIABLE';\n\n  //  Inconsistent :: Type\n  var Inconsistent =\n  _Type (INCONSISTENT, '', '', 0, always2 ('???'), [], K (K (false)), []);\n\n  //  NoArguments :: Type\n  var NoArguments =\n  _Type (NO_ARGUMENTS, '', '', 0, always2 ('()'), [], K (K (true)), []);\n\n  //  arityGte :: NonNegativeInteger -> Type -> Boolean\n  function arityGte(n) {\n    return function(t) {\n      return t.arity >= n;\n    };\n  }\n\n  //  typeEq :: String -> a -> Boolean\n  function typeEq(name) {\n    return function(x) {\n      return type (x) === name;\n    };\n  }\n\n  //  typeofEq :: String -> a -> Boolean\n  function typeofEq(typeof_) {\n    return function(x) {\n      // eslint-disable-next-line valid-typeof\n      return typeof x === typeof_;\n    };\n  }\n\n  //  functionUrl :: String -> String\n  function functionUrl(name) {\n    var version = '0.20.0';  // updated programmatically\n    return 'https://github.com/sanctuary-js/sanctuary-def/tree/v' + version +\n           '#' + name;\n  }\n\n  var NullaryTypeWithUrl = Z.ap (NullaryType, functionUrl);\n  var UnaryTypeWithUrl = Z.ap (UnaryType, functionUrl);\n  var BinaryTypeWithUrl = Z.ap (BinaryType, functionUrl);\n\n  //. ### Types\n  //.\n  //. Conceptually, a type is a set of values. One can think of a value of\n  //. type `Type` as a function of type `Any -> Boolean` that tests values\n  //. for membership in the set (though this is an oversimplification).\n\n  //# Unknown :: Type\n  //.\n  //. Type used to represent missing type information. The type of `[]`,\n  //. for example, is `Array ???`.\n  //.\n  //. May be used with type constructors when defining environments. Given a\n  //. type constructor `List :: Type -> Type`, one could use `List ($.Unknown)`\n  //. to include an infinite number of types in an environment:\n  //.\n  //.   - `List Number`\n  //.   - `List String`\n  //.   - `List (List Number)`\n  //.   - `List (List String)`\n  //.   - `List (List (List Number))`\n  //.   - `List (List (List String))`\n  //.   - `...`\n  var Unknown =\n  _Type (UNKNOWN, '', '', 0, always2 ('Unknown'), [], K (K (true)), []);\n\n  //# Any :: Type\n  //.\n  //. Type comprising every JavaScript value.\n  var Any = NullaryTypeWithUrl\n    ('Any')\n    ([])\n    (K (true));\n\n  //# AnyFunction :: Type\n  //.\n  //. Type comprising every Function value.\n  var AnyFunction = NullaryTypeWithUrl\n    ('Function')\n    ([])\n    (typeofEq ('function'));\n\n  //# Arguments :: Type\n  //.\n  //. Type comprising every [`arguments`][arguments] object.\n  var Arguments = NullaryTypeWithUrl\n    ('Arguments')\n    ([])\n    (typeEq ('Arguments'));\n\n  //# Array :: Type -> Type\n  //.\n  //. Constructor for homogeneous Array types.\n  var Array_ = UnaryTypeWithUrl\n    ('Array')\n    ([])\n    (typeEq ('Array'))\n    (I);\n\n  //# Array0 :: Type\n  //.\n  //. Type whose sole member is `[]`.\n  var Array0 = NullaryTypeWithUrl\n    ('Array0')\n    ([Array_ (Unknown)])\n    (sizeEq (0));\n\n  //# Array1 :: Type -> Type\n  //.\n  //. Constructor for singleton Array types.\n  var Array1 = UnaryTypeWithUrl\n    ('Array1')\n    ([Array_ (Unknown)])\n    (sizeEq (1))\n    (I);\n\n  //# Array2 :: Type -> Type -> Type\n  //.\n  //. Constructor for heterogeneous Array types of length 2. `['foo', true]` is\n  //. a member of `Array2 String Boolean`.\n  var Array2 = BinaryTypeWithUrl\n    ('Array2')\n    ([Array_ (Unknown)])\n    (sizeEq (2))\n    (function(array2) { return [array2[0]]; })\n    (function(array2) { return [array2[1]]; });\n\n  //# Boolean :: Type\n  //.\n  //. Type comprising `true` and `false`.\n  var Boolean_ = NullaryTypeWithUrl\n    ('Boolean')\n    ([])\n    (typeofEq ('boolean'));\n\n  //# Date :: Type\n  //.\n  //. Type comprising every Date value.\n  var Date_ = NullaryTypeWithUrl\n    ('Date')\n    ([])\n    (typeEq ('Date'));\n\n  //# ValidDate :: Type\n  //.\n  //. Type comprising every [`Date`][] value except `new Date (NaN)`.\n  var ValidDate = NullaryTypeWithUrl\n    ('ValidDate')\n    ([Date_])\n    (B (complement (isNaN)) (Number));\n\n  //# Descending :: Type -> Type\n  //.\n  //. [Descending][] type constructor.\n  var Descending = UnaryTypeWithUrl\n    ('Descending')\n    ([])\n    (typeEq ('sanctuary-descending/Descending@1'))\n    (I);\n\n  //# Either :: Type -> Type -> Type\n  //.\n  //. [Either][] type constructor.\n  var Either_ = BinaryTypeWithUrl\n    ('Either')\n    ([])\n    (typeEq ('sanctuary-either/Either@1'))\n    (function(either) { return either.isLeft ? [either.value] : []; })\n    (function(either) { return either.isLeft ? [] : [either.value]; });\n\n  //# Error :: Type\n  //.\n  //. Type comprising every Error value, including values of more specific\n  //. constructors such as [`SyntaxError`][] and [`TypeError`][].\n  var Error_ = NullaryTypeWithUrl\n    ('Error')\n    ([])\n    (typeEq ('Error'));\n\n  //# Fn :: Type -> Type -> Type\n  //.\n  //. Binary type constructor for unary function types. `$.Fn (I) (O)`\n  //. represents `I -> O`, the type of functions that take a value of\n  //. type `I` and return a value of type `O`.\n  function Fn($1) { return function($2) { return Function_ ([$1, $2]); }; }\n\n  //# Function :: NonEmpty (Array Type) -> Type\n  //.\n  //. Constructor for Function types.\n  //.\n  //. Examples:\n  //.\n  //.   - `$.Function ([$.Date, $.String])` represents the `Date -> String`\n  //.     type; and\n  //.   - `$.Function ([a, b, a])` represents the `(a, b) -> a` type.\n  function Function_(types) {\n    var tuples = Z.reduce (function(tuples, t) {\n      tuples.push (['$' + show (tuples.length + 1), K ([]), t]);\n      return tuples;\n    }, [], types);\n\n    function format(outer, inner) {\n      return when (tuples.length !== 2)\n                  (parenthesize (outer))\n                  (joinWith (outer (', '),\n                             Z.map (function(tuple) {\n                               return when (tuple[2].type === FUNCTION)\n                                           (parenthesize (outer))\n                                           (inner (tuple[0])\n                                                  (show (tuple[2])));\n                             }, init (tuples)))) +\n             outer (' -> ') +\n             inner ((last (tuples))[0])\n                   (show ((last (tuples))[2]));\n    }\n\n    return _Type (FUNCTION,\n                  '',\n                  '',\n                  types.length,\n                  format,\n                  [AnyFunction],\n                  K (K (true)),\n                  tuples);\n  }\n\n  //# HtmlElement :: Type\n  //.\n  //. Type comprising every [HTML element][].\n  var HtmlElement = NullaryTypeWithUrl\n    ('HtmlElement')\n    ([])\n    (function(x) {\n       return /^\\[object HTML.+Element\\]$/.test (toString.call (x));\n     });\n\n  //# Identity :: Type -> Type\n  //.\n  //. [Identity][] type constructor.\n  var Identity = UnaryTypeWithUrl\n    ('Identity')\n    ([])\n    (typeEq ('sanctuary-identity/Identity@1'))\n    (I);\n\n  //# Maybe :: Type -> Type\n  //.\n  //. [Maybe][] type constructor.\n  var Maybe = UnaryTypeWithUrl\n    ('Maybe')\n    ([])\n    (typeEq ('sanctuary-maybe/Maybe@1'))\n    (I);\n\n  //# NonEmpty :: Type -> Type\n  //.\n  //. Constructor for non-empty types. `$.NonEmpty ($.String)`, for example, is\n  //. the type comprising every [`String`][] value except `''`.\n  //.\n  //. The given type must satisfy the [Monoid][] and [Setoid][] specifications.\n  var NonEmpty = UnaryTypeWithUrl\n    ('NonEmpty')\n    ([])\n    (function(x) {\n       return Z.Monoid.test (x) &&\n              Z.Setoid.test (x) &&\n              !(Z.equals (x, Z.empty (x.constructor)));\n     })\n    (function(monoid) { return [monoid]; });\n\n  //# Null :: Type\n  //.\n  //. Type whose sole member is `null`.\n  var Null = NullaryTypeWithUrl\n    ('Null')\n    ([])\n    (typeEq ('Null'));\n\n  //# Nullable :: Type -> Type\n  //.\n  //. Constructor for types that include `null` as a member.\n  var Nullable = UnaryTypeWithUrl\n    ('Nullable')\n    ([])\n    (K (true))\n    (function(nullable) {\n       // eslint-disable-next-line eqeqeq\n       return nullable === null ? [] : [nullable];\n     });\n\n  //# Number :: Type\n  //.\n  //. Type comprising every primitive Number value (including `NaN`).\n  var Number_ = NullaryTypeWithUrl\n    ('Number')\n    ([])\n    (typeofEq ('number'));\n\n  function nonZero(x) { return x !== 0; }\n  function nonNegative(x) { return x >= 0; }\n  function positive(x) { return x > 0; }\n  function negative(x) { return x < 0; }\n\n  //# PositiveNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value greater than zero.\n  var PositiveNumber = NullaryTypeWithUrl\n    ('PositiveNumber')\n    ([Number_])\n    (positive);\n\n  //# NegativeNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value less than zero.\n  var NegativeNumber = NullaryTypeWithUrl\n    ('NegativeNumber')\n    ([Number_])\n    (negative);\n\n  //# ValidNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value except `NaN`.\n  var ValidNumber = NullaryTypeWithUrl\n    ('ValidNumber')\n    ([Number_])\n    (complement (isNaN));\n\n  //# NonZeroValidNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `0` and `-0`.\n  var NonZeroValidNumber = NullaryTypeWithUrl\n    ('NonZeroValidNumber')\n    ([ValidNumber])\n    (nonZero);\n\n  //# FiniteNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `Infinity` and\n  //. `-Infinity`.\n  var FiniteNumber = NullaryTypeWithUrl\n    ('FiniteNumber')\n    ([ValidNumber])\n    (isFinite);\n\n  //# NonZeroFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value except `0` and `-0`.\n  var NonZeroFiniteNumber = NullaryTypeWithUrl\n    ('NonZeroFiniteNumber')\n    ([FiniteNumber])\n    (nonZero);\n\n  //# PositiveFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value greater than zero.\n  var PositiveFiniteNumber = NullaryTypeWithUrl\n    ('PositiveFiniteNumber')\n    ([FiniteNumber])\n    (positive);\n\n  //# NegativeFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value less than zero.\n  var NegativeFiniteNumber = NullaryTypeWithUrl\n    ('NegativeFiniteNumber')\n    ([FiniteNumber])\n    (negative);\n\n  //# Integer :: Type\n  //.\n  //. Type comprising every integer in the range\n  //. [[`Number.MIN_SAFE_INTEGER`][min] .. [`Number.MAX_SAFE_INTEGER`][max]].\n  var Integer = NullaryTypeWithUrl\n    ('Integer')\n    ([ValidNumber])\n    (function(x) {\n       return Math.floor (x) === x &&\n              x >= MIN_SAFE_INTEGER &&\n              x <= MAX_SAFE_INTEGER;\n     });\n\n  //# NonZeroInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value except `0` and `-0`.\n  var NonZeroInteger = NullaryTypeWithUrl\n    ('NonZeroInteger')\n    ([Integer])\n    (nonZero);\n\n  //# NonNegativeInteger :: Type\n  //.\n  //. Type comprising every non-negative [`Integer`][] value (including `-0`).\n  //. Also known as the set of natural numbers under ISO 80000-2:2009.\n  var NonNegativeInteger = NullaryTypeWithUrl\n    ('NonNegativeInteger')\n    ([Integer])\n    (nonNegative);\n\n  //# PositiveInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value greater than zero.\n  var PositiveInteger = NullaryTypeWithUrl\n    ('PositiveInteger')\n    ([Integer])\n    (positive);\n\n  //# NegativeInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value less than zero.\n  var NegativeInteger = NullaryTypeWithUrl\n    ('NegativeInteger')\n    ([Integer])\n    (negative);\n\n  //# Object :: Type\n  //.\n  //. Type comprising every \"plain\" Object value. Specifically, values\n  //. created via:\n  //.\n  //.   - object literal syntax;\n  //.   - [`Object.create`][]; or\n  //.   - the `new` operator in conjunction with `Object` or a custom\n  //.     constructor function.\n  var Object_ = NullaryTypeWithUrl\n    ('Object')\n    ([])\n    (typeEq ('Object'));\n\n  //# Pair :: Type -> Type -> Type\n  //.\n  //. [Pair][] type constructor.\n  var Pair = BinaryTypeWithUrl\n    ('Pair')\n    ([])\n    (typeEq ('sanctuary-pair/Pair@1'))\n    (function(pair) { return [pair.fst]; })\n    (function(pair) { return [pair.snd]; });\n\n  //# RegExp :: Type\n  //.\n  //. Type comprising every RegExp value.\n  var RegExp_ = NullaryTypeWithUrl\n    ('RegExp')\n    ([])\n    (typeEq ('RegExp'));\n\n  //# GlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `true`.\n  //.\n  //. See also [`NonGlobalRegExp`][].\n  var GlobalRegExp = NullaryTypeWithUrl\n    ('GlobalRegExp')\n    ([RegExp_])\n    (prop ('global'));\n\n  //# NonGlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `false`.\n  //.\n  //. See also [`GlobalRegExp`][].\n  var NonGlobalRegExp = NullaryTypeWithUrl\n    ('NonGlobalRegExp')\n    ([RegExp_])\n    (complement (prop ('global')));\n\n  //# StrMap :: Type -> Type\n  //.\n  //. Constructor for homogeneous Object types.\n  //.\n  //. `{foo: 1, bar: 2, baz: 3}`, for example, is a member of `StrMap Number`;\n  //. `{foo: 1, bar: 2, baz: 'XXX'}` is not.\n  var StrMap = UnaryTypeWithUrl\n    ('StrMap')\n    ([Object_])\n    (K (true))\n    (I);\n\n  //# String :: Type\n  //.\n  //. Type comprising every primitive String value.\n  var String_ = NullaryTypeWithUrl\n    ('String')\n    ([])\n    (typeofEq ('string'));\n\n  //# RegexFlags :: Type\n  //.\n  //. Type comprising the canonical RegExp flags:\n  //.\n  //.   - `''`\n  //.   - `'g'`\n  //.   - `'i'`\n  //.   - `'m'`\n  //.   - `'gi'`\n  //.   - `'gm'`\n  //.   - `'im'`\n  //.   - `'gim'`\n  var RegexFlags = NullaryTypeWithUrl\n    ('RegexFlags')\n    ([String_])\n    (function(s) { return /^g?i?m?$/.test (s); });\n\n  //# Symbol :: Type\n  //.\n  //. Type comprising every Symbol value.\n  var Symbol_ = NullaryTypeWithUrl\n    ('Symbol')\n    ([])\n    (typeofEq ('symbol'));\n\n  //# Type :: Type\n  //.\n  //. Type comprising every `Type` value.\n  var Type = NullaryTypeWithUrl\n    ('Type')\n    ([])\n    (typeEq ('sanctuary-def/Type@1'));\n\n  //# TypeClass :: Type\n  //.\n  //. Type comprising every [`TypeClass`][] value.\n  var TypeClass = NullaryTypeWithUrl\n    ('TypeClass')\n    ([])\n    (typeEq ('sanctuary-type-classes/TypeClass@1'));\n\n  //# Undefined :: Type\n  //.\n  //. Type whose sole member is `undefined`.\n  var Undefined = NullaryTypeWithUrl\n    ('Undefined')\n    ([])\n    (typeEq ('Undefined'));\n\n  //# env :: Array Type\n  //.\n  //. An array of [types][]:\n  //.\n  //.   - <code>[AnyFunction](#AnyFunction)</code>\n  //.   - <code>[Arguments](#Arguments)</code>\n  //.   - <code>[Array](#Array) ([Unknown][])</code>\n  //.   - <code>[Array2](#Array2) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[Boolean](#Boolean)</code>\n  //.   - <code>[Date](#Date)</code>\n  //.   - <code>[Descending](#Descending) ([Unknown][])</code>\n  //.   - <code>[Either](#Either) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[Error](#Error)</code>\n  //.   - <code>[Fn](#Fn) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[HtmlElement](#HtmlElement)</code>\n  //.   - <code>[Identity](#Identity) ([Unknown][])</code>\n  //.   - <code>[Maybe](#Maybe) ([Unknown][])</code>\n  //.   - <code>[Null](#Null)</code>\n  //.   - <code>[Number](#Number)</code>\n  //.   - <code>[Object](#Object)</code>\n  //.   - <code>[Pair](#Pair) ([Unknown][]) ([Unknown][])</code>\n  //.   - <code>[RegExp](#RegExp)</code>\n  //.   - <code>[StrMap](#StrMap) ([Unknown][])</code>\n  //.   - <code>[String](#String)</code>\n  //.   - <code>[Symbol](#Symbol)</code>\n  //.   - <code>[Type](#Type)</code>\n  //.   - <code>[TypeClass](#TypeClass)</code>\n  //.   - <code>[Undefined](#Undefined)</code>\n  var env = [\n    AnyFunction,\n    Arguments,\n    Array_ (Unknown),\n    Array2 (Unknown) (Unknown),\n    Boolean_,\n    Date_,\n    Descending (Unknown),\n    Either_ (Unknown) (Unknown),\n    Error_,\n    Fn (Unknown) (Unknown),\n    HtmlElement,\n    Identity (Unknown),\n    Maybe (Unknown),\n    Null,\n    Number_,\n    Object_,\n    Pair (Unknown) (Unknown),\n    RegExp_,\n    StrMap (Unknown),\n    String_,\n    Symbol_,\n    Type,\n    TypeClass,\n    Undefined\n  ];\n\n  //  Unchecked :: String -> Type\n  function Unchecked(s) { return NullaryType (s) ('') ([]) (K (true)); }\n\n  //  production :: Boolean\n  var production =\n    typeof process !== 'undefined' &&\n    /* global process:false */\n    process != null &&\n    process.env != null &&\n    process.env.NODE_ENV === 'production';\n\n  //  numbers :: Array String\n  var numbers = [\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine'\n  ];\n\n  //  numArgs :: Integer -> String\n  function numArgs(n) {\n    return (n < numbers.length ? numbers[n] : show (n)) + ' ' +\n           (n === 1 ? 'argument' : 'arguments');\n  }\n\n  //  expandUnknown\n  //  :: Array Type\n  //  -> Array Object\n  //  -> Any\n  //  -> (a -> Array b)\n  //  -> Type\n  //  -> Array Type\n  function expandUnknown(env) {\n    return function(seen) {\n      return function(value) {\n        return function(extractor) {\n          return function(type) {\n            return type.type === UNKNOWN ?\n                   _determineActualTypes (env, seen, extractor (value)) :\n                   [type];\n          };\n        };\n      };\n    };\n  }\n\n  //  _determineActualTypes :: ... -> Array Type\n  function _determineActualTypes(\n    env,            // :: Array Type\n    seen,           // :: Array Object\n    values          // :: Array Any\n  ) {\n    var expandUnknown4 = expandUnknown (env);\n\n    function refine(types, value) {\n      var seen$;\n      if (typeof value === 'object' && value != null ||\n          typeof value === 'function') {\n        //  Abort if a circular reference is encountered; add the current\n        //  object to the array of seen objects otherwise.\n        if (seen.indexOf (value) >= 0) return [];\n        seen$ = Z.concat (seen, [value]);\n      } else {\n        seen$ = seen;\n      }\n      var expandUnknown2 = expandUnknown4 (seen$) (value);\n      return Z.chain (function(t) {\n        return (\n          (t.validate (env) (value)).isLeft ?\n            [] :\n          t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknown2 (t.extractors.$1) (t.types.$1)) :\n          t.type === BINARY ?\n            Z.lift2 (fromBinaryType (t),\n                     expandUnknown2 (t.extractors.$1) (t.types.$1),\n                     expandUnknown2 (t.extractors.$2) (t.types.$2)) :\n          // else\n            [t]\n        );\n      }, types);\n    }\n\n    return isEmpty (values) ?\n      [Unknown] :\n      or (Z.reduce (refine, env, values), [Inconsistent]);\n  }\n\n  //  isConsistent :: Type -> Boolean\n  function isConsistent(t) {\n    return t.type === UNARY   ? isConsistent (t.types.$1) :\n           t.type === BINARY  ? isConsistent (t.types.$1) &&\n                                isConsistent (t.types.$2) :\n           /* else */           t.type !== INCONSISTENT;\n  }\n\n  //  determineActualTypesStrict :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesStrict(env, values) {\n    return Z.filter (isConsistent,\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  determineActualTypesLoose :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesLoose(env, values) {\n    return Z.reject (function(t) { return t.type === INCONSISTENT; },\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  TypeInfo = { name :: String\n  //             , constraints :: StrMap (Array TypeClass)\n  //             , types :: NonEmpty (Array Type) }\n  //\n  //  TypeVarMap = StrMap { types :: Array Type\n  //                      , valuesByPath :: StrMap (Array Any) }\n  //\n  //  PropPath = Array (Number | String)\n\n  //  updateTypeVarMap :: ... -> TypeVarMap\n  function updateTypeVarMap(\n    env,            // :: Array Type\n    typeVarMap,     // :: TypeVarMap\n    typeVar,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var $typeVarMap = {};\n    for (var typeVarName in typeVarMap) {\n      var entry = typeVarMap[typeVarName];\n      var $entry = {types: entry.types.slice (), valuesByPath: {}};\n      for (var k in entry.valuesByPath) {\n        $entry.valuesByPath[k] = entry.valuesByPath[k].slice ();\n      }\n      $typeVarMap[typeVarName] = $entry;\n    }\n    if (!(hasOwnProperty.call ($typeVarMap, typeVar.name))) {\n      $typeVarMap[typeVar.name] = {\n        types: Z.filter (arityGte (typeVar.arity), env),\n        valuesByPath: {}\n      };\n    }\n\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    if (!(hasOwnProperty.call ($typeVarMap[typeVar.name].valuesByPath, key))) {\n      $typeVarMap[typeVar.name].valuesByPath[key] = [];\n    }\n\n    var isValid = test (env);\n\n    var expandUnknownStrict = B (B (B (filter (isConsistent))))\n                                (expandUnknown (env) ([]));\n\n    values.forEach (function(value) {\n      var expandUnknownStrict2 = expandUnknownStrict (value);\n      $typeVarMap[typeVar.name].valuesByPath[key].push (value);\n      $typeVarMap[typeVar.name].types = Z.chain (function(t) {\n        return (\n          !(isValid (t) (value)) ?\n            [] :\n          typeVar.arity === 0 && t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknownStrict2 (t.extractors.$1) (t.types.$1)) :\n          typeVar.arity === 0 && t.type === BINARY ?\n            Z.lift2 (fromBinaryType (t),\n                     expandUnknownStrict2 (t.extractors.$1) (t.types.$1),\n                     expandUnknownStrict2 (t.extractors.$2) (t.types.$2)) :\n          // else\n            [t]\n        );\n      }, $typeVarMap[typeVar.name].types);\n    });\n\n    return $typeVarMap;\n  }\n\n  //  underlineTypeVars :: (TypeInfo, StrMap (Array Any)) -> String\n  function underlineTypeVars(typeInfo, valuesByPath) {\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var paths = Z.map (JSON.parse, sortedKeys (valuesByPath));\n    return underline (\n      typeInfo,\n      K (K (_)),\n      function(index) {\n        return function(f) {\n          return function(t) {\n            return function(propPath) {\n              var indexedPropPath = Z.concat ([index], propPath);\n              return function(s) {\n                if (paths.some (isPrefix (indexedPropPath))) {\n                  var key = JSON.stringify (indexedPropPath);\n                  if (!(hasOwnProperty.call (valuesByPath, key))) return s;\n                  if (!(isEmpty (valuesByPath[key]))) return f (s);\n                }\n                return _ (s);\n              };\n            };\n          };\n        };\n      }\n    );\n  }\n\n  //  satisfactoryTypes :: ... -> Either (() -> Error)\n  //                                     { typeVarMap :: TypeVarMap\n  //                                     , types :: Array Type }\n  function satisfactoryTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeVarMap,     // :: TypeVarMap\n    expType,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var recur = satisfactoryTypes;\n\n    for (var idx = 0; idx < values.length; idx += 1) {\n      var result = expType.validate (env) (values[idx]);\n      if (result.isLeft) {\n        return Left (function() {\n          return invalidValue (env,\n                               typeInfo,\n                               index,\n                               Z.concat (propPath, result.value.propPath),\n                               result.value.value);\n        });\n      }\n    }\n\n    switch (expType.type) {\n\n      case VARIABLE:\n        var typeVarName = expType.name;\n        var constraints = typeInfo.constraints;\n        if (hasOwnProperty.call (constraints, typeVarName)) {\n          var typeClasses = constraints[typeVarName];\n          for (idx = 0; idx < values.length; idx += 1) {\n            for (var idx2 = 0; idx2 < typeClasses.length; idx2 += 1) {\n              if (!(typeClasses[idx2].test (values[idx]))) {\n                return Left (function() {\n                  return typeClassConstraintViolation (\n                    env,\n                    typeInfo,\n                    typeClasses[idx2],\n                    index,\n                    propPath,\n                    values[idx],\n                    typeVarMap\n                  );\n                });\n              }\n            }\n          }\n        }\n\n        var typeVarMap$ = updateTypeVarMap (env,\n                                            typeVarMap,\n                                            expType,\n                                            index,\n                                            propPath,\n                                            values);\n\n        var okTypes = typeVarMap$[typeVarName].types;\n        return isEmpty (okTypes) ?\n          Left (function() {\n            return typeVarConstraintViolation (\n              env,\n              typeInfo,\n              index,\n              propPath,\n              typeVarMap$[typeVarName].valuesByPath\n            );\n          }) :\n          Z.reduce (function(e, t) {\n            return Z.chain (function(r) {\n              //  The `a` in `Functor f => f a` corresponds to the `a`\n              //  in `Maybe a` but to the `b` in `Either a b`. A type\n              //  variable's $1 will correspond to either $1 or $2 of\n              //  the actual type depending on the actual type's arity.\n              var offset = t.arity - expType.arity;\n              return expType.keys.reduce (function(e, k, idx) {\n                var extractor = t.extractors[t.keys[offset + idx]];\n                return Z.reduce (function(e, x) {\n                  return Z.chain (function(r) {\n                    return recur (env,\n                                  typeInfo,\n                                  r.typeVarMap,\n                                  expType.types[k],\n                                  index,\n                                  Z.concat (propPath, [k]),\n                                  [x]);\n                  }, e);\n                }, e, Z.chain (extractor, values));\n              }, Right (r));\n            }, e);\n          }, Right ({typeVarMap: typeVarMap$, types: okTypes}), okTypes);\n\n      case UNARY:\n        return Z.map (\n          function(result) {\n            return {\n              typeVarMap: result.typeVarMap,\n              types: Z.map (fromUnaryType (expType),\n                            or (result.types, [expType.types.$1]))\n            };\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.extractors.$1, values))\n        );\n\n      case BINARY:\n        return Z.chain (\n          function(result) {\n            var $1s = result.types;\n            return Z.map (\n              function(result) {\n                var $2s = result.types;\n                return {\n                  typeVarMap: result.typeVarMap,\n                  types: Z.lift2 (fromBinaryType (expType),\n                                  or ($1s, [expType.types.$1]),\n                                  or ($2s, [expType.types.$2]))\n                };\n              },\n              recur (env,\n                     typeInfo,\n                     result.typeVarMap,\n                     expType.types.$2,\n                     index,\n                     Z.concat (propPath, ['$2']),\n                     Z.chain (expType.extractors.$2, values))\n            );\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.extractors.$1, values))\n        );\n\n      case RECORD:\n        return Z.reduce (function(e, k) {\n          return Z.chain (function(r) {\n            return recur (env,\n                          typeInfo,\n                          r.typeVarMap,\n                          expType.types[k],\n                          index,\n                          Z.concat (propPath, [k]),\n                          Z.chain (expType.extractors[k], values));\n          }, e);\n        }, Right ({typeVarMap: typeVarMap, types: [expType]}), expType.keys);\n\n      default:\n        return Right ({typeVarMap: typeVarMap, types: [expType]});\n    }\n  }\n\n  //# test :: Array Type -> Type -> a -> Boolean\n  //.\n  //. Takes an environment, a type, and any value. Returns `true` if the value\n  //. is a member of the type; `false` otherwise.\n  //.\n  //. The environment is only significant if the type contains\n  //. [type variables][].\n  function test(env) {\n    return function(t) {\n      return function(x) {\n        var typeInfo = {name: 'name', constraints: {}, types: [t]};\n        return (satisfactoryTypes (env, typeInfo, {}, t, 0, [], [x])).isRight;\n      };\n    };\n  }\n\n  //. ### Type constructors\n  //.\n  //. sanctuary-def provides several functions for defining types.\n\n  //# NullaryType :: String -> String -> Array Type -> (Any -> Boolean) -> Type\n  //.\n  //. Type constructor for types with no type variables (such as [`Number`][]).\n  //.\n  //. To define a nullary type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`); and\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Integer :: Type\n  //. const Integer = $.NullaryType\n  //.   ('Integer')\n  //.   ('http://example.com/my-package#Integer')\n  //.   ([])\n  //.   (x => typeof x === 'number' &&\n  //.         Math.floor (x) === x &&\n  //.         x >= Number.MIN_SAFE_INTEGER &&\n  //.         x <= Number.MAX_SAFE_INTEGER);\n  //.\n  //. //    NonZeroInteger :: Type\n  //. const NonZeroInteger = $.NullaryType\n  //.   ('NonZeroInteger')\n  //.   ('http://example.com/my-package#NonZeroInteger')\n  //.   ([Integer])\n  //.   (x => x !== 0);\n  //.\n  //. //    rem :: Integer -> NonZeroInteger -> Integer\n  //. const rem =\n  //. def ('rem')\n  //.     ({})\n  //.     ([Integer, NonZeroInteger, Integer])\n  //.     (x => y => x % y);\n  //.\n  //. rem (42) (5);\n  //. // => 2\n  //.\n  //. rem (0.5);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //          ^^^^^^^\n  //. //             1\n  //. //\n  //. //   1)  0.5 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Integer’.\n  //. //\n  //. //   See http://example.com/my-package#Integer for information about the Integer type.\n  //.\n  //. rem (42) (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //                     ^^^^^^^^^^^^^^\n  //. //                           1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘NonZeroInteger’.\n  //. //\n  //. //   See http://example.com/my-package#NonZeroInteger for information about the NonZeroInteger type.\n  //. ```\n  function NullaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return _Type (NULLARY, name, url, 0, null, supertypes, K (test), []);\n        };\n      };\n    };\n  }\n\n  //# UnaryType :: Foldable f => String -> String -> Array Type -> (Any -> Boolean) -> (t a -> f a) -> Type -> Type\n  //.\n  //. Type constructor for types with one type variable (such as [`Array`][]).\n  //.\n  //. To define a unary type `t a` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`);\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t x` for some type `x`;\n  //.\n  //.   - a function that takes any value of type `t a` and returns the values\n  //.     of type `a` contained in the `t`; and\n  //.\n  //.   - the type of `a`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const show = require ('sanctuary-show');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    MaybeTypeRep :: TypeRep Maybe\n  //. const MaybeTypeRep = {'@@type': 'my-package/Maybe'};\n  //.\n  //. //    Maybe :: Type -> Type\n  //. const Maybe = $.UnaryType\n  //.   ('Maybe')\n  //.   ('http://example.com/my-package#Maybe')\n  //.   ([])\n  //.   (x => type (x) === MaybeTypeRep['@@type'])\n  //.   (maybe => maybe.isJust ? [maybe.value] : []);\n  //.\n  //. //    Nothing :: Maybe a\n  //. const Nothing = {\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': false,\n  //.   'isNothing': true,\n  //.   '@@show': () => 'Nothing',\n  //. };\n  //.\n  //. //    Just :: a -> Maybe a\n  //. const Just = x => ({\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': true,\n  //.   'isNothing': false,\n  //.   '@@show': () => `Just (${show (x)})`,\n  //.   'value': x,\n  //. });\n  //.\n  //. //    fromMaybe :: a -> Maybe a -> a\n  //. const fromMaybe =\n  //. def ('fromMaybe')\n  //.     ({})\n  //.     ([a, Maybe (a), a])\n  //.     (x => m => m.isJust ? m.value : x);\n  //.\n  //. fromMaybe (0) (Just (42));\n  //. // => 42\n  //.\n  //. fromMaybe (0) (Nothing);\n  //. // => 0\n  //.\n  //. fromMaybe (0) (Just ('XXX'));\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   fromMaybe :: a -> Maybe a -> a\n  //. //                ^          ^\n  //. //                1          2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"XXX\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function UnaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return function(_1) {\n            return function($1) {\n              return _Type (UNARY,\n                            name,\n                            url,\n                            1,\n                            null,\n                            supertypes,\n                            K (test),\n                            [['$1', _1, $1]]);\n            };\n          };\n        };\n      };\n    };\n  }\n\n  //  fromUnaryType :: Type -> Type -> Type\n  function fromUnaryType(t) {\n    return UnaryType (t.name)\n                     (t.url)\n                     (t.supertypes)\n                     (t._test ([]))\n                     (t._extractors.$1);\n  }\n\n  //# BinaryType :: Foldable f => String -> String -> Array Type -> (Any -> Boolean) -> (t a b -> f a) -> (t a b -> f b) -> Type -> Type -> Type\n  //.\n  //. Type constructor for types with two type variables (such as\n  //. [`Array2`][]).\n  //.\n  //. To define a binary type `t a b` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`);\n  //.\n  //.   - a predicate that accepts any value that is a member of every one of\n  //.     the given supertypes, and returns `true` if (and only if) the value\n  //.     is a member of `t x y` for some types `x` and `y`;\n  //.\n  //.   - a function that takes any value of type `t a b` and returns the\n  //.     values of type `a` contained in the `t`;\n  //.\n  //.   - a function that takes any value of type `t a b` and returns the\n  //.     values of type `b` contained in the `t`;\n  //.\n  //.   - the type of `a`; and\n  //.\n  //.   - the type of `b`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    PairTypeRep :: TypeRep Pair\n  //. const PairTypeRep = {'@@type': 'my-package/Pair'};\n  //.\n  //. //    $Pair :: Type -> Type -> Type\n  //. const $Pair = $.BinaryType\n  //.   ('Pair')\n  //.   ('http://example.com/my-package#Pair')\n  //.   ([])\n  //.   (x => type (x) === PairTypeRep['@@type'])\n  //.   (({fst}) => [fst])\n  //.   (({snd}) => [snd]);\n  //.\n  //. //    Pair :: a -> b -> Pair a b\n  //. const Pair =\n  //. def ('Pair')\n  //.     ({})\n  //.     ([a, b, $Pair (a) (b)])\n  //.     (fst => snd => ({\n  //.        'constructor': PairTypeRep,\n  //.        'fst': fst,\n  //.        'snd': snd,\n  //.        '@@show': () => `Pair (${show (fst)}) (${show (snd)})`,\n  //.      }));\n  //.\n  //. //    Rank :: Type\n  //. const Rank = $.NullaryType\n  //.   ('Rank')\n  //.   ('http://example.com/my-package#Rank')\n  //.   ([$.String])\n  //.   (x => /^(A|2|3|4|5|6|7|8|9|10|J|Q|K)$/.test (x));\n  //.\n  //. //    Suit :: Type\n  //. const Suit = $.NullaryType\n  //.   ('Suit')\n  //.   ('http://example.com/my-package#Suit')\n  //.   ([$.String])\n  //.   (x => /^[\\u2660\\u2663\\u2665\\u2666]$/.test (x));\n  //.\n  //. //    Card :: Type\n  //. const Card = $Pair (Rank) (Suit);\n  //.\n  //. //    showCard :: Card -> String\n  //. const showCard =\n  //. def ('showCard')\n  //.     ({})\n  //.     ([Card, $.String])\n  //.     (card => card.fst + card.snd);\n  //.\n  //. showCard (Pair ('A') ('♠'));\n  //. // => 'A♠'\n  //.\n  //. showCard (Pair ('X') ('♠'));\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   showCard :: Pair Rank Suit -> String\n  //. //                    ^^^^\n  //. //                     1\n  //. //\n  //. //   1)  \"X\" :: String\n  //. //\n  //. //   The value at position 1 is not a member of ‘Rank’.\n  //. //\n  //. //   See http://example.com/my-package#Rank for information about the Rank type.\n  //. ```\n  function BinaryType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(test) {\n          return function(_1) {\n            return function(_2) {\n              return function($1) {\n                return function($2) {\n                  return _Type (BINARY,\n                                name,\n                                url,\n                                2,\n                                null,\n                                supertypes,\n                                K (test),\n                                [['$1', _1, $1],\n                                 ['$2', _2, $2]]);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  }\n\n  //  fromBinaryType :: (Type -> Type -> Type) -> Type -> Type -> Type\n  function fromBinaryType(t) {\n    return BinaryType (t.name)\n                      (t.url)\n                      (t.supertypes)\n                      (t._test ([]))\n                      (t._extractors.$1)\n                      (t._extractors.$2);\n  }\n\n  //# EnumType :: String -> String -> Array Any -> Type\n  //.\n  //. Type constructor for [enumerated types][] (such as [`RegexFlags`][]).\n  //.\n  //. To define an enumerated type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`); and\n  //.\n  //.   - an array of distinct values.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Denomination :: Type\n  //. const Denomination = $.EnumType\n  //.   ('Denomination')\n  //.   ('http://example.com/my-package#Denomination')\n  //.   ([10, 20, 50, 100, 200]);\n  //. ```\n  function EnumType(name) {\n    return function(url) {\n      return B (NullaryType (name) (url) ([])) (memberOf);\n    };\n  }\n\n  //# RecordType :: StrMap Type -> Type\n  //.\n  //. `RecordType` is used to construct anonymous record types. The type\n  //. definition specifies the name and type of each required field. A field is\n  //. an enumerable property (either an own property or an inherited property).\n  //.\n  //. To define an anonymous record type one must provide:\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Point :: Type\n  //. const Point = $.RecordType ({x: $.FiniteNumber, y: $.FiniteNumber});\n  //.\n  //. //    dist :: Point -> Point -> FiniteNumber\n  //. const dist =\n  //. def ('dist')\n  //.     ({})\n  //.     ([Point, Point, $.FiniteNumber])\n  //.     (p => q => Math.sqrt (Math.pow (p.x - q.x, 2) +\n  //.                           Math.pow (p.y - q.y, 2)));\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4, color: 'red'});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: NaN, y: NaN});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //                                                              ^^^^^^^^^^^^\n  //. //                                                                   1\n  //. //\n  //. //   1)  NaN :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘FiniteNumber’.\n  //.\n  //. dist (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  //. //                              1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘{ x :: FiniteNumber, y :: FiniteNumber }’.\n  //. ```\n  function RecordType(fields) {\n    var keys = sortedKeys (fields);\n\n    function format(outer, inner) {\n      if (isEmpty (keys)) return outer ('{}');\n      var reprs = Z.map (function(k) {\n        var t = fields[k];\n        return outer (' ') +\n               outer (/^(?!\\d)[$\\w]+$/.test (k) ? k : show (k)) +\n               outer (' :: ') +\n               inner (k) (show (t));\n      }, keys);\n      return wrap (outer ('{')) (outer (' }')) (joinWith (outer (','), reprs));\n    }\n\n    function test(env) {\n      return function(x) {\n        if (x == null) return false;\n        var missing = {};\n        keys.forEach (function(k) { missing[k] = k; });\n        for (var k in x) delete missing[k];\n        return isEmpty (missing);\n      };\n    }\n\n    var tuples = keys.map (function(k) {\n      return [k, function(x) { return [x[k]]; }, fields[k]];\n    });\n\n    return _Type (RECORD, '', '', 0, format, [], test, tuples);\n  }\n\n  //# NamedRecordType :: NonEmpty String -> String -> Array Type -> StrMap Type -> Type\n  //.\n  //. `NamedRecordType` is used to construct named record types. The type\n  //. definition specifies the name and type of each required field. A field is\n  //. an enumerable property (either an own property or an inherited property).\n  //.\n  //. To define a named record type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - an array of supertypes (exposed as `t.supertypes`); and\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Circle :: Type\n  //. const Circle = $.NamedRecordType\n  //.   ('my-package/Circle')\n  //.   ('http://example.com/my-package#Circle')\n  //.   ([])\n  //.   ({radius: $.PositiveFiniteNumber});\n  //.\n  //. //    Cylinder :: Type\n  //. const Cylinder = $.NamedRecordType\n  //.   ('Cylinder')\n  //.   ('http://example.com/my-package#Cylinder')\n  //.   ([Circle])\n  //.   ({height: $.PositiveFiniteNumber});\n  //.\n  //. //    volume :: Cylinder -> PositiveFiniteNumber\n  //. const volume =\n  //. def ('volume')\n  //.     ({})\n  //.     ([Cylinder, $.FiniteNumber])\n  //.     (cyl => Math.PI * cyl.radius * cyl.radius * cyl.height);\n  //.\n  //. volume ({radius: 2, height: 10});\n  //. // => 125.66370614359172\n  //.\n  //. volume ({radius: 2});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   volume :: Cylinder -> FiniteNumber\n  //. //             ^^^^^^^^\n  //. //                1\n  //. //\n  //. //   1)  {\"radius\": 2} :: Object, StrMap Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Cylinder’.\n  //. //\n  //. //   See http://example.com/my-package#Cylinder for information about the Cylinder type.\n  //. ```\n  function NamedRecordType(name) {\n    return function(url) {\n      return function(supertypes) {\n        return function(fields) {\n          var keys = sortedKeys (fields);\n\n          function format(outer, inner) {\n            return outer (name);\n          }\n\n          function test(env) {\n            var test2 = _test (env);\n            return function(x) {\n              if (x == null) return false;\n              var missing = {};\n              keys.forEach (function(k) { missing[k] = k; });\n              for (var k in x) delete missing[k];\n              return isEmpty (missing) &&\n                     keys.every (function(k) {\n                       return test2 (x[k]) (fields[k]);\n                     });\n            };\n          }\n\n          var tuples = keys.map (function(k) {\n            return [k, function(x) { return [x[k]]; }, fields[k]];\n          });\n\n          return _Type (RECORD,\n                        name,\n                        url,\n                        0,\n                        format,\n                        supertypes,\n                        test,\n                        tuples);\n        };\n      };\n    };\n  }\n\n  //  typeVarPred :: NonNegativeInteger -> Array Type -> Any -> Boolean\n  function typeVarPred(arity) {\n    var filter = arityGte (arity);\n    return function(env) {\n      var test2 = _test (env);\n      return function(x) {\n        var test1 = test2 (x);\n        return env.some (function(t) { return filter (t) && test1 (t); });\n      };\n    };\n  }\n\n  //# TypeVariable :: String -> Type\n  //.\n  //. Polymorphism is powerful. Not being able to define a function for\n  //. all types would be very limiting indeed: one couldn't even define the\n  //. identity function!\n  //.\n  //. Before defining a polymorphic function one must define one or more type\n  //. variables:\n  //.\n  //. ```javascript\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //.\n  //. //    id :: a -> a\n  //. const id = def ('id') ({}) ([a, a]) (x => x);\n  //.\n  //. id (42);\n  //. // => 42\n  //.\n  //. id (null);\n  //. // => null\n  //. ```\n  //.\n  //. The same type variable may be used in multiple positions, creating a\n  //. constraint:\n  //.\n  //. ```javascript\n  //. //    cmp :: a -> a -> Number\n  //. const cmp =\n  //. def ('cmp')\n  //.     ({})\n  //.     ([a, a, $.Number])\n  //.     (x => y => x < y ? -1 : x > y ? 1 : 0);\n  //.\n  //. cmp (42) (42);\n  //. // => 0\n  //.\n  //. cmp ('a') ('z');\n  //. // => -1\n  //.\n  //. cmp ('z') ('a');\n  //. // => 1\n  //.\n  //. cmp (0) ('1');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   cmp :: a -> a -> Number\n  //. //          ^    ^\n  //. //          1    2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"1\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function TypeVariable(name) {\n    var tuples = [];\n    var test = typeVarPred (tuples.length);\n    return _Type (VARIABLE, name, '', 0, always2 (name), [], test, tuples);\n  }\n\n  //# UnaryTypeVariable :: String -> Type -> Type\n  //.\n  //. Combines [`UnaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a unary type variable `t a` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`); and\n  //.\n  //.   - the type of `a`.\n  //.\n  //. Consider the type of a generalized `map`:\n  //.\n  //. ```haskell\n  //. map :: Functor f => (a -> b) -> f a -> f b\n  //. ```\n  //.\n  //. `f` is a unary type variable. With two (nullary) type variables, one\n  //. unary type variable, and one [type class][] it's possible to define a\n  //. fully polymorphic `map` function:\n  //.\n  //. ```javascript\n  //. const $ = require ('sanctuary-def');\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //. const f = $.UnaryTypeVariable ('f');\n  //.\n  //. //    map :: Functor f => (a -> b) -> f a -> f b\n  //. const map =\n  //. def ('map')\n  //.     ({f: [Z.Functor]})\n  //.     ([$.Function ([a, b]), f (a), f (b)])\n  //.     (f => functor => Z.map (f, functor));\n  //. ```\n  //.\n  //. Whereas a regular type variable is fully resolved (`a` might become\n  //. `Array (Array String)`, for example), a unary type variable defers to\n  //. its type argument, which may itself be a type variable. The type argument\n  //. corresponds to the type argument of a unary type or the *second* type\n  //. argument of a binary type. The second type argument of `Map k v`, for\n  //. example, is `v`. One could replace `Functor => f` with `Map k` or with\n  //. `Map Integer`, but not with `Map`.\n  //.\n  //. This shallow inspection makes it possible to constrain a value's \"outer\"\n  //. and \"inner\" types independently.\n  function UnaryTypeVariable(name) {\n    return function($1) {\n      var tuples = [['$1', K ([]), $1]];\n      var test = typeVarPred (tuples.length);\n      return _Type (VARIABLE, name, '', 1, null, [], test, tuples);\n    };\n  }\n\n  //# BinaryTypeVariable :: String -> Type -> Type -> Type\n  //.\n  //. Combines [`BinaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a binary type variable `t a b` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`);\n  //.\n  //.   - the type of `a`; and\n  //.\n  //.   - the type of `b`.\n  //.\n  //. The more detailed explanation of [`UnaryTypeVariable`][] also applies to\n  //. `BinaryTypeVariable`.\n  function BinaryTypeVariable(name) {\n    return function($1) {\n      return function($2) {\n        var tuples = [['$1', K ([]), $1],\n                      ['$2', K ([]), $2]];\n        var test = typeVarPred (tuples.length);\n        return _Type (VARIABLE, name, '', 2, null, [], test, tuples);\n      };\n    };\n  }\n\n  //# Thunk :: Type -> Type\n  //.\n  //. `$.Thunk (T)` is shorthand for `$.Function ([T])`, the type comprising\n  //. every nullary function (thunk) that returns a value of type `T`.\n  function Thunk(t) { return Function_ ([t]); }\n\n  //# Predicate :: Type -> Type\n  //.\n  //. `$.Predicate (T)` is shorthand for `$.Fn (T) ($.Boolean)`, the type\n  //. comprising every predicate function that takes a value of type `T`.\n  function Predicate(t) { return Fn (t) (Boolean_); }\n\n  //. ### Type classes\n  //.\n  //. One can trivially define a function of type `String -> String -> String`\n  //. that concatenates two strings. This is overly restrictive, though, since\n  //. other types support concatenation (`Array a`, for example).\n  //.\n  //. One could use a type variable to define a polymorphic \"concat\" function:\n  //.\n  //. ```javascript\n  //. //    _concat :: a -> a -> a\n  //. const _concat =\n  //. def ('_concat')\n  //.     ({})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. _concat ('fizz') ('buzz');\n  //. // => 'fizzbuzz'\n  //.\n  //. _concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. _concat ([1, 2]) ('buzz');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   _concat :: a -> a -> a\n  //. //              ^    ^\n  //. //              1    2\n  //. //\n  //. //   1)  [1, 2] :: Array Number\n  //. //\n  //. //   2)  \"buzz\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  //.\n  //. The type of `_concat` is misleading: it suggests that it can operate on\n  //. any two values of *any* one type. In fact there's an implicit constraint,\n  //. since the type must support concatenation (in [mathematical][semigroup]\n  //. terms, the type must have a [semigroup][FL:Semigroup]). Violating this\n  //. implicit constraint results in a run-time error in the implementation:\n  //.\n  //. ```javascript\n  //. _concat (null) (null);\n  //. // ! TypeError: Cannot read property 'concat' of null\n  //. ```\n  //.\n  //. The solution is to constrain `a` by first defining a [`TypeClass`][]\n  //. value, then specifying the constraint in the definition of the \"concat\"\n  //. function:\n  //.\n  //. ```javascript\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. //    Semigroup :: TypeClass\n  //. const Semigroup = Z.TypeClass (\n  //.   'my-package/Semigroup',\n  //.   'http://example.com/my-package#Semigroup',\n  //.   [],\n  //.   x => x != null && typeof x.concat === 'function'\n  //. );\n  //.\n  //. //    concat :: Semigroup a => a -> a -> a\n  //. const concat =\n  //. def ('concat')\n  //.     ({a: [Semigroup]})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. concat (null) (null);\n  //. // ! TypeError: Type-class constraint violation\n  //. //\n  //. //   concat :: Semigroup a => a -> a -> a\n  //. //             ^^^^^^^^^^^    ^\n  //. //                            1\n  //. //\n  //. //   1)  null :: Null\n  //. //\n  //. //   ‘concat’ requires ‘a’ to satisfy the Semigroup type-class constraint; the value at position 1 does not.\n  //. //\n  //. //   See http://example.com/my-package#Semigroup for information about the my-package/Semigroup type class.\n  //. ```\n  //.\n  //. Multiple constraints may be placed on a type variable by including\n  //. multiple `TypeClass` values in the array (e.g. `{a: [Foo, Bar, Baz]}`).\n\n  //  invalidArgumentsCount :: (TypeInfo, Integer, Integer, Array Any) -> Error\n  //\n  //  This function is used in `curry` when a function defined via `def`\n  //  is applied to too many arguments.\n  function invalidArgumentsCount(typeInfo, index, numArgsExpected, args) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) + ' applied to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return K (K (index_ === index ? f : _));\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  constraintsRepr :: ... -> String\n  function constraintsRepr(\n    constraints,    // :: StrMap (Array TypeClass)\n    outer,          // :: String -> String\n    inner           // :: String -> TypeClass -> String -> String\n  ) {\n    var $reprs = [];\n    (sortedKeys (constraints)).forEach (function(k) {\n      var f = inner (k);\n      constraints[k].forEach (function(typeClass) {\n        $reprs.push (f (typeClass) (stripNamespace (typeClass) + ' ' + k));\n      });\n    });\n    return when ($reprs.length > 0)\n                (wrap ('') (outer (' => ')))\n                (when ($reprs.length > 1)\n                      (parenthesize (outer))\n                      (joinWith (outer (', '), $reprs)));\n  }\n\n  //  label :: String -> String -> String\n  function label(label) {\n    return function(s) {\n      var delta = s.length - label.length;\n      return strRepeat (' ', Math.floor (delta / 2)) + label +\n             strRepeat (' ', Math.ceil (delta / 2));\n    };\n  }\n\n  //  typeVarNames :: Type -> Array String\n  function typeVarNames(t) {\n    return Z.concat (\n      t.type === VARIABLE ? [t.name] : [],\n      Z.chain (function(k) { return typeVarNames (t.types[k]); }, t.keys)\n    );\n  }\n\n  //  showTypeWith :: Array Type -> Type -> String\n  function showTypeWith(types) {\n    var names = Z.chain (typeVarNames, types);\n    return function(t) {\n      var code = 'a'.charCodeAt (0);\n      return when (t.type === FUNCTION)\n                  (parenthesize (I))\n                  ((show (t)).replace (/\\bUnknown\\b/g, function() {\n                     // eslint-disable-next-line no-plusplus\n                     do var name = String.fromCharCode (code++);\n                     while (names.indexOf (name) >= 0);\n                     return name;\n                   }));\n    };\n  }\n\n  //  showValuesAndTypes :: ... -> String\n  function showValuesAndTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    values,         // :: Array Any\n    pos             // :: Integer\n  ) {\n    var showType = showTypeWith (typeInfo.types);\n    return show (pos) + ')  ' + joinWith ('\\n    ', Z.map (function(x) {\n      return show (x) +\n             ' :: ' +\n             joinWith (', ',\n                       or (Z.map (showType,\n                                  determineActualTypesLoose (env, [x])),\n                           ['(no types)']));\n    }, values));\n  }\n\n  //  typeSignature :: TypeInfo -> String\n  function typeSignature(typeInfo) {\n    return typeInfo.name + ' :: ' +\n           constraintsRepr (typeInfo.constraints, I, K (K (I))) +\n           joinWith (' -> ',\n                     Z.map (showTypeWith (typeInfo.types), typeInfo.types));\n  }\n\n  //  _underline :: ... -> String\n  function _underline(\n    t,              // :: Type\n    propPath,       // :: PropPath\n    formatType3     // :: Type -> Array String -> String -> String\n  ) {\n    return formatType3 (t) (propPath) (t.format (_, function(k) {\n      return K (_underline (t.types[k],\n                            Z.concat (propPath, [k]),\n                            formatType3));\n    }));\n  }\n\n  //  underline :: ... -> String\n  function underline(\n    typeInfo,               // :: TypeInfo\n    underlineConstraint,    // :: String -> TypeClass -> String -> String\n    formatType5\n    // :: Integer -> (String -> String) -> Type -> PropPath -> String -> String\n  ) {\n    var st = typeInfo.types.reduce (function(st, t, index) {\n      var formatType4 = formatType5 (index);\n      function f(g) {\n        return function(type) {\n          return B (B (B (when (type.type === FUNCTION)\n                               (parenthesize (_)))))\n                   (formatType4 (g));\n        };\n      }\n      st.carets.push (_underline (t, [], W (f (r ('^')))));\n      st.numbers.push (_underline (t, [], W (f (function(s) {\n        return label (show (st.counter += 1)) (s);\n      }))));\n      return st;\n    }, {carets: [], numbers: [], counter: 0});\n\n    return typeSignature (typeInfo) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, underlineConstraint) +\n              joinWith (_ (' -> '), st.carets) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, K (K (_))) +\n              joinWith (_ (' -> '), st.numbers) + '\\n';\n  }\n\n  //  resolvePropPath :: (Type, Array String) -> Type\n  function resolvePropPath(t, propPath) {\n    return Z.reduce (function(t, prop) { return t.types[prop]; },\n                     t,\n                     propPath);\n  }\n\n  //  formatType6 ::\n  //    PropPath -> Integer -> (String -> String) ->\n  //      Type -> PropPath -> String -> String\n  function formatType6(indexedPropPath) {\n    return function(index_) {\n      return function(f) {\n        return function(t) {\n          return function(propPath_) {\n            var indexedPropPath_ = Z.concat ([index_], propPath_);\n            var p = isPrefix (indexedPropPath_) (indexedPropPath);\n            var q = isPrefix (indexedPropPath) (indexedPropPath_);\n            return p && q ? f : p ? I : _;\n          };\n        };\n      };\n    };\n  }\n\n  //  see :: (String, { name :: String, url :: String? }) -> String\n  function see(label, record) {\n    return record.url == null || record.url === '' ?\n           '' :\n           '\\nSee ' + record.url +\n           ' for information about the ' + record.name + ' ' + label + '.\\n';\n  }\n\n  //  typeClassConstraintViolation :: ... -> Error\n  function typeClassConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeClass,      // :: TypeClass\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value,          // :: Any\n    typeVarMap      // :: TypeVarMap\n  ) {\n    var expType = resolvePropPath (typeInfo.types[index], propPath);\n    return new TypeError (trimTrailingSpaces (\n      'Type-class constraint violation\\n\\n' +\n      underline (typeInfo,\n                 function(tvn) {\n                   return function(tc) {\n                     return (\n                       tvn === expType.name && tc.name === typeClass.name ?\n                         r ('^') :\n                         _\n                     );\n                   };\n                 },\n                 formatType6 (Z.concat ([index], propPath))) +\n      '\\n' +\n      showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n      q (typeInfo.name) + ' requires ' +\n      q (expType.name) + ' to satisfy the ' +\n      stripNamespace (typeClass) + ' type-class constraint; ' +\n      'the value at position 1 does not.\\n' +\n      see ('type class', typeClass)\n    ));\n  }\n\n  //  typeVarConstraintViolation :: ... -> Error\n  function typeVarConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    valuesByPath    // :: StrMap (Array Any)\n  ) {\n    //  If we apply an ‘a -> a -> a -> a’ function to Left ('x'), Right (1),\n    //  and Right (null) we'd like to avoid underlining the first argument\n    //  position, since Left ('x') is compatible with the other ‘a’ values.\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    var values = valuesByPath[key];\n\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var keys = Z.filter (function(k) {\n      var values_ = valuesByPath[k];\n      return (\n        //  Keep X, the position at which the violation was observed.\n        k === key ||\n        //  Keep positions whose values are incompatible with the values at X.\n        isEmpty (determineActualTypesStrict (env, Z.concat (values, values_)))\n      );\n    }, sortedKeys (valuesByPath));\n\n    var underlinedTypeVars =\n    underlineTypeVars (typeInfo,\n                       Z.reduce (function($valuesByPath, k) {\n                         $valuesByPath[k] = valuesByPath[k];\n                         return $valuesByPath;\n                       }, {}, keys));\n\n    return new TypeError (trimTrailingSpaces (\n      'Type-variable constraint violation\\n\\n' +\n      underlinedTypeVars + '\\n' +\n      (Z.reduce (function(st, k) {\n        var values = valuesByPath[k];\n        return isEmpty (values) ? st : {\n          idx: st.idx + 1,\n          s: st.s +\n             showValuesAndTypes (env, typeInfo, values, st.idx + 1) +\n             '\\n\\n'\n        };\n      }, {idx: 0, s: ''}, keys)).s +\n      'Since there is no type of which all the above values are ' +\n      'members, the type-variable constraint has been violated.\\n'\n    ));\n  }\n\n  //  invalidValue :: ... -> Error\n  function invalidValue(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value           // :: Any\n  ) {\n    var t = resolvePropPath (typeInfo.types[index], propPath);\n\n    var underlinedTypeVars =\n    underline (typeInfo,\n               K (K (_)),\n               formatType6 (Z.concat ([index], propPath)));\n\n    return new TypeError (trimTrailingSpaces (\n      t.type === VARIABLE &&\n      isEmpty (determineActualTypesLoose (env, [value])) ?\n        'Unrecognized value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n        toMarkdownList (\n          'The environment is empty! ' +\n          'Polymorphic functions require a non-empty environment.\\n',\n          'The value at position 1 is not a member of any type in ' +\n          'the environment.\\n\\n' +\n          'The environment contains the following types:\\n\\n',\n          showTypeWith (typeInfo.types),\n          env\n        ) :\n      // else\n        'Invalid value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n        'The value at position 1 is not a member of ' +\n        q (show (t)) + '.\\n' +\n        see (arityGte (1) (t) ? 'type constructor' : 'type', t)\n    ));\n  }\n\n  //  invalidArgumentsLength :: ... -> Error\n  //\n  //  This function is used in `wrapFunctionCond` to ensure that higher-order\n  //  functions defined via `def` only ever apply a function argument to the\n  //  correct number of arguments.\n  function invalidArgumentsLength(\n    typeInfo,           // :: TypeInfo\n    index,              // :: Integer\n    numArgsExpected,    // :: Integer\n    args                // :: Array Any\n  ) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) +\n      ' applied ' + q (show (typeInfo.types[index])) +\n      ' to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return function(t) {\n              return function(propPath) {\n                return function(s) {\n                  return index_ === index ?\n                    t.format (_, function(k) { return k === '$1' ? f : _; }) :\n                    _ (s);\n                };\n              };\n            };\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  assertRight :: Either (() -> Error) a -> a !\n  function assertRight(either) {\n    if (either.isLeft) throw either.value ();\n    return either.value;\n  }\n\n  //  withTypeChecking :: ... -> Function\n  function withTypeChecking(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    impl            // :: Function\n  ) {\n    var n = typeInfo.types.length - 1;\n\n    //  wrapFunctionCond :: (TypeVarMap, Integer, a) -> a\n    function wrapFunctionCond(_typeVarMap, index, value) {\n      var expType = typeInfo.types[index];\n      if (expType.type !== FUNCTION) return value;\n\n      //  checkValue :: (TypeVarMap, Integer, String, a) -> Either (() -> Error) TypeVarMap\n      function checkValue(typeVarMap, index, k, x) {\n        var propPath = [k];\n        var t = expType.types[k];\n        return (\n          t.type === VARIABLE ?\n            Z.chain (\n              function(typeVarMap) {\n                return isEmpty (typeVarMap[t.name].types) ?\n                  Left (function() {\n                    return typeVarConstraintViolation (\n                      env,\n                      typeInfo,\n                      index,\n                      propPath,\n                      typeVarMap[t.name].valuesByPath\n                    );\n                  }) :\n                  Right (typeVarMap);\n              },\n              Right (updateTypeVarMap (env,\n                                       typeVarMap,\n                                       t,\n                                       index,\n                                       propPath,\n                                       [x]))\n            ) :\n          // else\n            Z.map (\n              function(r) { return r.typeVarMap; },\n              satisfactoryTypes (env,\n                                 typeInfo,\n                                 typeVarMap,\n                                 t,\n                                 index,\n                                 propPath,\n                                 [x])\n            )\n        );\n      }\n\n      var typeVarMap = _typeVarMap;\n      return function(x) {\n        if (arguments.length !== expType.arity - 1) {\n          throw invalidArgumentsLength (typeInfo,\n                                        index,\n                                        expType.arity - 1,\n                                        slice.call (arguments));\n        }\n\n        var args = arguments;\n        typeVarMap = assertRight (\n          (init (expType.keys)).reduce (function(either, k, idx) {\n            var arg = args[idx];\n            return Z.chain (function(typeVarMap) {\n              return checkValue (typeVarMap, index, k, arg);\n            }, either);\n          }, Right (typeVarMap))\n        );\n\n        var output = value.apply (this, arguments);\n        var k = last (expType.keys);\n        typeVarMap = assertRight (checkValue (typeVarMap, index, k, output));\n        return output;\n      };\n    }\n\n    //  wrapNext :: (TypeVarMap, Array Any, Integer) -> (a -> b)\n    function wrapNext(_typeVarMap, _values, index) {\n      return function(x) {\n        var args = slice.call (arguments);\n        if (args.length !== 1) {\n          throw invalidArgumentsCount (typeInfo, index, 1, args);\n        }\n        var typeVarMap = (assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             _typeVarMap,\n                             typeInfo.types[index],\n                             index,\n                             [],\n                             args)\n        )).typeVarMap;\n\n        var values = Z.concat (_values, args);\n        if (index + 1 === n) {\n          var value = values.reduce (function(f, x, idx) {\n            return f (wrapFunctionCond (typeVarMap, idx, x));\n          }, impl);\n          typeVarMap = (assertRight (\n            satisfactoryTypes (env,\n                               typeInfo,\n                               typeVarMap,\n                               typeInfo.types[n],\n                               n,\n                               [],\n                               [value])\n          )).typeVarMap;\n          return wrapFunctionCond (typeVarMap, n, value);\n        } else {\n          return wrapNext (typeVarMap, values, index + 1);\n        }\n      };\n    }\n\n    var wrapped = typeInfo.types[0].type === NO_ARGUMENTS ?\n      function() {\n        if (arguments.length !== 0) {\n          throw invalidArgumentsCount (typeInfo, 0, 0, slice.call (arguments));\n        }\n        var value = impl ();\n        var typeVarMap = (assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             {},\n                             typeInfo.types[n],\n                             n,\n                             [],\n                             [value])\n        )).typeVarMap;\n        return wrapFunctionCond (typeVarMap, n, value);\n      } :\n      wrapNext ({}, [], 0);\n\n    wrapped[inspect] = wrapped.toString = always0 (typeSignature (typeInfo));\n\n    return wrapped;\n  }\n\n  //  defTypes :: NonEmpty (Array Type)\n  var defTypes = [\n    String_,\n    StrMap (Array_ (TypeClass)),\n    NonEmpty (Array_ (Type)),\n    AnyFunction,\n    AnyFunction\n  ];\n\n  function create(opts) {\n    function def(name) {\n      return function(constraints) {\n        return function(expTypes) {\n          return function(impl) {\n            return opts.checkTypes ?\n              withTypeChecking (opts.env,\n                                {name: name,\n                                 constraints: constraints,\n                                 types: expTypes.length === 1 ?\n                                        Z.concat ([NoArguments], expTypes) :\n                                        expTypes},\n                                impl) :\n              impl;\n          };\n        };\n      };\n    }\n    return def (def.name) ({}) (defTypes) (def);\n  }\n\n  var def = create ({checkTypes: !production, env: env});\n\n  //  fromUncheckedUnaryType :: (Type -> Type) -> Type -> Type\n  function fromUncheckedUnaryType(typeConstructor) {\n    var t = typeConstructor (Unknown);\n    return def (t.name) ({}) ([Type, Type]) (fromUnaryType (t));\n  }\n\n  //  fromUncheckedBinaryType :: (Type -> Type -> Type) -> Type -> Type -> Type\n  function fromUncheckedBinaryType(typeConstructor) {\n    var t = typeConstructor (Unknown) (Unknown);\n    return def (t.name) ({}) ([Type, Type, Type]) (fromBinaryType (t));\n  }\n\n  return {\n    Any: Any,\n    AnyFunction: AnyFunction,\n    Arguments: Arguments,\n    Array: fromUncheckedUnaryType (Array_),\n    Array0: Array0,\n    Array1: fromUncheckedUnaryType (Array1),\n    Array2: fromUncheckedBinaryType (Array2),\n    Boolean: Boolean_,\n    Date: Date_,\n    ValidDate: ValidDate,\n    Descending: fromUncheckedUnaryType (Descending),\n    Either: fromUncheckedBinaryType (Either_),\n    Error: Error_,\n    Fn:\n      def ('Fn')\n          ({})\n          ([Type, Type, Type])\n          (Fn),\n    Function:\n      def ('Function')\n          ({})\n          ([NonEmpty (Array_ (Type)), Type])\n          (Function_),\n    HtmlElement: HtmlElement,\n    Identity: fromUncheckedUnaryType (Identity),\n    Maybe: fromUncheckedUnaryType (Maybe),\n    NonEmpty: NonEmpty,\n    Null: Null,\n    Nullable: fromUncheckedUnaryType (Nullable),\n    Number: Number_,\n    PositiveNumber: PositiveNumber,\n    NegativeNumber: NegativeNumber,\n    ValidNumber: ValidNumber,\n    NonZeroValidNumber: NonZeroValidNumber,\n    FiniteNumber: FiniteNumber,\n    NonZeroFiniteNumber: NonZeroFiniteNumber,\n    PositiveFiniteNumber: PositiveFiniteNumber,\n    NegativeFiniteNumber: NegativeFiniteNumber,\n    Integer: Integer,\n    NonZeroInteger: NonZeroInteger,\n    NonNegativeInteger: NonNegativeInteger,\n    PositiveInteger: PositiveInteger,\n    NegativeInteger: NegativeInteger,\n    Object: Object_,\n    Pair: fromUncheckedBinaryType (Pair),\n    RegExp: RegExp_,\n    GlobalRegExp: GlobalRegExp,\n    NonGlobalRegExp: NonGlobalRegExp,\n    RegexFlags: RegexFlags,\n    StrMap: fromUncheckedUnaryType (StrMap),\n    String: String_,\n    Symbol: Symbol_,\n    Type: Type,\n    TypeClass: TypeClass,\n    Undefined: Undefined,\n    Unknown: Unknown,\n    env: env,\n    create:\n      def ('create')\n          ({})\n          ([RecordType ({checkTypes: Boolean_, env: Array_ (Type)}),\n            Unchecked (joinWith (' -> ', Z.map (show, defTypes)))])\n          (create),\n    test:\n      def ('test')\n          ({})\n          ([Array_ (Type), Type, Any, Boolean_])\n          (test),\n    NullaryType:\n      def ('NullaryType')\n          ({})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Type])\n          (NullaryType),\n    UnaryType:\n      def ('UnaryType')\n          ({f: [Z.Foldable]})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Unchecked ('(t a -> f a)'),\n            Unchecked ('Type -> Type')])\n          (function(name) {\n             return B (B (B (B (def (name) ({}) ([Type, Type])))))\n                      (UnaryType (name));\n           }),\n    BinaryType:\n      def ('BinaryType')\n          ({f: [Z.Foldable]})\n          ([String_,\n            String_,\n            Array_ (Type),\n            Unchecked ('(Any -> Boolean)'),\n            Unchecked ('(t a b -> f a)'),\n            Unchecked ('(t a b -> f b)'),\n            Unchecked ('Type -> Type -> Type')])\n          (function(name) {\n             return B (B (B (B (B (def (name) ({}) ([Type, Type, Type]))))))\n                      (BinaryType (name));\n           }),\n    EnumType:\n      def ('EnumType')\n          ({})\n          ([String_, String_, Array_ (Any), Type])\n          (EnumType),\n    RecordType:\n      def ('RecordType')\n          ({})\n          ([StrMap (Type), Type])\n          (RecordType),\n    NamedRecordType:\n      def ('NamedRecordType')\n          ({})\n          ([NonEmpty (String_), String_, Array_ (Type), StrMap (Type), Type])\n          (NamedRecordType),\n    TypeVariable:\n      def ('TypeVariable')\n          ({})\n          ([String_, Type])\n          (TypeVariable),\n    UnaryTypeVariable:\n      def ('UnaryTypeVariable')\n          ({})\n          ([String_, Unchecked ('Type -> Type')])\n          (function(name) {\n             return def (name) ({}) ([Type, Type]) (UnaryTypeVariable (name));\n           }),\n    BinaryTypeVariable:\n      def ('BinaryTypeVariable')\n          ({})\n          ([String_, Unchecked ('Type -> Type -> Type')])\n          (function(name) {\n             return def (name)\n                        ({})\n                        ([Type, Type, Type])\n                        (BinaryTypeVariable (name));\n           }),\n    Thunk:\n      def ('Thunk')\n          ({})\n          ([Type, Type])\n          (Thunk),\n    Predicate:\n      def ('Predicate')\n          ({})\n          ([Type, Type])\n          (Predicate)\n  };\n\n}));\n\n//. [Descending]:           v:sanctuary-js/sanctuary-descending\n//. [Either]:               v:sanctuary-js/sanctuary-either\n//. [FL:Semigroup]:         https://github.com/fantasyland/fantasy-land#semigroup\n//. [HTML element]:         https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n//. [Identity]:             v:sanctuary-js/sanctuary-identity\n//. [Maybe]:                v:sanctuary-js/sanctuary-maybe\n//. [Monoid]:               https://github.com/fantasyland/fantasy-land#monoid\n//. [Pair]:                 v:sanctuary-js/sanctuary-pair\n//. [Setoid]:               https://github.com/fantasyland/fantasy-land#setoid\n//. [Unknown]:              #Unknown\n//. [`Array`]:              #Array\n//. [`Array2`]:             #Array2\n//. [`BinaryType`]:         #BinaryType\n//. [`Date`]:               #Date\n//. [`FiniteNumber`]:       #FiniteNumber\n//. [`GlobalRegExp`]:       #GlobalRegExp\n//. [`Integer`]:            #Integer\n//. [`NonGlobalRegExp`]:    #NonGlobalRegExp\n//. [`Number`]:             #Number\n//. [`Object.create`]:      https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n//. [`RegExp`]:             #RegExp\n//. [`RegexFlags`]:         #RegexFlags\n//. [`String`]:             #String\n//. [`SyntaxError`]:        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\n//. [`TypeClass`]:          https://github.com/sanctuary-js/sanctuary-type-classes#TypeClass\n//. [`TypeError`]:          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\n//. [`TypeVariable`]:       #TypeVariable\n//. [`UnaryType`]:          #UnaryType\n//. [`UnaryTypeVariable`]:  #UnaryTypeVariable\n//. [`Unknown`]:            #Unknown\n//. [`ValidNumber`]:        #ValidNumber\n//. [`env`]:                #env\n//. [arguments]:            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n//. [enumerated types]:     https://en.wikipedia.org/wiki/Enumerated_type\n//. [max]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n//. [min]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\n//. [semigroup]:            https://en.wikipedia.org/wiki/Semigroup\n//. [type class]:           #type-classes\n//. [type variables]:       #TypeVariable\n//. [types]:                #types\n","/*\n         _______    ___    _________    ___   ___    _______    ______\n        /  ____/\\  /  /\\  /__   ___/\\  /  /\\ /  /\\  /  ____/\\  /  __  \\\n       /  /\\___\\/ /  / /  \\_/  /\\__\\/ /  /_//  / / /  /\\___\\/ /  /\\/  /\\\n      /  ____/\\  /  / /    /  / /    /  ___   / / /  ____/\\  /      _/ /\n     /  /\\___\\/ /  / /    /  / /    /  /\\_/  / / /  /\\___\\/ /  /|  |\\\\/\n    /______/\\  /__/ /    /__/ /    /__/ //__/ / /______/\\  /__/ |__| |\n    \\______\\/  \\__\\/     \\__\\/     \\__\\/ \\__\\/  \\______\\/  \\__\\/ \\__\\|\n                                                                            */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-either\n//.\n//. The Either type represents values with two possibilities: a value of type\n//. `Either a b` is either a Left whose value is of type `a` or a Right whose\n//. value is of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryEither = f (util,\n                              self.sanctuaryShow,\n                              self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var EitherType = $.BinaryType\n        ('sanctuary-either/Either')\n        ('')\n        (function(x) { return type (x) === Either['@@type']; })\n        (function(e) { return e.isLeft ? [e.value] : []; })\n        (function(e) { return e.isLeft ? [] : [e.value]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, EitherType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Either = {};\n\n  var Left$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 true,\n    'isRight':                false,\n    '@@show':                 Left$prototype$show,\n    'fantasy-land/map':       Left$prototype$map,\n    'fantasy-land/bimap':     Left$prototype$bimap,\n    'fantasy-land/ap':        Left$prototype$ap,\n    'fantasy-land/chain':     Left$prototype$chain,\n    'fantasy-land/alt':       Left$prototype$alt,\n    'fantasy-land/reduce':    Left$prototype$reduce,\n    'fantasy-land/traverse':  Left$prototype$traverse,\n    'fantasy-land/extend':    Left$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Right$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 false,\n    'isRight':                true,\n    '@@show':                 Right$prototype$show,\n    'fantasy-land/map':       Right$prototype$map,\n    'fantasy-land/bimap':     Right$prototype$bimap,\n    'fantasy-land/ap':        Right$prototype$ap,\n    'fantasy-land/chain':     Right$prototype$chain,\n    'fantasy-land/alt':       Right$prototype$alt,\n    'fantasy-land/reduce':    Right$prototype$reduce,\n    'fantasy-land/traverse':  Right$prototype$traverse,\n    'fantasy-land/extend':    Right$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    Left$prototype[custom] = Left$prototype$show;\n    Right$prototype[custom] = Right$prototype$show;\n  } else {\n    Left$prototype.inspect = Left$prototype$show;\n    Right$prototype.inspect = Right$prototype$show;\n  }\n\n  //. `Either a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Right (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Right (['foo'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */               '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Either.Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Left ('sqrt undefined for -1')\n  //. Left ('sqrt undefined for -1')\n  //. ```\n  var Left = Either.Left = function(value) {\n    var left = Object.create (Left$prototype);\n    if (Z.Setoid.test (value)) {\n      left['fantasy-land/equals'] = Left$prototype$equals;\n      if (Z.Ord.test (value)) {\n        left['fantasy-land/lte'] = Left$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      left['fantasy-land/concat'] = Left$prototype$concat;\n    }\n    left.value = value;\n    return left;\n  };\n\n  //# Either.Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > Right (42)\n  //. Right (42)\n  //. ```\n  var Right = Either.Right = function Right(value) {\n    var right = Object.create (Right$prototype);\n    if (Z.Setoid.test (value)) {\n      right['fantasy-land/equals'] = Right$prototype$equals;\n      if (Z.Ord.test (value)) {\n        right['fantasy-land/lte'] = Right$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      right['fantasy-land/concat'] = Right$prototype$concat;\n    }\n    right.value = value;\n    return right;\n  };\n\n  //# Either.@@type :: String\n  //.\n  //. Either [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Right (42))\n  //. 'sanctuary-either/Either@1'\n  //.\n  //. > type.parse (type (Right (42)))\n  //. {namespace: 'sanctuary-either', name: 'Either', version: 1}\n  //. ```\n  Either['@@type'] = 'sanctuary-either/Either@1';\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //.   - `of (Either) (x)` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Either) (42)\n  //. Right (42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Either.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Either d c, a) -> Either d b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Left ('!!')\n  //.\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Right (65536)\n  //. ```\n  Either['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var either = f (next, done, r.value);\n      if (either.isLeft) return either;\n      r = either.value;\n    }\n    return Right (r.value);\n  };\n\n  //# Either#@@show :: (Showable a, Showable b) => Either a b ~> () -> String\n  //.\n  //.   - `show (Left (x))` is equivalent to `'Left (' + show (x) + ')'`\n  //.   - `show (Right (x))` is equivalent to `'Right (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Left ('sqrt undefined for -1'))\n  //. 'Left (\"sqrt undefined for -1\")'\n  //.\n  //. > show (Right ([1, 2, 3]))\n  //. 'Right ([1, 2, 3])'\n  //. ```\n  function Left$prototype$show() {\n    return 'Left (' + show (this.value) + ')';\n  }\n  function Right$prototype$show() {\n    return 'Right (' + show (this.value) + ')';\n  }\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is equal to `Left (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Right (x)` is equal to `Right (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Left (x)` is never equal to `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.equals (Left ([1, 2, 3])) (Left ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Right ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Left ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. false\n  //. ```\n  function Left$prototype$equals(other) {\n    return other.isLeft && Z.equals (this.value, other.value);\n  }\n  function Right$prototype$equals(other) {\n    return other.isRight && Z.equals (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is less than or equal to `Left (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Right (x)` is less than or equal to `Right (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Left (x)` is always less than `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Left (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1)]\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Right (0), Right (1), Right (2)])\n  //. [Right (0), Right (1)]\n  //.\n  //. > S.filter (S.lte (Left (1))) ([Right (0), Right (1), Right (2)])\n  //. []\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1), Left (2)]\n  //. ```\n  function Left$prototype$lte(other) {\n    return other.isRight || Z.lte (this.value, other.value);\n  }\n  function Right$prototype$lte(other) {\n    return other.isRight && Z.lte (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `concat (Left (x)) (Left (y))` is equivalent to\n  //.     `Left (concat (x) (y))`\n  //.   - `concat (Right (x)) (Right (y))` is equivalent to\n  //.     `Right (concat (x) (y))`\n  //.   - `concat (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `concat (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Left ('abc')) (Left ('def'))\n  //. Left ('abcdef')\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Right ([4, 5, 6]))\n  //. Right ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Left ('abc')) (Right ([1, 2, 3]))\n  //. Right ([1, 2, 3])\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Left ('abc'))\n  //. Right ([1, 2, 3])\n  //. ```\n  function Left$prototype$concat(other) {\n    return other.isLeft ? Left (Z.concat (this.value, other.value)) : other;\n  }\n  function Right$prototype$concat(other) {\n    return other.isRight ? Right (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //.   - `map (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `map (f) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (S.add (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.map (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$map(f) {\n    return this;\n  }\n  function Right$prototype$map(f) {\n    return Right (f (this.value));\n  }\n\n  //# Either#fantasy-land/bimap :: Either a c ~> (a -> b, c -> d) -> Either b d\n  //.\n  //.   - `bimap (f) (g) (Left (x))` is equivalent to `Left (f (x))`\n  //.   - `bimap (f) (g) (Right (x))` is equivalent to `Right (g (x))`\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (S.add (1)) (Left ('abc'))\n  //. Left ('ABC')\n  //.\n  //. > S.bimap (S.toUpper) (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$bimap(f, g) {\n    return Left (f (this.value));\n  }\n  function Right$prototype$bimap(f, g) {\n    return Right (g (this.value));\n  }\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //.   - `ap (Left (x)) (Left (y))` is equivalent to `Left (x)`\n  //.   - `ap (Left (x)) (Right (y))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Left (x))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Left ('div undefined for 0')) (Left ('sqrt undefined for -1'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Left ('div undefined for 0')) (Right (99))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Right (S.add (1))) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.ap (Right (S.add (1))) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$ap(other) {\n    return other.isLeft ? other : this;\n  }\n  function Right$prototype$ap(other) {\n    return other.isLeft ? other : Right (other.value (this.value));\n  }\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //.   - `chain (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `chain (f) (Right (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const sqrt = n => n < 0 ? Left ('sqrt undefined for ' + show (n))\n  //. .                         : Right (Math.sqrt (n))\n  //.\n  //. > S.chain (sqrt) (Left ('div undefined for 0'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.chain (sqrt) (Right (-1))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.chain (sqrt) (Right (25))\n  //. Right (5)\n  //. ```\n  function Left$prototype$chain(f) {\n    return this;\n  }\n  function Right$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `alt (Left (x)) (Left (y))` is equivalent to `Left (y)`\n  //.   - `alt (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `alt (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.   - `alt (Right (x)) (Right (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Left ('A')) (Left ('B'))\n  //. Left ('B')\n  //.\n  //. > S.alt (Left ('C')) (Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (Right (2)) (Left ('D'))\n  //. Right (2)\n  //.\n  //. > S.alt (Right (3)) (Right (4))\n  //. Right (3)\n  //. ```\n  function Left$prototype$alt(other) {\n    return other;\n  }\n  function Right$prototype$alt(other) {\n    return this;\n  }\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //.   - `reduce (f) (x) (Left (y))` is equivalent to `x`\n  //.   - `reduce (f) (x) (Right (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1]) (Left ('sqrt undefined for -1'))\n  //. [1]\n  //.\n  //. > S.reduce (S.concat) ([1]) (Right ([2]))\n  //. [1, 2]\n  //. ```\n  function Left$prototype$reduce(f, x) {\n    return x;\n  }\n  function Right$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //.   - `traverse (A) (f) (Left (x))` is equivalent to `of (A) (Left (x))`\n  //.   - `traverse (A) (f) (Right (x))` is equivalent to `map (Right) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Left ('sqrt undefined for -1'))\n  //. [Left ('sqrt undefined for -1')]\n  //.\n  //. > S.traverse (Array) (S.words) (Right ('foo bar baz'))\n  //. [Right ('foo'), Right ('bar'), Right ('baz')]\n  //. ```\n  function Left$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Right$prototype$traverse(typeRep, f) {\n    return Z.map (Right, f (this.value));\n  }\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //.   - `extend (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `extend (f) (Right (x))` is equivalent to `Right (f (Right (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$extend(f) {\n    return this;\n  }\n  function Right$prototype$extend(f) {\n    return Right (f (this));\n  }\n\n  return Either;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n    ,______  ______,  ,________,,_____,,_____,,__________  ,__________,\n    |      \\/      |  |        ||     ||     ||          \\ |          |\n    |_,          ,_|  |_      _||_    ||    _||_,   __    ||_,   _____|\n      |   \\  /   |     /      \\   \\   \\/   /    |        /   |      |\n    ,_|    ||    |_,,_/   /\\   \\_, \\      /   ,_|   __   \\ ,_|   ___|_,\n    |      ||      ||     ||     |  |    |    |           ||          |\n    |______||______||_____||_____|  |____|    |__________/ |__________|\n                                                                         */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-maybe\n//.\n//. The Maybe type represents optional values: a value of type `Maybe a` is\n//. either Nothing (the empty value) or a Just whose value is of type `a`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryMaybe = f (util,\n                             self.sanctuaryShow,\n                             self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var MaybeType = $.UnaryType\n        ('sanctuary-maybe/Maybe')\n        ('')\n        (function(x) { return type (x) === Maybe['@@type']; })\n        (function(m) { return m.isJust ? [m.value] : []; });\n      var env = Z.concat (S.env, [$.TypeClass, MaybeType ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Maybe = {};\n\n  var Nothing$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              true,\n    'isJust':                 false,\n    '@@show':                 Nothing$prototype$show,\n    'fantasy-land/equals':    Nothing$prototype$equals,\n    'fantasy-land/lte':       Nothing$prototype$lte,\n    'fantasy-land/concat':    Nothing$prototype$concat,\n    'fantasy-land/filter':    Nothing$prototype$filter,\n    'fantasy-land/map':       Nothing$prototype$map,\n    'fantasy-land/ap':        Nothing$prototype$ap,\n    'fantasy-land/chain':     Nothing$prototype$chain,\n    'fantasy-land/alt':       Nothing$prototype$alt,\n    'fantasy-land/reduce':    Nothing$prototype$reduce,\n    'fantasy-land/traverse':  Nothing$prototype$traverse,\n    'fantasy-land/extend':    Nothing$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Just$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              false,\n    'isJust':                 true,\n    '@@show':                 Just$prototype$show,\n    'fantasy-land/filter':    Just$prototype$filter,\n    'fantasy-land/map':       Just$prototype$map,\n    'fantasy-land/ap':        Just$prototype$ap,\n    'fantasy-land/chain':     Just$prototype$chain,\n    'fantasy-land/alt':       Just$prototype$alt,\n    'fantasy-land/reduce':    Just$prototype$reduce,\n    'fantasy-land/traverse':  Just$prototype$traverse,\n    'fantasy-land/extend':    Just$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    Nothing$prototype[custom] = Nothing$prototype$show;\n    Just$prototype[custom] = Just$prototype$show;\n  } else {\n    Nothing$prototype.inspect = Nothing$prototype$show;\n    Just$prototype.inspect = Just$prototype$show;\n  }\n\n  //. `Maybe a` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Just (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Nothing)        ? '\\u2705 * ' :\n  //. .              /* otherwise */              '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ satisfies Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ satisfies Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Monoid          ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ✅   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ❌   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ✅   ',\n  //. . 'Alternative     ✅   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Maybe.Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > Nothing\n  //. Nothing\n  //. ```\n  var Nothing = Maybe.Nothing = Object.create (Nothing$prototype);\n\n  //# Maybe.Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Just (42)\n  //. Just (42)\n  //. ```\n  var Just = Maybe.Just = function(value) {\n    var just = Object.create (Just$prototype);\n    if (Z.Setoid.test (value)) {\n      just['fantasy-land/equals'] = Just$prototype$equals;\n      if (Z.Ord.test (value)) {\n        just['fantasy-land/lte'] = Just$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      just['fantasy-land/concat'] = Just$prototype$concat;\n    }\n    just.value = value;\n    return just;\n  };\n\n  //# Maybe.@@type :: String\n  //.\n  //. Maybe [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Just (42))\n  //. 'sanctuary-maybe/Maybe@1'\n  //.\n  //. > type.parse (type (Just (42)))\n  //. {namespace: 'sanctuary-maybe', name: 'Maybe', version: 1}\n  //. ```\n  Maybe['@@type'] = 'sanctuary-maybe/Maybe@1';\n\n  //# Maybe.fantasy-land/empty :: () -> Maybe a\n  //.\n  //.   - `empty (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.empty (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/empty'] = function() { return Nothing; };\n\n  //# Maybe.fantasy-land/of :: a -> Maybe a\n  //.\n  //.   - `of (Maybe) (x)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Maybe) (42)\n  //. Just (42)\n  //. ```\n  Maybe['fantasy-land/of'] = Just;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Maybe.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Maybe c, a) -> Maybe b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Nothing\n  //.\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Just (65536)\n  //. ```\n  Maybe['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var maybe = f (next, done, r.value);\n      if (maybe.isNothing) return maybe;\n      r = maybe.value;\n    }\n    return Just (r.value);\n  };\n\n  //# Maybe.fantasy-land/zero :: () -> Maybe a\n  //.\n  //.   - `zero (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.zero (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/zero'] = function() { return Nothing; };\n\n  //# Maybe#@@show :: Showable a => Maybe a ~> () -> String\n  //.\n  //.   - `show (Nothing)` is equivalent to `'Nothing'`\n  //.   - `show (Just (x))` is equivalent to `'Just (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Nothing)\n  //. 'Nothing'\n  //.\n  //. > show (Just (['foo', 'bar', 'baz']))\n  //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n  //. ```\n  function Nothing$prototype$show() {\n    return 'Nothing';\n  }\n  function Just$prototype$show() {\n    return 'Just (' + show (this.value) + ')';\n  }\n\n  //# Maybe#fantasy-land/equals :: Setoid a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is equal to `Nothing`\n  //.   - `Just (x)` is equal to `Just (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Nothing` is never equal to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.equals (Nothing) (Nothing)\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([3, 2, 1]))\n  //. false\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Nothing)\n  //. false\n  //. ```\n  function Nothing$prototype$equals(other) {\n    return other.isNothing;\n  }\n  function Just$prototype$equals(other) {\n    return other.isJust && Z.equals (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/lte :: Ord a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is (less than or) equal to `Nothing`\n  //.   - `Just (x)` is less than or equal to `Just (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Nothing` is always less than `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Nothing)) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing]\n  //.\n  //. > S.filter (S.lte (Just (1))) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing, Just (0), Just (1)]\n  //. ```\n  function Nothing$prototype$lte(other) {\n    return true;\n  }\n  function Just$prototype$lte(other) {\n    return other.isJust && Z.lte (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/concat :: Semigroup a => Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `concat (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `concat (Just (x)) (Just (y))` is equivalent to\n  //.     `Just (concat (x) (y))`\n  //.   - `concat (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `concat (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Nothing) (Just ([1, 2, 3]))\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Nothing)\n  //. Just ([1, 2, 3])\n  //. ```\n  function Nothing$prototype$concat(other) {\n    return other;\n  }\n  function Just$prototype$concat(other) {\n    return other.isJust ? Just (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Maybe#fantasy-land/filter :: Maybe a ~> (a -> Boolean) -> Maybe a\n  //.\n  //.   - `filter (p) (Nothing)` is equivalent to `Nothing`\n  //.   - `filter (p) (Just (x))` is equivalent to `p (x) ? Just (x) : Nothing`\n  //.\n  //. ```javascript\n  //. > S.filter (isFinite) (Nothing)\n  //. Nothing\n  //.\n  //. > S.filter (isFinite) (Just (Infinity))\n  //. Nothing\n  //.\n  //. > S.filter (isFinite) (Just (Number.MAX_SAFE_INTEGER))\n  //. Just (9007199254740991)\n  //. ```\n  function Nothing$prototype$filter(pred) {\n    return this;\n  }\n  function Just$prototype$filter(pred) {\n    return pred (this.value) ? this : Nothing;\n  }\n\n  //# Maybe#fantasy-land/map :: Maybe a ~> (a -> b) -> Maybe b\n  //.\n  //.   - `map (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `map (f) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Nothing)\n  //. Nothing\n  //.\n  //. > S.map (Math.sqrt) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$map(f) {\n    return this;\n  }\n  function Just$prototype$map(f) {\n    return Just (f (this.value));\n  }\n\n  //# Maybe#fantasy-land/ap :: Maybe a ~> Maybe (a -> b) -> Maybe b\n  //.\n  //.   - `ap (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Nothing) (Just (x))` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Nothing) (Just (9))\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$ap(other) {\n    return this;\n  }\n  function Just$prototype$ap(other) {\n    return other.isJust ? Just (other.value (this.value)) : other;\n  }\n\n  //# Maybe#fantasy-land/chain :: Maybe a ~> (a -> Maybe b) -> Maybe b\n  //.\n  //.   - `chain (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `chain (f) (Just (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const head = xs => xs.length === 0 ? Nothing : Just (xs[0])\n  //.\n  //. > S.chain (head) (Nothing)\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just ([]))\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just (['foo', 'bar', 'baz']))\n  //. Just ('foo')\n  //. ```\n  function Nothing$prototype$chain(f) {\n    return this;\n  }\n  function Just$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Maybe#fantasy-land/alt :: Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `alt (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `alt (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Just (y))` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.alt (Nothing) (Just (1))\n  //. Just (1)\n  //.\n  //. > S.alt (Just (2)) (Nothing)\n  //. Just (2)\n  //.\n  //. > S.alt (Just (3)) (Just (4))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$alt(other) {\n    return other;\n  }\n  function Just$prototype$alt(other) {\n    return this;\n  }\n\n  //# Maybe#fantasy-land/reduce :: Maybe a ~> ((b, a) -> b, b) -> b\n  //.\n  //.   - `reduce (f) (x) (Nothing)` is equivalent to `x`\n  //.   - `reduce (f) (x) (Just (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ('abc') (Nothing)\n  //. 'abc'\n  //.\n  //. > S.reduce (S.concat) ('abc') (Just ('xyz'))\n  //. 'abcxyz'\n  //. ```\n  function Nothing$prototype$reduce(f, x) {\n    return x;\n  }\n  function Just$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Maybe#fantasy-land/traverse :: Applicative f => Maybe a ~> (TypeRep f, a -> f b) -> f (Maybe b)\n  //.\n  //.   - `traverse (A) (f) (Nothing)` is equivalent to `of (A) (Nothing)`\n  //.   - `traverse (A) (f) (Just (x))` is equivalent to `map (Just) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (Array) (S.words) (Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //. ```\n  function Nothing$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Just$prototype$traverse(typeRep, f) {\n    return Z.map (Just, f (this.value));\n  }\n\n  //# Maybe#fantasy-land/extend :: Maybe a ~> (Maybe a -> b) -> Maybe b\n  //.\n  //.   - `extend (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `extend (f) (Just (x))` is equivalent to `Just (f (Just (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Just (99))\n  //. Just (100)\n  //. ```\n  function Nothing$prototype$extend(f) {\n    return this;\n  }\n  function Just$prototype$extend(f) {\n    return Just (f (this));\n  }\n\n  return Maybe;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","       /*                   *\\\n      //                     \\\\\n     //   @@  @@     @@  @@   \\\\\n    //      @@       @@  @@    \\\\\n    \\\\      @@       @@  @@    //\n     \\\\   @@  @@  @    @@ @   //\n      \\\\          /       @  //\n       \\*             @@@@  */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-pair\n//.\n//. Pair is the canonical product type: a value of type `Pair a b` always\n//. contains exactly two values: one of type `a`; one of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  var util = {inspect: {}};\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('util'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], function(show, Z) {\n      return f (util, show, Z);\n    });\n  } else {\n    self.sanctuaryPair = f (util,\n                            self.sanctuaryShow,\n                            self.sanctuaryTypeClasses);\n  }\n\n} (function(util, show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var PairType = $.BinaryType\n        ('sanctuary-pair/Pair')\n        ('')\n        (function(x) { return type (x) === Pair['@@type']; })\n        (function(p) { return [p.fst]; })\n        (function(p) { return [p.snd]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, PairType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Pair,\n    '@@show':                 Pair$prototype$show,\n    'fantasy-land/compose':   Pair$prototype$compose,\n    'fantasy-land/map':       Pair$prototype$map,\n    'fantasy-land/bimap':     Pair$prototype$bimap,\n    'fantasy-land/reduce':    Pair$prototype$reduce,\n    'fantasy-land/traverse':  Pair$prototype$traverse,\n    'fantasy-land/extend':    Pair$prototype$extend,\n    'fantasy-land/extract':   Pair$prototype$extract\n    /* eslint-enable key-spacing */\n  };\n\n  var custom = util.inspect.custom;\n  /* istanbul ignore else */\n  if (typeof custom === 'symbol') {\n    prototype[custom] = Pair$prototype$show;\n  } else {\n    prototype.inspect = Pair$prototype$show;\n  }\n\n  /* istanbul ignore else */\n  if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n    prototype[Symbol.iterator] = function() {\n      return [this.fst, this.snd][Symbol.iterator] ();\n    };\n  }\n\n  //. `Pair a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Pair (Useless) (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Pair (['foo']) (['bar'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */                        '\\u274C   '))\n  //. .       (S.keys (S.unchecked.filter (S.is ($.TypeClass)) (Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ✅   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Applicative     ❌   ',\n  //. . 'Chain           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'ChainRec        ❌   ',\n  //. . 'Monad           ❌   ',\n  //. . 'Alt             ❌   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ✅   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > Pair (1) (2)\n  //. Pair (1) (2)\n  //. ```\n  function Pair(fst) {\n    return function(snd) {\n      var pair = Object.create (prototype);\n      if (Z.Setoid.test (fst) && Z.Setoid.test (snd)) {\n        pair['fantasy-land/equals'] = Pair$prototype$equals;\n        if (Z.Ord.test (fst) && Z.Ord.test (snd)) {\n          pair['fantasy-land/lte'] = Pair$prototype$lte;\n        }\n      }\n      if (Z.Semigroup.test (fst)) {\n        if (Z.Semigroup.test (snd)) {\n          pair['fantasy-land/concat'] = Pair$prototype$concat;\n        }\n        pair['fantasy-land/ap'] = Pair$prototype$ap;\n        pair['fantasy-land/chain'] = Pair$prototype$chain;\n      }\n      pair.fst = fst;\n      pair.snd = snd;\n      return pair;\n    };\n  }\n\n  //# Pair.fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > Pair.fst (Pair ('abc') ([1, 2, 3]))\n  //. 'abc'\n  //. ```\n  Pair.fst = function(p) { return p.fst; };\n\n  //# Pair.snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > Pair.snd (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  Pair.snd = function(p) { return p.snd; };\n\n  //# Pair.swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > Pair.swap (Pair ('abc') ([1, 2, 3]))\n  //. Pair ([1, 2, 3]) ('abc')\n  //. ```\n  Pair.swap = function(p) { return Pair (p.snd) (p.fst); };\n\n  //# Pair.@@type :: String\n  //.\n  //. Pair [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Pair ('abc') ([1, 2, 3]))\n  //. 'sanctuary-pair/Pair@1'\n  //.\n  //. > type.parse (type (Pair ('abc') ([1, 2, 3])))\n  //. {namespace: 'sanctuary-pair', name: 'Pair', version: 1}\n  //. ```\n  Pair['@@type'] = 'sanctuary-pair/Pair@1';\n\n  //# Pair#@@show :: (Showable a, Showable b) => Pair a b ~> () -> String\n  //.\n  //. `show (Pair (x) (y))` is equivalent to\n  //. `'Pair (' + show (x) + ') (' + show (y) + ')'`.\n  //.\n  //. ```javascript\n  //. > show (Pair ('abc') ([1, 2, 3]))\n  //. 'Pair (\"abc\") ([1, 2, 3])'\n  //. ```\n  function Pair$prototype$show() {\n    return 'Pair (' + show (this.fst) + ') (' + show (this.snd) + ')';\n  }\n\n  //# Pair#fantasy-land/equals :: (Setoid a, Setoid b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is equal to `Pair (v) (w)` [iff][] `x` is equal to `v`\n  //. and `y` is equal to `w` according to [`Z.equals`][].\n  //.\n  //. ```javascript\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([3, 2, 1]))\n  //. false\n  //. ```\n  function Pair$prototype$equals(other) {\n    return Z.equals (this.fst, other.fst) && Z.equals (this.snd, other.snd);\n  }\n\n  //# Pair#fantasy-land/lte :: (Ord a, Ord b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is less than or equal to `Pair (v) (w)` [iff][] `x` is\n  //. less than `v` or `x` is equal to `v` and `y` is less than or equal to\n  //. `w` according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Pair ('b') (2)))\n  //. .          ([Pair ('a') (1), Pair ('a') (2), Pair ('a') (3),\n  //. .            Pair ('b') (1), Pair ('b') (2), Pair ('b') (3),\n  //. .            Pair ('c') (1), Pair ('c') (2), Pair ('c') (3)])\n  //. [ Pair ('a') (1),\n  //. . Pair ('a') (2),\n  //. . Pair ('a') (3),\n  //. . Pair ('b') (1),\n  //. . Pair ('b') (2) ]\n  //. ```\n  function Pair$prototype$lte(other) {\n    return Z.equals (this.fst, other.fst) ? Z.lte (this.snd, other.snd)\n                                          : Z.lte (this.fst, other.fst);\n  }\n\n  //# Pair#fantasy-land/compose :: Pair a b ~> Pair b c -> Pair a c\n  //.\n  //. `compose (Pair (x) (y)) (Pair (v) (w))` is equivalent to `Pair (v) (y)`.\n  //.\n  //. ```javascript\n  //. > S.compose (Pair ('a') (0)) (Pair ([1, 2, 3]) ('b'))\n  //. Pair ([1, 2, 3]) (0)\n  //. ```\n  function Pair$prototype$compose(other) {\n    return Pair (this.fst) (other.snd);\n  }\n\n  //# Pair#fantasy-land/concat :: (Semigroup a, Semigroup b) => Pair a b ~> Pair a b -> Pair a b\n  //.\n  //. `concat (Pair (x) (y)) (Pair (v) (w))` is equivalent to\n  //. `Pair (concat (x) (v)) (concat (y) (w))`.\n  //.\n  //. ```javascript\n  //. > S.concat (Pair ('abc') ([1, 2, 3])) (Pair ('xyz') ([4, 5, 6]))\n  //. Pair ('abcxyz') ([1, 2, 3, 4, 5, 6])\n  //. ```\n  function Pair$prototype$concat(other) {\n    return Pair (Z.concat (this.fst, other.fst))\n                (Z.concat (this.snd, other.snd));\n  }\n\n  //# Pair#fantasy-land/map :: Pair a b ~> (b -> c) -> Pair a c\n  //.\n  //. `map (f) (Pair (x) (y))` is equivalent to `Pair (x) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('abc') (16)\n  //. ```\n  function Pair$prototype$map(f) {\n    return Pair (this.fst) (f (this.snd));\n  }\n\n  //# Pair#fantasy-land/bimap :: Pair a c ~> (a -> b, c -> d) -> Pair b d\n  //.\n  //. `bimap (f) (g) (Pair (x) (y))` is equivalent to `Pair (f (x)) (g (y))`.\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('ABC') (16)\n  //. ```\n  function Pair$prototype$bimap(f, g) {\n    return Pair (f (this.fst)) (g (this.snd));\n  }\n\n  //# Pair#fantasy-land/ap :: Semigroup a => Pair a b ~> Pair a (b -> c) -> Pair a c\n  //.\n  //. `ap (Pair (v) (f)) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (v) (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.ap (Pair ('abc') (Math.sqrt)) (Pair ('xyz') (256))\n  //. Pair ('abcxyz') (16)\n  //. ```\n  function Pair$prototype$ap(other) {\n    return Pair (Z.concat (other.fst, this.fst)) (other.snd (this.snd));\n  }\n\n  //# Pair#fantasy-land/chain :: Semigroup a => Pair a b ~> (b -> Pair a c) -> Pair a c\n  //.\n  //. `chain (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (x) (fst (f (y)))) (snd (f (y)))`.\n  //.\n  //. ```javascript\n  //. > S.chain (n => Pair (show (n)) (Math.sqrt (n))) (Pair ('abc') (256))\n  //. Pair ('abc256') (16)\n  //. ```\n  function Pair$prototype$chain(f) {\n    var other = f (this.snd);\n    return Pair (Z.concat (this.fst, other.fst)) (other.snd);\n  }\n\n  //# Pair#fantasy-land/reduce :: Pair a b ~> ((c, b) -> c, c) -> c\n  //.\n  //. `reduce (f) (x) (Pair (v) (w))` is equivalent to `f (x) (w)`.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1, 2, 3]) (Pair ('abc') ([4, 5, 6]))\n  //. [1, 2, 3, 4, 5, 6]\n  //. ```\n  function Pair$prototype$reduce(f, x) {\n    return f (x, this.snd);\n  }\n\n  //# Pair#fantasy-land/traverse :: Applicative f => Pair a b ~> (TypeRep f, b -> f c) -> f (Pair a c)\n  //.\n  //. `traverse (_) (f) (Pair (x) (y))` is equivalent to\n  //. `map (Pair (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Pair (123) ('foo bar baz'))\n  //. [Pair (123) ('foo'), Pair (123) ('bar'), Pair (123) ('baz')]\n  //. ```\n  function Pair$prototype$traverse(typeRep, f) {\n    return Z.map (Pair (this.fst), f (this.snd));\n  }\n\n  //# Pair#fantasy-land/extend :: Pair a b ~> (Pair a b -> c) -> Pair a c\n  //.\n  //. `extend (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (x) (f (Pair (x) (y)))`.\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Pair ('abc') (99))\n  //. Pair ('abc') (100)\n  //. ```\n  function Pair$prototype$extend(f) {\n    return Pair (this.fst) (f (this));\n  }\n\n  //# Pair#fantasy-land/extract :: Pair a b ~> () -> b\n  //.\n  //. `extract (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.extract (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  function Pair$prototype$extract() {\n    return this.snd;\n  }\n\n  return Pair;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*    #######\n   ####     ####\n ####   ###   ####\n#####   ###########   sanctuary\n########   ########   noun\n###########   #####   1 [ mass noun ] refuge from unsafe JavaScript\n ####   ###   ####\n   ####     ####\n      #######    */\n\n//. # Sanctuary\n//.\n//. [![npm](https://img.shields.io/npm/v/sanctuary.svg)](https://www.npmjs.com/package/sanctuary)\n//. [![CircleCI](https://img.shields.io/circleci/project/github/sanctuary-js/sanctuary/master.svg)](https://circleci.com/gh/sanctuary-js/sanctuary/tree/master)\n//. [![Gitter](https://img.shields.io/gitter/room/badges/shields.svg)](https://gitter.im/sanctuary-js/sanctuary)\n//.\n//. Sanctuary is a JavaScript functional programming library inspired by\n//. [Haskell][] and [PureScript][]. It's stricter than [Ramda][], and\n//. provides a similar suite of functions.\n//.\n//. Sanctuary promotes programs composed of simple, pure functions. Such\n//. programs are easier to comprehend, test, and maintain &ndash; they are\n//. also a pleasure to write.\n//.\n//. Sanctuary provides two data types, [Maybe][] and [Either][], both of\n//. which are compatible with [Fantasy Land][]. Thanks to these data types\n//. even Sanctuary functions that may fail, such as [`head`](#head), are\n//. composable.\n//.\n//. Sanctuary makes it possible to write safe code without null checks.\n//. In JavaScript it's trivial to introduce a possible run-time type error:\n//.\n//.     words[0].toUpperCase()\n//.\n//. If `words` is `[]` we'll get a familiar error at run-time:\n//.\n//.     TypeError: Cannot read property 'toUpperCase' of undefined\n//.\n//. Sanctuary gives us a fighting chance of avoiding such errors. We might\n//. write:\n//.\n//.     S.map (S.toUpper) (S.head (words))\n//.\n//. Sanctuary is designed to work in Node.js and in ES5-compatible browsers.\n//.\n//. ## Folktale\n//.\n//. [Folktale][], like Sanctuary, is a standard library for functional\n//. programming in JavaScript. It is well designed and well documented.\n//. Whereas Sanctuary treats JavaScript as a member of the ML language\n//. family, Folktale embraces JavaScript's object-oriented programming\n//. model. Programming with Folktale resembles programming with Scala.\n//.\n//. ## Ramda\n//.\n//. [Ramda][] provides several functions that return problematic values\n//. such as `undefined`, `Infinity`, or `NaN` when applied to unsuitable\n//. inputs. These are known as [partial functions][]. Partial functions\n//. necessitate the use of guards or null checks. In order to safely use\n//. `R.head`, for example, one must ensure that the array is non-empty:\n//.\n//.     if (R.isEmpty (xs)) {\n//.       // ...\n//.     } else {\n//.       return f (R.head (xs));\n//.     }\n//.\n//. Using the Maybe type renders such guards (and null checks) unnecessary.\n//. Changing functions such as `R.head` to return Maybe values was proposed\n//. in [ramda/ramda#683][], but was considered too much of a stretch for\n//. JavaScript programmers. Sanctuary was released the following month,\n//. in January 2015, as a companion library to Ramda.\n//.\n//. In addition to broadening in scope in the years since its release,\n//. Sanctuary's philosophy has diverged from Ramda's in several respects.\n//.\n//. ### Totality\n//.\n//. Every Sanctuary function is defined for every value that is a member of\n//. the function's input type. Such functions are known as [total functions][].\n//. Ramda, on the other hand, contains a number of [partial functions][].\n//.\n//. ### Information preservation\n//.\n//. Certain Sanctuary functions preserve more information than their Ramda\n//. counterparts. Examples:\n//.\n//.     |> R.tail ([])                      |> S.tail ([])\n//.     []                                  Nothing\n//.\n//.     |> R.tail (['foo'])                 |> S.tail (['foo'])\n//.     []                                  Just ([])\n//.\n//.     |> R.replace (/^x/) ('') ('abc')    |> S.stripPrefix ('x') ('abc')\n//.     'abc'                               Nothing\n//.\n//.     |> R.replace (/^x/) ('') ('xabc')   |> S.stripPrefix ('x') ('xabc')\n//.     'abc'                               Just ('abc')\n//.\n//. ### Invariants\n//.\n//. Sanctuary performs rigorous [type checking][] of inputs and outputs, and\n//. throws a descriptive error if a type error is encountered. This allows bugs\n//. to be caught and fixed early in the development cycle.\n//.\n//. Ramda operates on the [garbage in, garbage out][GIGO] principle. Functions\n//. are documented to take arguments of particular types, but these invariants\n//. are not enforced. The problem with this approach in a language as\n//. permissive as JavaScript is that there's no guarantee that garbage input\n//. will produce garbage output ([ramda/ramda#1413][]). Ramda performs ad hoc\n//. type checking in some such cases ([ramda/ramda#1419][]).\n//.\n//. Sanctuary can be configured to operate in garbage in, garbage out mode.\n//. Ramda cannot be configured to enforce its invariants.\n//.\n//. ### Currying\n//.\n//. Sanctuary functions are curried. There is, for example, exactly one way to\n//. apply `S.reduce` to `S.add`, `0`, and `xs`:\n//.\n//.   - `S.reduce (S.add) (0) (xs)`\n//.\n//. Ramda functions are also curried, but in a complex manner. There are four\n//. ways to apply `R.reduce` to `R.add`, `0`, and `xs`:\n//.\n//.   - `R.reduce (R.add) (0) (xs)`\n//.   - `R.reduce (R.add) (0, xs)`\n//.   - `R.reduce (R.add, 0) (xs)`\n//.   - `R.reduce (R.add, 0, xs)`\n//.\n//. Ramda supports all these forms because curried functions enable partial\n//. application, one of the library's tenets, but `f(x)(y)(z)` is considered\n//. too unfamiliar and too unattractive to appeal to JavaScript programmers.\n//.\n//. Sanctuary's developers prefer a simple, unfamiliar construct to a complex,\n//. familiar one. Familiarity can be acquired; complexity is intrinsic.\n//.\n//. The lack of breathing room in `f(x)(y)(z)` impairs readability. The simple\n//. solution to this problem, proposed in [#438][], is to include a space when\n//. applying a function: `f (x) (y) (z)`.\n//.\n//. Ramda also provides a special placeholder value, [`R.__`][], that removes\n//. the restriction that a function must be applied to its arguments in order.\n//. The following expressions are equivalent:\n//.\n//.   - `R.reduce (R.__, 0, xs) (R.add)`\n//.   - `R.reduce (R.add, R.__, xs) (0)`\n//.   - `R.reduce (R.__, 0) (R.add) (xs)`\n//.   - `R.reduce (R.__, 0) (R.add, xs)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add) (0)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add, 0)`\n//.\n//. ### Variadic functions\n//.\n//. Ramda provides several functions that take any number of arguments. These\n//. are known as [variadic functions][]. Additionally, Ramda provides several\n//. functions that take variadic functions as arguments. Although natural in\n//. a dynamically typed language, variadic functions are at odds with the type\n//. notation Ramda and Sanctuary both use, leading to some indecipherable type\n//. signatures such as this one:\n//.\n//.     R.lift :: (*... -> *...) -> ([*]... -> [*])\n//.\n//. Sanctuary has no variadic functions, nor any functions that take variadic\n//. functions as arguments. Sanctuary provides two \"lift\" functions, each with\n//. a helpful type signature:\n//.\n//.     S.lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n//.     S.lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n//.\n//. ### Implicit context\n//.\n//. Ramda provides [`R.bind`][] and [`R.invoker`][] for working with methods.\n//. Additionally, many Ramda functions use `Function#call` or `Function#apply`\n//. to preserve context. Sanctuary makes no allowances for `this`.\n//.\n//. ### Transducers\n//.\n//. Several Ramda functions act as transducers. Sanctuary provides no support\n//. for transducers.\n//.\n//. ### Modularity\n//.\n//. Whereas Ramda has no dependencies, Sanctuary has a modular design:\n//. [sanctuary-def][] provides type checking, [sanctuary-type-classes][]\n//. provides Fantasy Land functions and type classes, [sanctuary-show][]\n//. provides string representations, and algebraic data types are provided\n//. by [sanctuary-either][], [sanctuary-maybe][], and [sanctuary-pair][].\n//. Not only does this approach reduce the complexity of Sanctuary itself,\n//. but it allows these components to be reused in other contexts.\n//.\n//. ## Types\n//.\n//. Sanctuary uses Haskell-like type signatures to describe the types of\n//. values, including functions. `'foo'`, for example, is a member of `String`;\n//. `[1, 2, 3]` is a member of `Array Number`. The double colon (`::`) is used\n//. to mean \"is a member of\", so one could write:\n//.\n//.     'foo' :: String\n//.     [1, 2, 3] :: Array Number\n//.\n//. An identifier may appear to the left of the double colon:\n//.\n//.     Math.PI :: Number\n//.\n//. The arrow (`->`) is used to express a function's type:\n//.\n//.     Math.abs :: Number -> Number\n//.\n//. That states that `Math.abs` is a unary function that takes an argument\n//. of type `Number` and returns a value of type `Number`.\n//.\n//. Some functions are parametrically polymorphic: their types are not fixed.\n//. Type variables are used in the representations of such functions:\n//.\n//.     S.I :: a -> a\n//.\n//. `a` is a type variable. Type variables are not capitalized, so they\n//. are differentiable from type identifiers (which are always capitalized).\n//. By convention type variables have single-character names. The signature\n//. above states that `S.I` takes a value of any type and returns a value of\n//. the same type. Some signatures feature multiple type variables:\n//.\n//.     S.K :: a -> b -> a\n//.\n//. It must be possible to replace all occurrences of `a` with a concrete type.\n//. The same applies for each other type variable. For the function above, the\n//. types with which `a` and `b` are replaced may be different, but needn't be.\n//.\n//. Since all Sanctuary functions are curried (they accept their arguments\n//. one at a time), a binary function is represented as a unary function that\n//. returns a unary function: `* -> * -> *`. This aligns neatly with Haskell,\n//. which uses curried functions exclusively. In JavaScript, though, we may\n//. wish to represent the types of functions with arities less than or greater\n//. than one. The general form is `(<input-types>) -> <output-type>`, where\n//. `<input-types>` comprises zero or more comma–space (<code>, </code>)\n//. -separated type representations:\n//.\n//.   - `() -> String`\n//.   - `(a, b) -> a`\n//.   - `(a, b, c) -> d`\n//.\n//. `Number -> Number` can thus be seen as shorthand for `(Number) -> Number`.\n//.\n//. Sanctuary embraces types. JavaScript doesn't support algebraic data types,\n//. but these can be simulated by providing a group of data constructors that\n//. return values with the same set of methods. A value of the Either type, for\n//. example, is created via the Left constructor or the Right constructor.\n//.\n//. It's necessary to extend Haskell's notation to describe implicit arguments\n//. to the *methods* provided by Sanctuary's types. In `x.map(y)`, for example,\n//. the `map` method takes an implicit argument `x` in addition to the explicit\n//. argument `y`. The type of the value upon which a method is invoked appears\n//. at the beginning of the signature, separated from the arguments and return\n//. value by a squiggly arrow (`~>`). The type of the `fantasy-land/map` method\n//. of the Maybe type is written `Maybe a ~> (a -> b) -> Maybe b`. One could\n//. read this as:\n//.\n//. _When the `fantasy-land/map` method is invoked on a value of type `Maybe a`\n//. (for any type `a`) with an argument of type `a -> b` (for any type `b`),\n//. it returns a value of type `Maybe b`._\n//.\n//. The squiggly arrow is also used when representing non-function properties.\n//. `Maybe a ~> Boolean`, for example, represents a Boolean property of a value\n//. of type `Maybe a`.\n//.\n//. Sanctuary supports type classes: constraints on type variables. Whereas\n//. `a -> a` implicitly supports every type, `Functor f => (a -> b) -> f a ->\n//. f b` requires that `f` be a type that satisfies the requirements of the\n//. Functor type class. Type-class constraints appear at the beginning of a\n//. type signature, separated from the rest of the signature by a fat arrow\n//. (`=>`).\n//.\n//. ## Type checking\n//.\n//. Sanctuary functions are defined via [sanctuary-def][] to provide run-time\n//. type checking. This is tremendously useful during development: type errors\n//. are reported immediately, avoiding circuitous stack traces (at best) and\n//. silent failures due to type coercion (at worst). For example:\n//.\n//. ```javascript\n//. S.add (2) (true);\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n//. //                          ^^^^^^^^^^^^\n//. //                               1\n//. //\n//. //   1)  true :: Boolean\n//. //\n//. //   The value at position 1 is not a member of ‘FiniteNumber’.\n//. //\n//. //   See v:sanctuary-js/sanctuary-def#FiniteNumber for information about the FiniteNumber type.\n//. ```\n//.\n//. Compare this to the behaviour of Ramda's unchecked equivalent:\n//.\n//. ```javascript\n//. R.add (2) (true);\n//. // => 3\n//. ```\n//.\n//. There is a performance cost to run-time type checking. Type checking is\n//. disabled by default if `process.env.NODE_ENV` is `'production'`. If this\n//. rule is unsuitable for a given program, one may use [`create`](#create)\n//. to create a Sanctuary module based on a different rule. For example:\n//.\n//. ```javascript\n//. const S = sanctuary.create ({\n//.   checkTypes: localStorage.getItem ('SANCTUARY_CHECK_TYPES') === 'true',\n//.   env: sanctuary.env,\n//. });\n//. ```\n//.\n//. Occasionally one may wish to perform an operation that is not type safe,\n//. such as mapping over an object with heterogeneous values. This is possible\n//. via selective use of [`unchecked`](#unchecked) functions.\n//.\n//. ## Installation\n//.\n//. `npm install sanctuary` will install Sanctuary for use in Node.js.\n//.\n//. Running Sanctuary in the browser is more involved. One must include a\n//. `<script>` for each dependency in addition to one for Sanctuary itself:\n//.\n//. ```html\n//. <script src=\"vendor/sanctuary-show.js\"></script>\n//. <script src=\"vendor/sanctuary-type-identifiers.js\"></script>\n//. <script src=\"vendor/sanctuary-type-classes.js\"></script>\n//. <script src=\"vendor/sanctuary-either.js\"></script>\n//. <script src=\"vendor/sanctuary-maybe.js\"></script>\n//. <script src=\"vendor/sanctuary-pair.js\"></script>\n//. <script src=\"vendor/sanctuary-def.js\"></script>\n//. <script src=\"vendor/sanctuary.js\"></script>\n//. ```\n//.\n//. To ensure compatibility one should use the dependency versions specified\n//. in __package.json__.\n//.\n//. For convenience one could define aliases for various modules:\n//.\n//. ```javascript\n//. const S = window.sanctuary;\n//. const $ = window.sanctuaryDef;\n//. // ...\n//. ```\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-def'),\n                        require ('sanctuary-either'),\n                        require ('sanctuary-maybe'),\n                        require ('sanctuary-pair'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-def',\n             'sanctuary-either',\n             'sanctuary-maybe',\n             'sanctuary-pair',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            f);\n  } else {\n    self.sanctuary = f (self.sanctuaryDef,\n                        self.sanctuaryEither,\n                        self.sanctuaryMaybe,\n                        self.sanctuaryPair,\n                        self.sanctuaryShow,\n                        self.sanctuaryTypeClasses,\n                        self.sanctuaryTypeIdentifiers);\n  }\n\n} (function($, Either, Maybe, Pair, show, Z, type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Descending = __doctest.require ('sanctuary-descending');\n    var Nil = (__doctest.require ('./test/internal/List')).Nil;\n    var Cons = (__doctest.require ('./test/internal/List')).Cons;\n    var Sum = __doctest.require ('./test/internal/Sum');\n    var S = (function(S) {\n      var S_ = S.create ({\n        checkTypes: true,\n        env: S.env.concat ([\n          (__doctest.require ('./test/internal/List')).Type ($.Unknown),\n          Sum.Type\n        ])\n      });\n      S_.env = S.env;  // see S.env doctest\n      return S_;\n    } (require ('.')));\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  Nothing :: Maybe a\n  var Nothing = Maybe.Nothing;\n\n  //  Just :: a -> Maybe a\n  var Just = Maybe.Just;\n\n  //  B :: (b -> c) -> (a -> b) -> a -> c\n  function B(f) {\n    return function(g) {\n      return function(x) {\n        return f (g (x));\n      };\n    };\n  }\n\n  //  C :: (a -> b -> c) -> b -> a -> c\n  function C(f) {\n    return function(y) {\n      return function(x) {\n        return f (x) (y);\n      };\n    };\n  }\n\n  //  get_ :: String -> a -> Maybe b\n  function get_(key) {\n    return B (function(obj) { return key in obj ? Just (obj[key]) : Nothing; })\n             (toObject);\n  }\n\n  //  invoke0 :: String -> a -> b\n  function invoke0(name) {\n    return function(target) {\n      return target[name] ();\n    };\n  }\n\n  //  invoke1 :: String -> a -> b -> c\n  function invoke1(name) {\n    return function(x) {\n      return function(target) {\n        return target[name] (x);\n      };\n    };\n  }\n\n  //  toObject :: a -> Object\n  function toObject(x) {\n    return x == null ? Object.create (null) : Object (x);\n  }\n\n  //  :: Type\n  var a = $.TypeVariable ('a');\n  var b = $.TypeVariable ('b');\n  var c = $.TypeVariable ('c');\n  var d = $.TypeVariable ('d');\n  var e = $.TypeVariable ('e');\n  var g = $.TypeVariable ('g');\n  var r = $.TypeVariable ('r');\n\n  //  :: Type -> Type\n  var f = $.UnaryTypeVariable ('f');\n  var m = $.UnaryTypeVariable ('m');\n  var t = $.UnaryTypeVariable ('t');\n  var w = $.UnaryTypeVariable ('w');\n\n  //  :: Type -> Type -> Type\n  var p = $.BinaryTypeVariable ('p');\n  var s = $.BinaryTypeVariable ('s');\n\n  //  TypeRep :: Type -> Type\n  var TypeRep = $.UnaryType\n    ('TypeRep')\n    ('https://github.com/fantasyland/fantasy-land#type-representatives')\n    ([])\n    (function(x) {\n       return $.test ([]) ($.AnyFunction) (x) ||\n              x != null && $.test ([]) ($.String) (x['@@type']);\n     })\n    (K ([]));\n\n  //  Options :: Type\n  var Options = $.RecordType ({checkTypes: $.Boolean, env: $.Array ($.Any)});\n\n  var _ = {};\n\n  //. ### Configure\n\n  //# create :: { checkTypes :: Boolean, env :: Array Type } -> Module\n  //.\n  //. Takes an options record and returns a Sanctuary module. `checkTypes`\n  //. specifies whether to enable type checking. The module's polymorphic\n  //. functions (such as [`I`](#I)) require each value associated with a\n  //. type variable to be a member of at least one type in the environment.\n  //.\n  //. A well-typed application of a Sanctuary function will produce the same\n  //. result regardless of whether type checking is enabled. If type checking\n  //. is enabled, a badly typed application will produce an exception with a\n  //. descriptive error message.\n  //.\n  //. The following snippet demonstrates defining a custom type and using\n  //. `create` to produce a Sanctuary module that is aware of that type:\n  //.\n  //. ```javascript\n  //. const {create, env} = require ('sanctuary');\n  //. const $ = require ('sanctuary-def');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    Identity :: a -> Identity a\n  //. const Identity = x => {\n  //.   const identity = Object.create (Identity$prototype);\n  //.   identity.value = x;\n  //.   return identity;\n  //. };\n  //.\n  //. Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. const Identity$prototype = {\n  //.   'constructor': Identity,\n  //.   '@@show': function() { return `Identity (${S.show (this.value)})`; },\n  //.   'fantasy-land/map': function(f) { return Identity (f (this.value)); },\n  //. };\n  //.\n  //. //    IdentityType :: Type -> Type\n  //. const IdentityType = $.UnaryType\n  //.   ('Identity')\n  //.   ('http://example.com/my-package#Identity')\n  //.   ([])\n  //.   (x => type (x) === Identity['@@type'])\n  //.   (identity => [identity.value]);\n  //.\n  //. const S = create ({\n  //.   checkTypes: process.env.NODE_ENV !== 'production',\n  //.   env: env.concat ([IdentityType ($.Unknown)]),\n  //. });\n  //.\n  //. S.map (S.sub (1)) (Identity (43));\n  //. // => Identity (42)\n  //. ```\n  //.\n  //. See also [`env`](#env).\n  function create(opts) {\n    var def = $.create (opts);\n    var S = {\n      env: opts.env,\n      is: def ('is') ({}) ([$.Type, $.Any, $.Boolean]) ($.test (opts.env)),\n      Maybe: Maybe,\n      Nothing: Nothing,\n      Either: Either\n    };\n    (Object.keys (_)).forEach (function(name) {\n      S[name] = def (name) (_[name].consts) (_[name].types) (_[name].impl);\n    });\n    S.unchecked = opts.checkTypes ? create ({checkTypes: false, env: opts.env})\n                                  : S;\n    return S;\n  }\n  _.create = {\n    consts: {},\n    types: [Options, $.Object],\n    impl: create\n  };\n\n  //# env :: Array Type\n  //.\n  //. The Sanctuary module's environment (`(S.create ({checkTypes, env})).env`\n  //. is a reference to `env`). Useful in conjunction with [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.env\n  //. [ $.AnyFunction,\n  //. . $.Arguments,\n  //. . $.Array ($.Unknown),\n  //. . $.Array2 ($.Unknown) ($.Unknown),\n  //. . $.Boolean,\n  //. . $.Date,\n  //. . $.Descending ($.Unknown),\n  //. . $.Either ($.Unknown) ($.Unknown),\n  //. . $.Error,\n  //. . $.Fn ($.Unknown) ($.Unknown),\n  //. . $.HtmlElement,\n  //. . $.Identity ($.Unknown),\n  //. . $.Maybe ($.Unknown),\n  //. . $.Null,\n  //. . $.Number,\n  //. . $.Object,\n  //. . $.Pair ($.Unknown) ($.Unknown),\n  //. . $.RegExp,\n  //. . $.StrMap ($.Unknown),\n  //. . $.String,\n  //. . $.Symbol,\n  //. . $.Type,\n  //. . $.TypeClass,\n  //. . $.Undefined ]\n  //. ```\n\n  //# unchecked :: Module\n  //.\n  //. A complete Sanctuary module that performs no type checking. This is\n  //. useful as it permits operations that Sanctuary's type checking would\n  //. disallow, such as mapping over an object with heterogeneous values.\n  //.\n  //. See also [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.unchecked.map (S.show) ({x: 'foo', y: true, z: 42})\n  //. {x: '\"foo\"', y: 'true', z: '42'}\n  //. ```\n  //.\n  //. Opting out of type checking may cause type errors to go unnoticed.\n  //.\n  //. ```javascript\n  //. > S.unchecked.add (2) ('2')\n  //. '22'\n  //. ```\n\n  //. ### Classify\n\n  //# type :: Any -> { namespace :: Maybe String, name :: String, version :: NonNegativeInteger }\n  //.\n  //. Returns the result of parsing the [type identifier][] of the given value.\n  //.\n  //. ```javascript\n  //. > S.type (S.Just (42))\n  //. {namespace: Just ('sanctuary-maybe'), name: 'Maybe', version: 1}\n  //.\n  //. > S.type ([1, 2, 3])\n  //. {namespace: Nothing, name: 'Array', version: 0}\n  //. ```\n  function type_(x) {\n    var r = type.parse (type (x));\n    r.namespace = Z.reject (equals (null), Just (r.namespace));\n    return r;\n  }\n  _.type = {\n    consts: {},\n    types: [$.Any,\n            $.RecordType ({namespace: $.Maybe ($.String),\n                           name: $.String,\n                           version: $.NonNegativeInteger})],\n    impl: type_\n  };\n\n  //# is :: Type -> Any -> Boolean\n  //.\n  //. Returns `true` [iff][] the given value is a member of the specified type.\n  //. See [`$.test`][] for details.\n  //.\n  //. ```javascript\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3])\n  //. true\n  //.\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3.14])\n  //. false\n  //. ```\n\n  //. ### Showable\n\n  //# show :: Any -> String\n  //.\n  //. Alias of [`show`][].\n  //.\n  //. ```javascript\n  //. > S.show (-0)\n  //. '-0'\n  //.\n  //. > S.show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > S.show ({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > S.show (S.Left (S.Right (S.Just (S.Nothing))))\n  //. 'Left (Right (Just (Nothing)))'\n  //. ```\n  _.show = {\n    consts: {},\n    types: [$.Any, $.String],\n    impl: show\n  };\n\n  //. ### Fantasy Land\n  //.\n  //. Sanctuary is compatible with the [Fantasy Land][] specification.\n\n  //# equals :: Setoid a => a -> a -> Boolean\n  //.\n  //. Curried version of [`Z.equals`][] that requires two arguments of the\n  //. same type.\n  //.\n  //. To compare values of different types first use [`create`](#create) to\n  //. create a Sanctuary module with type checking disabled, then use that\n  //. module's `equals` function.\n  //.\n  //. ```javascript\n  //. > S.equals (0) (-0)\n  //. true\n  //.\n  //. > S.equals (NaN) (NaN)\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 4]))\n  //. false\n  //. ```\n  function equals(x) {\n    return function(y) {\n      return Z.equals (x, y);\n    };\n  }\n  _.equals = {\n    consts: {a: [Z.Setoid]},\n    types: [a, a, $.Boolean],\n    impl: equals\n  };\n\n  //# lt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than the first\n  //. according to [`Z.lt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lt (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2]\n  //. ```\n  function lt(y) {\n    return function(x) {\n      return Z.lt (x, y);\n    };\n  }\n  _.lt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lt\n  };\n\n  //# lte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than or equal to\n  //. the first according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2, 3]\n  //. ```\n  function lte(y) {\n    return function(x) {\n      return Z.lte (x, y);\n    };\n  }\n  _.lte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lte\n  };\n\n  //# gt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than the first\n  //. according to [`Z.gt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gt (3)) ([1, 2, 3, 4, 5])\n  //. [4, 5]\n  //. ```\n  function gt(y) {\n    return function(x) {\n      return Z.gt (x, y);\n    };\n  }\n  _.gt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gt\n  };\n\n  //# gte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than or equal\n  //. to the first according to [`Z.gte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gte (3)) ([1, 2, 3, 4, 5])\n  //. [3, 4, 5]\n  //. ```\n  function gte(y) {\n    return function(x) {\n      return Z.gte (x, y);\n    };\n  }\n  _.gte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gte\n  };\n\n  //# min :: Ord a => a -> a -> a\n  //.\n  //. Returns the smaller of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.min (10) (2)\n  //. 2\n  //.\n  //. > S.min (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > S.min ('10') ('2')\n  //. '10'\n  //. ```\n  _.min = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.min)\n  };\n\n  //# max :: Ord a => a -> a -> a\n  //.\n  //. Returns the larger of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > S.max (10) (2)\n  //. 10\n  //.\n  //. > S.max (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > S.max ('10') ('2')\n  //. '2'\n  //. ```\n  _.max = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.max)\n  };\n\n  //# clamp :: Ord a => a -> a -> a -> a\n  //.\n  //. Takes a lower bound, an upper bound, and a value of the same type.\n  //. Returns the value if it is within the bounds; the nearer bound otherwise.\n  //.\n  //. See also [`min`](#min) and [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.clamp (0) (100) (42)\n  //. 42\n  //.\n  //. > S.clamp (0) (100) (-1)\n  //. 0\n  //.\n  //. > S.clamp ('A') ('Z') ('~')\n  //. 'Z'\n  //. ```\n  _.clamp = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a, a],\n    impl: curry3 (Z.clamp)\n  };\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.id`][].\n  //.\n  //. ```javascript\n  //. > S.id (Function) (42)\n  //. 42\n  //. ```\n  _.id = {\n    consts: {c: [Z.Category]},\n    types: [TypeRep (c), c],\n    impl: Z.id\n  };\n\n  //# concat :: Semigroup a => a -> a -> a\n  //.\n  //. Curried version of [`Z.concat`][].\n  //.\n  //. ```javascript\n  //. > S.concat ('abc') ('def')\n  //. 'abcdef'\n  //.\n  //. > S.concat ([1, 2, 3]) ([4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > S.concat ({x: 1, y: 2}) ({y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > S.concat (S.Just ([1, 2, 3])) (S.Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Sum (18)) (Sum (24))\n  //. Sum (42)\n  //. ```\n  _.concat = {\n    consts: {a: [Z.Semigroup]},\n    types: [a, a, a],\n    impl: curry2 (Z.concat)\n  };\n\n  //# empty :: Monoid a => TypeRep a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.empty`][].\n  //.\n  //. ```javascript\n  //. > S.empty (String)\n  //. ''\n  //.\n  //. > S.empty (Array)\n  //. []\n  //.\n  //. > S.empty (Object)\n  //. {}\n  //.\n  //. > S.empty (Sum)\n  //. Sum (0)\n  //. ```\n  _.empty = {\n    consts: {a: [Z.Monoid]},\n    types: [TypeRep (a), a],\n    impl: Z.empty\n  };\n\n  //# invert :: Group g => g -> g\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.invert`][].\n  //.\n  //. ```javascript\n  //. > S.invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  _.invert = {\n    consts: {g: [Z.Group]},\n    types: [g, g],\n    impl: Z.invert\n  };\n\n  //# filter :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.filter`][]. Discards every element that does not\n  //. satisfy the predicate.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > S.filter (S.odd) ([1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > S.filter (S.odd) ({x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > S.filter (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (0))\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred) {\n    return function(filterable) {\n      return Z.filter (pred, filterable);\n    };\n  }\n  _.filter = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: filter\n  };\n\n  //# reject :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.reject`][]. Discards every element that satisfies\n  //. the predicate.\n  //.\n  //. See also [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > S.reject (S.odd) ([1, 2, 3])\n  //. [2]\n  //.\n  //. > S.reject (S.odd) ({x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > S.reject (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.reject (S.odd) (S.Just (0))\n  //. Just (0)\n  //.\n  //. > S.reject (S.odd) (S.Just (1))\n  //. Nothing\n  //. ```\n  function reject(pred) {\n    return function(filterable) {\n      return Z.reject (pred, filterable);\n    };\n  }\n  _.reject = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: reject\n  };\n\n  //# map :: Functor f => (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.map`][].\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) ([1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > S.map (Math.sqrt) ({x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > S.map (Math.sqrt) (S.Just (9))\n  //. Just (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Right (9))\n  //. Right (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Pair (99980001) (99980001))\n  //. Pair (99980001) (9999)\n  //. ```\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the B combinator\n  //. from combinatory logic (i.e. [`compose`](#compose)):\n  //.\n  //.     Functor f => (a -> b) -> f a -> f b\n  //.     (a -> b) -> Function x a -> Function x b\n  //.     (a -> c) -> Function x a -> Function x c\n  //.     (b -> c) -> Function x b -> Function x c\n  //.     (b -> c) -> Function a b -> Function a c\n  //.     (b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  function map(f) {\n    return function(functor) {\n      return Z.map (f, functor);\n    };\n  }\n  _.map = {\n    consts: {f: [Z.Functor]},\n    types: [$.Fn (a) (b), f (a), f (b)],\n    impl: map\n  };\n\n  //# flip :: Functor f => f (a -> b) -> a -> f b\n  //.\n  //. Curried version of [`Z.flip`][]. Maps over the given functions, applying\n  //. each to the given value.\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the C combinator\n  //. from combinatory logic:\n  //.\n  //.     Functor f => f (a -> b) -> a -> f b\n  //.     Function x (a -> b) -> a -> Function x b\n  //.     Function x (a -> c) -> a -> Function x c\n  //.     Function x (b -> c) -> b -> Function x c\n  //.     Function a (b -> c) -> b -> Function a c\n  //.     (a -> b -> c) -> b -> a -> c\n  //.\n  //. ```javascript\n  //. > S.flip (S.concat) ('!') ('foo')\n  //. 'foo!'\n  //.\n  //. > S.flip ([Math.floor, Math.ceil]) (1.5)\n  //. [1, 2]\n  //.\n  //. > S.flip ({floor: Math.floor, ceil: Math.ceil}) (1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > S.flip (Cons (Math.floor) (Cons (Math.ceil) (Nil))) (1.5)\n  //. Cons (1) (Cons (2) (Nil))\n  //. ```\n  _.flip = {\n    consts: {f: [Z.Functor]},\n    types: [f ($.Fn (a) (b)), a, f (b)],\n    impl: curry2 (Z.flip)\n  };\n\n  //# bimap :: Bifunctor f => (a -> b) -> (c -> d) -> f a c -> f b d\n  //.\n  //. Curried version of [`Z.bimap`][].\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Right (64))\n  //. Right (8)\n  //. ```\n  _.bimap = {\n    consts: {p: [Z.Bifunctor]},\n    types: [$.Fn (a) (b), $.Fn (c) (d), p (a) (c), p (b) (d)],\n    impl: curry3 (Z.bimap)\n  };\n\n  //# mapLeft :: Bifunctor f => (a -> b) -> f a c -> f b c\n  //.\n  //. Curried version of [`Z.mapLeft`][]. Maps the given function over the left\n  //. side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > S.mapLeft (S.toUpper) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (64)\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Right (64))\n  //. Right (64)\n  //. ```\n  _.mapLeft = {\n    consts: {p: [Z.Bifunctor]},\n    types: [$.Fn (a) (b), p (a) (c), p (b) (c)],\n    impl: curry2 (Z.mapLeft)\n  };\n\n  //# promap :: Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n  //.\n  //. Curried version of [`Z.promap`][].\n  //.\n  //. ```javascript\n  //. > S.promap (Math.abs) (S.add (1)) (Math.sqrt) (-100)\n  //. 11\n  //. ```\n  _.promap = {\n    consts: {p: [Z.Profunctor]},\n    types: [$.Fn (a) (b), $.Fn (c) (d), p (b) (c), p (a) (d)],\n    impl: curry3 (Z.promap)\n  };\n\n  //# alt :: Alt f => f a -> f a -> f a\n  //.\n  //. Curried version of [`Z.alt`][] with arguments flipped to facilitate\n  //. partial application.\n  //.\n  //. ```javascript\n  //. > S.alt (S.Just ('default')) (S.Nothing)\n  //. Just ('default')\n  //.\n  //. > S.alt (S.Just ('default')) (S.Just ('hello'))\n  //. Just ('hello')\n  //.\n  //. > S.alt (S.Right (0)) (S.Left ('X'))\n  //. Right (0)\n  //.\n  //. > S.alt (S.Right (0)) (S.Right (1))\n  //. Right (1)\n  //. ```\n  function alt(y) {\n    return function(x) {\n      return Z.alt (x, y);\n    };\n  }\n  _.alt = {\n    consts: {f: [Z.Alt]},\n    types: [f (a), f (a), f (a)],\n    impl: alt\n  };\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.zero`][].\n  //.\n  //. ```javascript\n  //. > S.zero (Array)\n  //. []\n  //.\n  //. > S.zero (Object)\n  //. {}\n  //.\n  //. > S.zero (S.Maybe)\n  //. Nothing\n  //. ```\n  _.zero = {\n    consts: {f: [Z.Plus]},\n    types: [TypeRep (f (a)), f (a)],\n    impl: Z.zero\n  };\n\n  //# reduce :: Foldable f => (b -> a -> b) -> b -> f a -> b\n  //.\n  //. Takes a curried binary function, an initial value, and a [Foldable][],\n  //. and applies the function to the initial value and the Foldable's first\n  //. value, then applies the function to the result of the previous\n  //. application and the Foldable's second value. Repeats this process\n  //. until each of the Foldable's values has been used. Returns the initial\n  //. value if the Foldable is empty; the result of the final application\n  //. otherwise.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.add) (0) ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.reduce (xs => x => S.prepend (x) (xs)) ([]) ([1, 2, 3, 4, 5])\n  //. [5, 4, 3, 2, 1]\n  //. ```\n  function reduce(f) {\n    return function(initial) {\n      return function(foldable) {\n        return Z.reduce (function(y, x) { return f (y) (x); },\n                         initial,\n                         foldable);\n      };\n    };\n  }\n  _.reduce = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Fn (a) ($.Fn (b) (a)), a, f (b), a],\n    impl: reduce\n  };\n\n  //# traverse :: (Applicative f, Traversable t) => TypeRep f -> (a -> f b) -> t a -> f (t b)\n  //.\n  //. Curried version of [`Z.traverse`][].\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (S.Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //.\n  //. > S.traverse (Array) (S.words) (S.Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C'])\n  //. Just ([10, 11, 12])\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C', 'X'])\n  //. Nothing\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C'})\n  //. Just ({a: 10, b: 11, c: 12})\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C', x: 'X'})\n  //. Nothing\n  //. ```\n  _.traverse = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep (f (b)), $.Fn (a) (f (b)), t (a), f (t (b))],\n    impl: curry3 (Z.traverse)\n  };\n\n  //# sequence :: (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n  //.\n  //. Curried version of [`Z.sequence`][]. Inverts the given `t (f a)`\n  //. to produce an `f (t a)`.\n  //.\n  //. ```javascript\n  //. > S.sequence (Array) (S.Just ([1, 2, 3]))\n  //. [Just (1), Just (2), Just (3)]\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Just (3)])\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Nothing])\n  //. Nothing\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Just (3)})\n  //. Just ({a: 1, b: 2, c: 3})\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Nothing})\n  //. Nothing\n  //. ```\n  _.sequence = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep (f (a)), t (f (a)), f (t (a))],\n    impl: curry2 (Z.sequence)\n  };\n\n  //# ap :: Apply f => f (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.ap`][].\n  //.\n  //. ```javascript\n  //. > S.ap ([Math.sqrt, x => x * x]) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > S.ap ({x: Math.sqrt, y: S.add (1), z: S.sub (1)}) ({w: 4, x: 4, y: 4})\n  //. {x: 2, y: 5}\n  //.\n  //. > S.ap (S.Just (Math.sqrt)) (S.Just (64))\n  //. Just (8)\n  //. ```\n  //.\n  //. Replacing `Apply f => f` with `Function x` produces the S combinator\n  //. from combinatory logic:\n  //.\n  //.     Apply f => f (a -> b) -> f a -> f b\n  //.     Function x (a -> b) -> Function x a -> Function x b\n  //.     Function x (a -> c) -> Function x a -> Function x c\n  //.     Function x (b -> c) -> Function x b -> Function x c\n  //.     Function a (b -> c) -> Function a b -> Function a c\n  //.     (a -> b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.ap (s => n => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //. ```\n  _.ap = {\n    consts: {f: [Z.Apply]},\n    types: [f ($.Fn (a) (b)), f (a), f (b)],\n    impl: curry2 (Z.ap)\n  };\n\n  //# lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n  //.\n  //. Promotes a curried binary function to a function that operates on two\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Just (3))\n  //. Just (5)\n  //.\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (true))\n  //. Just (true)\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (false))\n  //. Just (false)\n  //. ```\n  _.lift2 = {\n    consts: {f: [Z.Apply]},\n    types: [$.Fn (a) ($.Fn (b) (c)), f (a), f (b), f (c)],\n    impl: curry3 (Z.lift2)\n  };\n\n  //# lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n  //.\n  //. Promotes a curried ternary function to a function that operates on three\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Just ([1, 2, 3]))\n  //. Just (6)\n  //.\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Nothing)\n  //. Nothing\n  //. ```\n  _.lift3 = {\n    consts: {f: [Z.Apply]},\n    types: [$.Fn (a) ($.Fn (b) ($.Fn (c) (d))), f (a), f (b), f (c), f (d)],\n    impl: curry4 (Z.lift3)\n  };\n\n  //# apFirst :: Apply f => f a -> f b -> f a\n  //.\n  //. Curried version of [`Z.apFirst`][]. Combines two effectful actions,\n  //. keeping only the result of the first. Equivalent to Haskell's `(<*)`\n  //. function.\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > S.apFirst ([1, 2]) ([3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > S.apFirst (S.Just (1)) (S.Just (2))\n  //. Just (1)\n  //. ```\n  _.apFirst = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (a)],\n    impl: curry2 (Z.apFirst)\n  };\n\n  //# apSecond :: Apply f => f a -> f b -> f b\n  //.\n  //. Curried version of [`Z.apSecond`][]. Combines two effectful actions,\n  //. keeping only the result of the second. Equivalent to Haskell's `(*>)`\n  //. function.\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > S.apSecond ([1, 2]) ([3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > S.apSecond (S.Just (1)) (S.Just (2))\n  //. Just (2)\n  //. ```\n  _.apSecond = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (b)],\n    impl: curry2 (Z.apSecond)\n  };\n\n  //# of :: Applicative f => TypeRep f -> a -> f a\n  //.\n  //. Curried version of [`Z.of`][].\n  //.\n  //. ```javascript\n  //. > S.of (Array) (42)\n  //. [42]\n  //.\n  //. > S.of (Function) (42) (null)\n  //. 42\n  //.\n  //. > S.of (S.Maybe) (42)\n  //. Just (42)\n  //.\n  //. > S.of (S.Either) (42)\n  //. Right (42)\n  //. ```\n  function of(typeRep) {\n    return function(x) {\n      return Z.of (typeRep, x);\n    };\n  }\n  _.of = {\n    consts: {f: [Z.Applicative]},\n    types: [TypeRep (f (a)), a, f (a)],\n    impl: of\n  };\n\n  //# chain :: Chain m => (a -> m b) -> m a -> m b\n  //.\n  //. Curried version of [`Z.chain`][].\n  //.\n  //. ```javascript\n  //. > S.chain (x => [x, x]) ([1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > S.chain (n => s => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('slice')\n  //. 'sli'\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('123'))\n  //. Just (123)\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('XXX'))\n  //. Nothing\n  //. ```\n  _.chain = {\n    consts: {m: [Z.Chain]},\n    types: [$.Fn (a) (m (b)), m (a), m (b)],\n    impl: curry2 (Z.chain)\n  };\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.join`][].\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. ```javascript\n  //. > S.join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > S.join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > S.join (S.Just (S.Just (1)))\n  //. Just (1)\n  //.\n  //. > S.join (S.Pair ('foo') (S.Pair ('bar') ('baz')))\n  //. Pair ('foobar') ('baz')\n  //. ```\n  //.\n  //. Replacing `Chain m => m` with `Function x` produces the W combinator\n  //. from combinatory logic:\n  //.\n  //.     Chain m => m (m a) -> m a\n  //.     Function x (Function x a) -> Function x a\n  //.     (x -> x -> a) -> (x -> a)\n  //.\n  //. ```javascript\n  //. > S.join (S.concat) ('abc')\n  //. 'abcabc'\n  //. ```\n  _.join = {\n    consts: {m: [Z.Chain]},\n    types: [m (m (a)), m (a)],\n    impl: Z.join\n  };\n\n  //# chainRec :: ChainRec m => TypeRep m -> (a -> m (Either a b)) -> a -> m b\n  //.\n  //. Performs a [`chain`](#chain)-like computation with constant stack usage.\n  //. Similar to [`Z.chainRec`][], but curried and more convenient due to the\n  //. use of the Either type to indicate completion (via a Right).\n  //.\n  //. ```javascript\n  //. > S.chainRec (Array)\n  //. .            (s => s.length === 2 ? S.map (S.Right) ([s + '!', s + '?'])\n  //. .                                 : S.map (S.Left) ([s + 'o', s + 'n']))\n  //. .            ('')\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep) {\n    return function(f) {\n      return function(x) {\n        return Z.chainRec (typeRep, step, x);\n      };\n      function step(next, done, x) {\n        return Z.map (either (next) (done), f (x));\n      }\n    };\n  }\n  _.chainRec = {\n    consts: {m: [Z.ChainRec]},\n    types: [TypeRep (m (b)), $.Fn (a) (m ($.Either (a) (b))), a, m (b)],\n    impl: chainRec\n  };\n\n  //# extend :: Extend w => (w a -> b) -> w a -> w b\n  //.\n  //. Curried version of [`Z.extend`][].\n  //.\n  //. ```javascript\n  //. > S.extend (S.joinWith ('')) (['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > S.extend (f => f ([3, 4])) (S.reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.extend = {\n    consts: {w: [Z.Extend]},\n    types: [$.Fn (w (a)) (b), w (a), w (b)],\n    impl: curry2 (Z.extend)\n  };\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.duplicate`][].\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. ```javascript\n  //. > S.duplicate (S.Just (1))\n  //. Just (Just (1))\n  //.\n  //. > S.duplicate ([1])\n  //. [[1]]\n  //.\n  //. > S.duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > S.duplicate (S.reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.duplicate = {\n    consts: {w: [Z.Extend]},\n    types: [w (a), w (w (a))],\n    impl: Z.duplicate\n  };\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.extract`][].\n  //.\n  //. ```javascript\n  //. > S.extract (S.Pair ('foo') ('bar'))\n  //. 'bar'\n  //. ```\n  _.extract = {\n    consts: {w: [Z.Comonad]},\n    types: [w (a), a],\n    impl: Z.extract\n  };\n\n  //# contramap :: Contravariant f => (b -> a) -> f a -> f b\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.contramap`][].\n  //.\n  //. ```javascript\n  //. > S.contramap (s => s.length) (Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  _.contramap = {\n    consts: {f: [Z.Contravariant]},\n    types: [$.Fn (b) (a), f (a), f (b)],\n    impl: curry2 (Z.contramap)\n  };\n\n  //. ### Combinator\n\n  //# I :: a -> a\n  //.\n  //. The I combinator. Returns its argument. Equivalent to Haskell's `id`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.I ('foo')\n  //. 'foo'\n  //. ```\n  function I(x) {\n    return x;\n  }\n  _.I = {\n    consts: {},\n    types: [a, a],\n    impl: I\n  };\n\n  //# K :: a -> b -> a\n  //.\n  //. The K combinator. Takes two values and returns the first. Equivalent to\n  //. Haskell's `const` function.\n  //.\n  //. ```javascript\n  //. > S.K ('foo') ('bar')\n  //. 'foo'\n  //.\n  //. > S.map (S.K (42)) (S.range (0) (5))\n  //. [42, 42, 42, 42, 42]\n  //. ```\n  function K(x) {\n    return function(y) {\n      return x;\n    };\n  }\n  _.K = {\n    consts: {},\n    types: [a, b, a],\n    impl: K\n  };\n\n  //# T :: a -> (a -> b) -> b\n  //.\n  //. The T ([thrush][]) combinator. Takes a value and a function, and returns\n  //. the result of applying the function to the value. Equivalent to Haskell's\n  //. `(&)` function.\n  //.\n  //. ```javascript\n  //. > S.T (42) (S.add (1))\n  //. 43\n  //.\n  //. > S.map (S.T (100)) ([S.add (1), Math.sqrt])\n  //. [101, 10]\n  //. ```\n  function T(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n  _.T = {\n    consts: {},\n    types: [a, $.Fn (a) (b), b],\n    impl: T\n  };\n\n  //. ### Function\n\n  //# curry2 :: ((a, b) -> c) -> a -> b -> c\n  //.\n  //. Curries the given binary function.\n  //.\n  //. ```javascript\n  //. > S.map (S.curry2 (Math.pow) (10)) ([1, 2, 3])\n  //. [10, 100, 1000]\n  //. ```\n  function curry2(f) {\n    return function(x) {\n      return function(y) {\n        return f (x, y);\n      };\n    };\n  }\n  _.curry2 = {\n    consts: {},\n    types: [$.Function ([a, b, c]), a, b, c],\n    impl: curry2\n  };\n\n  //# curry3 :: ((a, b, c) -> d) -> a -> b -> c -> d\n  //.\n  //. Curries the given ternary function.\n  //.\n  //. ```javascript\n  //. > const replaceString = S.curry3 ((what, replacement, string) =>\n  //. .   string.replace (what, replacement)\n  //. . )\n  //.\n  //. > replaceString ('banana') ('orange') ('banana icecream')\n  //. 'orange icecream'\n  //. ```\n  function curry3(f) {\n    return function(x) {\n      return function(y) {\n        return function(z) {\n          return f (x, y, z);\n        };\n      };\n    };\n  }\n  _.curry3 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d]), a, b, c, d],\n    impl: curry3\n  };\n\n  //# curry4 :: ((a, b, c, d) -> e) -> a -> b -> c -> d -> e\n  //.\n  //. Curries the given quaternary function.\n  //.\n  //. ```javascript\n  //. > const createRect = S.curry4 ((x, y, width, height) =>\n  //. .   ({x, y, width, height})\n  //. . )\n  //.\n  //. > createRect (0) (0) (10) (10)\n  //. {x: 0, y: 0, width: 10, height: 10}\n  //. ```\n  function curry4(f) {\n    return function(w) {\n      return function(x) {\n        return function(y) {\n          return function(z) {\n            return f (w, x, y, z);\n          };\n        };\n      };\n    };\n  }\n  _.curry4 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e]), a, b, c, d, e],\n    impl: curry4\n  };\n\n  //# curry5 :: ((a, b, c, d, e) -> f) -> a -> b -> c -> d -> e -> f\n  //.\n  //. Curries the given quinary function.\n  //.\n  //. ```javascript\n  //. > const toUrl = S.curry5 ((protocol, creds, hostname, port, pathname) =>\n  //. .   protocol + '//' +\n  //. .   S.maybe ('') (S.flip (S.concat) ('@')) (creds) +\n  //. .   hostname +\n  //. .   S.maybe ('') (S.concat (':')) (port) +\n  //. .   pathname\n  //. . )\n  //.\n  //. > toUrl ('https:') (S.Nothing) ('example.com') (S.Just ('443')) ('/foo/bar')\n  //. 'https://example.com:443/foo/bar'\n  //. ```\n  function curry5(f) {\n    return function(v) {\n      return function(w) {\n        return function(x) {\n          return function(y) {\n            return function(z) {\n              return f (v, w, x, y, z);\n            };\n          };\n        };\n      };\n    };\n  }\n  _.curry5 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e, r]), a, b, c, d, e, r],\n    impl: curry5\n  };\n\n  //. ### Composition\n\n  //# compose :: Semigroupoid s => s b c -> s a b -> s a c\n  //.\n  //. Curried version of [`Z.compose`][].\n  //.\n  //. When specialized to Function, `compose` composes two unary functions,\n  //. from right to left (this is the B combinator from combinatory logic).\n  //.\n  //. The generalized type signature indicates that `compose` is compatible\n  //. with any [Semigroupoid][].\n  //.\n  //. See also [`pipe`](#pipe).\n  //.\n  //. ```javascript\n  //. > S.compose (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  _.compose = {\n    consts: {s: [Z.Semigroupoid]},\n    types: [s (b) (c), s (a) (b), s (a) (c)],\n    impl: curry2 (Z.compose)\n  };\n\n  //# pipe :: Foldable f => f (Any -> Any) -> a -> b\n  //.\n  //. Takes a sequence of functions assumed to be unary and a value of any\n  //. type, and returns the result of applying the sequence of transformations\n  //. to the initial value.\n  //.\n  //. In general terms, `pipe` performs left-to-right composition of a sequence\n  //. of functions. `pipe ([f, g, h]) (x)` is equivalent to `h (g (f (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipe ([S.add (1), Math.sqrt, S.sub (1)]) (99)\n  //. 9\n  //. ```\n  function pipe(fs) {\n    return function(x) {\n      return reduce (T) (x) (fs);\n    };\n  }\n  _.pipe = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Fn ($.Any) ($.Any)), a, b],\n    impl: pipe\n  };\n\n  //# pipeK :: (Foldable f, Chain m) => f (Any -> m Any) -> m a -> m b\n  //.\n  //. Takes a sequence of functions assumed to be unary that return values\n  //. with a [Chain][], and a value of that Chain, and returns the result\n  //. of applying the sequence of transformations to the initial value.\n  //.\n  //. In general terms, `pipeK` performs left-to-right [Kleisli][] composition\n  //. of an sequence of functions. `pipeK ([f, g, h]) (x)` is equivalent to\n  //. `chain (h) (chain (g) (chain (f) (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipeK ([S.tail, S.tail, S.head]) (S.Just ([1, 2, 3, 4]))\n  //. Just (3)\n  //. ```\n  function pipeK(fs) {\n    return function(x) {\n      return Z.reduce (function(x, f) { return Z.chain (f, x); }, x, fs);\n    };\n  }\n  _.pipeK = {\n    consts: {f: [Z.Foldable], m: [Z.Chain]},\n    types: [f ($.Fn ($.Any) (m ($.Any))), m (a), m (b)],\n    impl: pipeK\n  };\n\n  //# on :: (b -> b -> c) -> (a -> b) -> a -> a -> c\n  //.\n  //. Takes a binary function `f`, a unary function `g`, and two\n  //. values `x` and `y`. Returns `f (g (x)) (g (y))`.\n  //.\n  //. This is the P combinator from combinatory logic.\n  //.\n  //. ```javascript\n  //. > S.on (S.concat) (S.reverse) ([1, 2, 3]) ([4, 5, 6])\n  //. [3, 2, 1, 6, 5, 4]\n  //. ```\n  function on(f) {\n    return function(g) {\n      return function(x) {\n        return function(y) {\n          return f (g (x)) (g (y));\n        };\n      };\n    };\n  }\n  _.on = {\n    consts: {},\n    types: [$.Fn (b) ($.Fn (b) (c)), $.Fn (a) (b), a, a, c],\n    impl: on\n  };\n\n  //. ### Pair type\n  //.\n  //. Pair is the canonical product type: a value of type `Pair a b` always\n  //. contains exactly two values: one of type `a`; one of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-pair][].\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > S.Pair ('foo') (42)\n  //. Pair ('foo') (42)\n  //. ```\n  _.Pair = {\n    consts: {},\n    types: [a, b, $.Pair (a) (b)],\n    impl: Pair\n  };\n\n  //# pair :: (a -> b -> c) -> Pair a b -> c\n  //.\n  //. Case analysis for the `Pair a b` type.\n  //.\n  //. ```javascript\n  //. > S.pair (S.concat) (S.Pair ('foo') ('bar'))\n  //. 'foobar'\n  //. ```\n  function pair(f) {\n    return function(pair) {\n      return f (pair.fst) (pair.snd);\n    };\n  }\n  _.pair = {\n    consts: {},\n    types: [$.Fn (a) ($.Fn (b) (c)), $.Pair (a) (b), c],\n    impl: pair\n  };\n\n  //# fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > S.fst (S.Pair ('foo') (42))\n  //. 'foo'\n  //. ```\n  _.fst = {\n    consts: {},\n    types: [$.Pair (a) (b), a],\n    impl: pair (K)\n  };\n\n  //# snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.snd (S.Pair ('foo') (42))\n  //. 42\n  //. ```\n  _.snd = {\n    consts: {},\n    types: [$.Pair (a) (b), b],\n    impl: pair (C (K))\n  };\n\n  //# swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > S.swap (S.Pair ('foo') (42))\n  //. Pair (42) ('foo')\n  //. ```\n  _.swap = {\n    consts: {},\n    types: [$.Pair (a) (b), $.Pair (b) (a)],\n    impl: pair (C (Pair))\n  };\n\n  //. ### Maybe type\n  //.\n  //. The Maybe type represents optional values: a value of type `Maybe a` is\n  //. either Nothing (the empty value) or a Just whose value is of type `a`.\n  //.\n  //. The implementation is provided by [sanctuary-maybe][].\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > S.Nothing\n  //. Nothing\n  //. ```\n\n  //# Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Just (42)\n  //. Just (42)\n  //. ```\n  _.Just = {\n    consts: {},\n    types: [a, $.Maybe (a)],\n    impl: Just\n  };\n\n  //# isNothing :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is Nothing; `false` if it is a Just.\n  //.\n  //. ```javascript\n  //. > S.isNothing (S.Nothing)\n  //. true\n  //.\n  //. > S.isNothing (S.Just (42))\n  //. false\n  //. ```\n  function isNothing(maybe) {\n    return maybe.isNothing;\n  }\n  _.isNothing = {\n    consts: {},\n    types: [$.Maybe (a), $.Boolean],\n    impl: isNothing\n  };\n\n  //# isJust :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is a Just; `false` if it is Nothing.\n  //.\n  //. ```javascript\n  //. > S.isJust (S.Just (42))\n  //. true\n  //.\n  //. > S.isJust (S.Nothing)\n  //. false\n  //. ```\n  function isJust(maybe) {\n    return maybe.isJust;\n  }\n  _.isJust = {\n    consts: {},\n    types: [$.Maybe (a), $.Boolean],\n    impl: isJust\n  };\n\n  //# fromMaybe :: a -> Maybe a -> a\n  //.\n  //. Takes a default value and a Maybe, and returns the Maybe's value\n  //. if the Maybe is a Just; the default value otherwise.\n  //.\n  //. See also [`fromMaybe_`](#fromMaybe_) and\n  //. [`maybeToNullable`](#maybeToNullable).\n  //.\n  //. ```javascript\n  //. > S.fromMaybe (0) (S.Just (42))\n  //. 42\n  //.\n  //. > S.fromMaybe (0) (S.Nothing)\n  //. 0\n  //. ```\n  _.fromMaybe = {\n    consts: {},\n    types: [a, $.Maybe (a), a],\n    impl: C (maybe) (I)\n  };\n\n  //# fromMaybe_ :: (() -> a) -> Maybe a -> a\n  //.\n  //. Variant of [`fromMaybe`](#fromMaybe) that takes a thunk so the default\n  //. value is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Just (1000000))\n  //. 1000000\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Nothing)\n  //. 832040\n  //. ```\n  _.fromMaybe_ = {\n    consts: {},\n    types: [$.Thunk (a), $.Maybe (a), a],\n    impl: C (maybe_) (I)\n  };\n\n  //# maybeToNullable :: Maybe a -> Nullable a\n  //.\n  //. Returns the given Maybe's value if the Maybe is a Just; `null` otherwise.\n  //. [Nullable][] is defined in [sanctuary-def][].\n  //.\n  //. See also [`fromMaybe`](#fromMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToNullable (S.Just (42))\n  //. 42\n  //.\n  //. > S.maybeToNullable (S.Nothing)\n  //. null\n  //. ```\n  function maybeToNullable(maybe) {\n    return maybe.isJust ? maybe.value : null;\n  }\n  _.maybeToNullable = {\n    consts: {},\n    types: [$.Maybe (a), $.Nullable (a)],\n    impl: maybeToNullable\n  };\n\n  //# maybe :: b -> (a -> b) -> Maybe a -> b\n  //.\n  //. Takes a value of any type, a function, and a Maybe. If the Maybe is\n  //. a Just, the return value is the result of applying the function to\n  //. the Just's value. Otherwise, the first argument is returned.\n  //.\n  //. See also [`maybe_`](#maybe_).\n  //.\n  //. ```javascript\n  //. > S.maybe (0) (S.prop ('length')) (S.Just ('refuge'))\n  //. 6\n  //.\n  //. > S.maybe (0) (S.prop ('length')) (S.Nothing)\n  //. 0\n  //. ```\n  function maybe(x) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : x;\n      };\n    };\n  }\n  _.maybe = {\n    consts: {},\n    types: [b, $.Fn (a) (b), $.Maybe (a), b],\n    impl: maybe\n  };\n\n  //# maybe_ :: (() -> b) -> (a -> b) -> Maybe a -> b\n  //.\n  //. Variant of [`maybe`](#maybe) that takes a thunk so the default value\n  //. is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Just (1000000))\n  //. 1000\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Nothing)\n  //. 832040\n  //. ```\n  function maybe_(thunk) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : thunk ();\n      };\n    };\n  }\n  _.maybe_ = {\n    consts: {},\n    types: [$.Thunk (b), $.Fn (a) (b), $.Maybe (a), b],\n    impl: maybe_\n  };\n\n  //# justs :: (Filterable f, Functor f) => f (Maybe a) -> f a\n  //.\n  //. Discards each element that is Nothing, and unwraps each element that is\n  //. a Just. Related to Haskell's `catMaybes` function.\n  //.\n  //. See also [`lefts`](#lefts) and [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.justs ([S.Just ('foo'), S.Nothing, S.Just ('baz')])\n  //. ['foo', 'baz']\n  //. ```\n  function justs(maybes) {\n    return map (prop ('value')) (filter (isJust) (maybes));\n  }\n  _.justs = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Maybe (a)), f (a)],\n    impl: justs\n  };\n\n  //# mapMaybe :: (Filterable f, Functor f) => (a -> Maybe b) -> f a -> f b\n  //.\n  //. Takes a function and a structure, applies the function to each element\n  //. of the structure, and returns the \"successful\" results. If the result of\n  //. applying the function to an element is Nothing, the result is discarded;\n  //. if the result is a Just, the Just's value is included.\n  //.\n  //. ```javascript\n  //. > S.mapMaybe (S.head) ([[], [1, 2, 3], [], [4, 5, 6], []])\n  //. [1, 4]\n  //.\n  //. > S.mapMaybe (S.head) ({x: [1, 2, 3], y: [], z: [4, 5, 6]})\n  //. {x: 1, z: 4}\n  //. ```\n  _.mapMaybe = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [$.Fn (a) ($.Maybe (b)), f (a), f (b)],\n    impl: B (B (justs)) (map)\n  };\n\n  //# maybeToEither :: a -> Maybe b -> Either a b\n  //.\n  //. Converts a Maybe to an Either. Nothing becomes a Left (containing the\n  //. first argument); a Just becomes a Right.\n  //.\n  //. See also [`eitherToMaybe`](#eitherToMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('xyz'))\n  //. Left ('Expecting an integer')\n  //.\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('42'))\n  //. Right (42)\n  //. ```\n  function maybeToEither(x) {\n    return maybe (Left (x)) (Right);\n  }\n  _.maybeToEither = {\n    consts: {},\n    types: [a, $.Maybe (b), $.Either (a) (b)],\n    impl: maybeToEither\n  };\n\n  //. ### Either type\n  //.\n  //. The Either type represents values with two possibilities: a value of type\n  //. `Either a b` is either a Left whose value is of type `a` or a Right whose\n  //. value is of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-either][].\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Left ('Cannot divide by zero')\n  //. Left ('Cannot divide by zero')\n  //. ```\n  _.Left = {\n    consts: {},\n    types: [a, $.Either (a) (b)],\n    impl: Left\n  };\n\n  //# Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > S.Right (42)\n  //. Right (42)\n  //. ```\n  _.Right = {\n    consts: {},\n    types: [b, $.Either (a) (b)],\n    impl: Right\n  };\n\n  //# isLeft :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Left; `false` if it is a Right.\n  //.\n  //. ```javascript\n  //. > S.isLeft (S.Left ('Cannot divide by zero'))\n  //. true\n  //.\n  //. > S.isLeft (S.Right (42))\n  //. false\n  //. ```\n  function isLeft(either) {\n    return either.isLeft;\n  }\n  _.isLeft = {\n    consts: {},\n    types: [$.Either (a) (b), $.Boolean],\n    impl: isLeft\n  };\n\n  //# isRight :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Right; `false` if it is a Left.\n  //.\n  //. ```javascript\n  //. > S.isRight (S.Right (42))\n  //. true\n  //.\n  //. > S.isRight (S.Left ('Cannot divide by zero'))\n  //. false\n  //. ```\n  function isRight(either) {\n    return either.isRight;\n  }\n  _.isRight = {\n    consts: {},\n    types: [$.Either (a) (b), $.Boolean],\n    impl: isRight\n  };\n\n  //# fromEither :: b -> Either a b -> b\n  //.\n  //. Takes a default value and an Either, and returns the Right value\n  //. if the Either is a Right; the default value otherwise.\n  //.\n  //. ```javascript\n  //. > S.fromEither (0) (S.Right (42))\n  //. 42\n  //.\n  //. > S.fromEither (0) (S.Left (42))\n  //. 0\n  //. ```\n  function fromEither(x) {\n    return either (K (x)) (I);\n  }\n  _.fromEither = {\n    consts: {},\n    types: [b, $.Either (a) (b), b],\n    impl: fromEither\n  };\n\n  //# either :: (a -> c) -> (b -> c) -> Either a b -> c\n  //.\n  //. Takes two functions and an Either, and returns the result of\n  //. applying the first function to the Left's value, if the Either\n  //. is a Left, or the result of applying the second function to the\n  //. Right's value, if the Either is a Right.\n  //.\n  //. ```javascript\n  //. > S.either (S.toUpper) (S.show) (S.Left ('Cannot divide by zero'))\n  //. 'CANNOT DIVIDE BY ZERO'\n  //.\n  //. > S.either (S.toUpper) (S.show) (S.Right (42))\n  //. '42'\n  //. ```\n  function either(l) {\n    return function(r) {\n      return function(either) {\n        return (either.isLeft ? l : r) (either.value);\n      };\n    };\n  }\n  _.either = {\n    consts: {},\n    types: [$.Fn (a) (c), $.Fn (b) (c), $.Either (a) (b), c],\n    impl: either\n  };\n\n  //# lefts :: (Filterable f, Functor f) => f (Either a b) -> f a\n  //.\n  //. Discards each element that is a Right, and unwraps each element that is\n  //. a Left.\n  //.\n  //. See also [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.lefts ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. ['foo', 'bar']\n  //. ```\n  _.lefts = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Either (a) (b)), f (a)],\n    impl: B (map (prop ('value'))) (filter (isLeft))\n  };\n\n  //# rights :: (Filterable f, Functor f) => f (Either a b) -> f b\n  //.\n  //. Discards each element that is a Left, and unwraps each element that is\n  //. a Right.\n  //.\n  //. See also [`lefts`](#lefts).\n  //.\n  //. ```javascript\n  //. > S.rights ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. [20, 10]\n  //. ```\n  _.rights = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($.Either (a) (b)), f (b)],\n    impl: B (map (prop ('value'))) (filter (isRight))\n  };\n\n  //# tagBy :: (a -> Boolean) -> a -> Either a a\n  //.\n  //. Takes a predicate and a value, and returns a Right of the value if it\n  //. satisfies the predicate; a Left of the value otherwise.\n  //.\n  //. ```javascript\n  //. > S.tagBy (S.odd) (0)\n  //. Left (0)\n  //\n  //. > S.tagBy (S.odd) (1)\n  //. Right (1)\n  //. ```\n  function tagBy(pred) {\n    return ifElse (pred) (Right) (Left);\n  }\n  _.tagBy = {\n    consts: {},\n    types: [$.Predicate (a), a, $.Either (a) (a)],\n    impl: tagBy\n  };\n\n  //# encase :: (a -> b) -> a -> Either Error b\n  //.\n  //. Takes a function that may throw and returns a pure function.\n  //.\n  //. ```javascript\n  //. > S.encase (JSON.parse) ('[\"foo\",\"bar\",\"baz\"]')\n  //. Right (['foo', 'bar', 'baz'])\n  //.\n  //. > S.encase (JSON.parse) ('[')\n  //. Left (new SyntaxError ('Unexpected end of JSON input'))\n  //. ```\n  function encase(f) {\n    return function(x) {\n      try {\n        return Right (f (x));\n      } catch (err) {\n        return Left (err);\n      }\n    };\n  }\n  _.encase = {\n    consts: {},\n    types: [$.Fn (a) (b), a, $.Either ($.Error) (b)],\n    impl: encase\n  };\n\n  //# eitherToMaybe :: Either a b -> Maybe b\n  //.\n  //. Converts an Either to a Maybe. A Left becomes Nothing; a Right becomes\n  //. a Just.\n  //.\n  //. See also [`maybeToEither`](#maybeToEither).\n  //.\n  //. ```javascript\n  //. > S.eitherToMaybe (S.Left ('Cannot divide by zero'))\n  //. Nothing\n  //.\n  //. > S.eitherToMaybe (S.Right (42))\n  //. Just (42)\n  //. ```\n  function eitherToMaybe(either) {\n    return either.isLeft ? Nothing : Just (either.value);\n  }\n  _.eitherToMaybe = {\n    consts: {},\n    types: [$.Either (a) (b), $.Maybe (b)],\n    impl: eitherToMaybe\n  };\n\n  //. ### Logic\n\n  //# and :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"and\".\n  //.\n  //. ```javascript\n  //. > S.and (false) (false)\n  //. false\n  //.\n  //. > S.and (false) (true)\n  //. false\n  //.\n  //. > S.and (true) (false)\n  //. false\n  //.\n  //. > S.and (true) (true)\n  //. true\n  //. ```\n  function and(x) {\n    return function(y) {\n      return x && y;\n    };\n  }\n  _.and = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: and\n  };\n\n  //# or :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"or\".\n  //.\n  //. ```javascript\n  //. > S.or (false) (false)\n  //. false\n  //.\n  //. > S.or (false) (true)\n  //. true\n  //.\n  //. > S.or (true) (false)\n  //. true\n  //.\n  //. > S.or (true) (true)\n  //. true\n  //. ```\n  function or(x) {\n    return function(y) {\n      return x || y;\n    };\n  }\n  _.or = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: or\n  };\n\n  //# not :: Boolean -> Boolean\n  //.\n  //. Boolean \"not\".\n  //.\n  //. See also [`complement`](#complement).\n  //.\n  //. ```javascript\n  //. > S.not (false)\n  //. true\n  //.\n  //. > S.not (true)\n  //. false\n  //. ```\n  function not(x) {\n    return !x;\n  }\n  _.not = {\n    consts: {},\n    types: [$.Boolean, $.Boolean],\n    impl: not\n  };\n\n  //# complement :: (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a unary predicate and a value of any type, and returns the logical\n  //. negation of applying the predicate to the value.\n  //.\n  //. See also [`not`](#not).\n  //.\n  //. ```javascript\n  //. > Number.isInteger (42)\n  //. true\n  //.\n  //. > S.complement (Number.isInteger) (42)\n  //. false\n  //. ```\n  _.complement = {\n    consts: {},\n    types: [$.Predicate (a), a, $.Boolean],\n    impl: B (not)\n  };\n\n  //# boolean :: a -> a -> Boolean -> a\n  //.\n  //. Case analysis for the `Boolean` type. `boolean (x) (y) (b)` evaluates\n  //. to `x` if `b` is `false`; to `y` if `b` is `true`.\n  //.\n  //. ```javascript\n  //. > S.boolean ('no') ('yes') (false)\n  //. 'no'\n  //.\n  //. > S.boolean ('no') ('yes') (true)\n  //. 'yes'\n  //. ```\n  function boolean(x) {\n    return function(y) {\n      return function(b) {\n        return b ? y : x;\n      };\n    };\n  }\n  _.boolean = {\n    consts: {},\n    types: [a, a, $.Boolean, a],\n    impl: boolean\n  };\n\n  //# ifElse :: (a -> Boolean) -> (a -> b) -> (a -> b) -> a -> b\n  //.\n  //. Takes a unary predicate, a unary \"if\" function, a unary \"else\"\n  //. function, and a value of any type, and returns the result of\n  //. applying the \"if\" function to the value if the value satisfies\n  //. the predicate; the result of applying the \"else\" function to the\n  //. value otherwise.\n  //.\n  //. See also [`when`](#when) and [`unless`](#unless).\n  //.\n  //. ```javascript\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (-1)\n  //. 1\n  //.\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (16)\n  //. 4\n  //. ```\n  function ifElse(pred) {\n    return function(f) {\n      return function(g) {\n        return function(x) {\n          return (pred (x) ? f : g) (x);\n        };\n      };\n    };\n  }\n  _.ifElse = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (b), $.Fn (a) (b), a, b],\n    impl: ifElse\n  };\n\n  //# when :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. satisfies the predicate; the value otherwise.\n  //.\n  //. See also [`unless`](#unless) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.when (x => x >= 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.when (x => x >= 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function when(pred) {\n    return C (ifElse (pred)) (I);\n  }\n  _.when = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (a), a, a],\n    impl: when\n  };\n\n  //# unless :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. does not satisfy the predicate; the value otherwise.\n  //.\n  //. See also [`when`](#when) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.unless (x => x < 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.unless (x => x < 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function unless(pred) {\n    return ifElse (pred) (I);\n  }\n  _.unless = {\n    consts: {},\n    types: [$.Predicate (a), $.Fn (a) (a), a, a],\n    impl: unless\n  };\n\n  //. ### Array\n\n  //# array :: b -> (a -> Array a -> b) -> Array a -> b\n  //.\n  //. Case analysis for the `Array a` type.\n  //.\n  //. ```javascript\n  //. > S.array (S.Nothing) (head => tail => S.Just (head)) ([])\n  //. Nothing\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (head)) ([1, 2, 3])\n  //. Just (1)\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (tail)) ([])\n  //. Nothing\n  //.\n  //. > S.array (S.Nothing) (head => tail => S.Just (tail)) ([1, 2, 3])\n  //. Just ([2, 3])\n  //. ```\n  function array(y) {\n    return function(f) {\n      return function(xs) {\n        return xs.length === 0 ? y : f (xs[0]) (xs.slice (1));\n      };\n    };\n  }\n  _.array = {\n    consts: {},\n    types: [b, $.Fn (a) ($.Fn ($.Array (a)) (b)), $.Array (a), b],\n    impl: array\n  };\n\n  //# head :: Foldable f => f a -> Maybe a\n  //.\n  //. Returns Just the first element of the given structure if the structure\n  //. contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.head ([1, 2, 3])\n  //. Just (1)\n  //.\n  //. > S.head ([])\n  //. Nothing\n  //.\n  //. > S.head (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (1)\n  //.\n  //. > S.head (Nil)\n  //. Nothing\n  //. ```\n  function head(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable[0]) : Nothing;\n    }\n    return Z.reduce (function(m, x) { return m.isJust ? m : Just (x); },\n                     Nothing,\n                     foldable);\n  }\n  _.head = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Maybe (a)],\n    impl: head\n  };\n\n  //# last :: Foldable f => f a -> Maybe a\n  //.\n  //. Returns Just the last element of the given structure if the structure\n  //. contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.last ([1, 2, 3])\n  //. Just (3)\n  //.\n  //. > S.last ([])\n  //. Nothing\n  //.\n  //. > S.last (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (3)\n  //.\n  //. > S.last (Nil)\n  //. Nothing\n  //. ```\n  function last(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable[foldable.length - 1])\n                                 : Nothing;\n    }\n    return Z.reduce (function(_, x) { return Just (x); }, Nothing, foldable);\n  }\n  _.last = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Maybe (a)],\n    impl: last\n  };\n\n  //# tail :: (Applicative f, Foldable f, Monoid (f a)) => f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the first of the given structure's elements if the\n  //. structure contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.tail ([1, 2, 3])\n  //. Just ([2, 3])\n  //.\n  //. > S.tail ([])\n  //. Nothing\n  //.\n  //. > S.tail (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (Cons (2) (Cons (3) (Nil)))\n  //\n  //. > S.tail (Nil)\n  //. Nothing\n  //. ```\n  function tail(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable.slice (1)) : Nothing;\n    }\n    var empty = Z.empty (foldable.constructor);\n    return Z.reduce (function(m, x) {\n      return Just (maybe (empty) (append (x)) (m));\n    }, Nothing, foldable);\n  }\n  _.tail = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), $.Maybe (f (a))],\n    impl: tail\n  };\n\n  //# init :: (Applicative f, Foldable f, Monoid (f a)) => f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the last of the given structure's elements if the\n  //. structure contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.init ([1, 2, 3])\n  //. Just ([1, 2])\n  //.\n  //. > S.init ([])\n  //. Nothing\n  //.\n  //. > S.init (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Just (Cons (1) (Cons (2) (Nil)))\n  //.\n  //. > S.init (Nil)\n  //. Nothing\n  //. ```\n  function init(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray (foldable)) {\n      return foldable.length > 0 ? Just (foldable.slice (0, -1)) : Nothing;\n    }\n    var empty = Z.empty (foldable.constructor);\n    return Z.map (Pair.snd, Z.reduce (function(m, x) {\n      return Just (Pair (x) (maybe (empty) (pair (append)) (m)));\n    }, Nothing, foldable));\n  }\n  _.init = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), $.Maybe (f (a))],\n    impl: init\n  };\n\n  //# take :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just the first N elements of the given structure if N is\n  //. non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.take (0) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.take (1) (['foo', 'bar'])\n  //. Just (['foo'])\n  //.\n  //. > S.take (2) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.take (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.take (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Cons (5) (Nil))))))\n  //. Just (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. ```\n  function _takeDrop(arrayCase, generalCase) {\n    return function(n) {\n      return function(xs) {\n        if (n < 0) return Nothing;\n\n        //  Fast path for arrays.\n        if (Array.isArray (xs)) {\n          return n <= xs.length ? Just (arrayCase (n, xs)) : Nothing;\n        }\n\n        //  m :: Maybe (Pair Integer (f a))\n        var m = Z.reduce (function(m, x) {\n          return Z.map (function(pair) {\n            var n = pair.fst;\n            var xs = pair.snd;\n            return Pair (n - 1) (generalCase (n, xs, x));\n          }, m);\n        }, Just (Pair (n) (Z.empty (xs.constructor))), xs);\n\n        return Z.map (Pair.snd, Z.reject (B (gt (0)) (Pair.fst), m));\n      };\n    };\n  }\n  var take = _takeDrop (\n    function(n, xs) { return xs.slice (0, n); },\n    function(n, xs, x) { return n > 0 ? Z.append (x, xs) : xs; }\n  );\n  _.take = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: take\n  };\n\n  //# drop :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the first N elements of the given structure if\n  //. N is non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.drop (0) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.drop (1) (['foo', 'bar'])\n  //. Just (['bar'])\n  //.\n  //. > S.drop (2) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.drop (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.drop (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Cons (5) (Nil))))))\n  //. Just (Cons (4) (Cons (5) (Nil)))\n  //. ```\n  var drop = _takeDrop (\n    function(n, xs) { return xs.slice (n); },\n    function(n, xs, x) { return n > 0 ? xs : Z.append (x, xs); }\n  );\n  _.drop = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: drop\n  };\n\n  //# takeLast :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just the last N elements of the given structure if N is\n  //. non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.takeLast (0) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.takeLast (1) (['foo', 'bar'])\n  //. Just (['bar'])\n  //.\n  //. > S.takeLast (2) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.takeLast (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.takeLast (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Nil)))))\n  //. Just (Cons (2) (Cons (3) (Cons (4) (Nil))))\n  //. ```\n  function takeLast(n) {\n    return function(xs) {\n      return Z.map (Z.reverse, take (n) (Z.reverse (xs)));\n    };\n  }\n  _.takeLast = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: takeLast\n  };\n\n  //# dropLast :: (Applicative f, Foldable f, Monoid (f a)) => Integer -> f a -> Maybe (f a)\n  //.\n  //. Returns Just all but the last N elements of the given structure if\n  //. N is non-negative and less than or equal to the size of the structure;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.dropLast (0) (['foo', 'bar'])\n  //. Just (['foo', 'bar'])\n  //.\n  //. > S.dropLast (1) (['foo', 'bar'])\n  //. Just (['foo'])\n  //.\n  //. > S.dropLast (2) (['foo', 'bar'])\n  //. Just ([])\n  //.\n  //. > S.dropLast (3) (['foo', 'bar'])\n  //. Nothing\n  //.\n  //. > S.dropLast (3) (Cons (1) (Cons (2) (Cons (3) (Cons (4) (Nil)))))\n  //. Just (Cons (1) (Nil))\n  //. ```\n  function dropLast(n) {\n    return function(xs) {\n      return Z.map (Z.reverse, drop (n) (Z.reverse (xs)));\n    };\n  }\n  _.dropLast = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Integer, f (a), $.Maybe (f (a))],\n    impl: dropLast\n  };\n\n  //# takeWhile :: (a -> Boolean) -> Array a -> Array a\n  //.\n  //. Discards the first element that does not satisfy the predicate,\n  //. and all subsequent elements.\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > S.takeWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7]\n  //.\n  //. > S.takeWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. []\n  //. ```\n  function takeWhile(pred) {\n    return function(xs) {\n      var idx = 0;\n      while (idx < xs.length && pred (xs[idx])) idx += 1;\n      return xs.slice (0, idx);\n    };\n  }\n  _.takeWhile = {\n    consts: {},\n    types: [$.Predicate (a), $.Array (a), $.Array (a)],\n    impl: takeWhile\n  };\n\n  //# dropWhile :: (a -> Boolean) -> Array a -> Array a\n  //.\n  //. Retains the first element that does not satisfy the predicate,\n  //. and all subsequent elements.\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > S.dropWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [6, 3, 5, 4]\n  //.\n  //. > S.dropWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7, 6, 3, 5, 4]\n  //. ```\n  function dropWhile(pred) {\n    return function(xs) {\n      var idx = 0;\n      while (idx < xs.length && pred (xs[idx])) idx += 1;\n      return xs.slice (idx);\n    };\n  }\n  _.dropWhile = {\n    consts: {},\n    types: [$.Predicate (a), $.Array (a), $.Array (a)],\n    impl: dropWhile\n  };\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.size ([])\n  //. 0\n  //.\n  //. > S.size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > S.size (Nil)\n  //. 0\n  //.\n  //. > S.size (Cons ('foo') (Cons ('bar') (Cons ('baz') (Nil))))\n  //. 3\n  //.\n  //. > S.size (S.Nothing)\n  //. 0\n  //.\n  //. > S.size (S.Just ('quux'))\n  //. 1\n  //.\n  //. > S.size (S.Pair ('ignored!') ('counted!'))\n  //. 1\n  //. ```\n  _.size = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Integer],\n    impl: Z.size\n  };\n\n  //# all :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] all the elements of the structure satisfy the\n  //. predicate.\n  //.\n  //. See also [`any`](#any) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > S.all (S.odd) ([])\n  //. true\n  //.\n  //. > S.all (S.odd) ([1, 3, 5])\n  //. true\n  //.\n  //. > S.all (S.odd) ([1, 2, 3])\n  //. false\n  //. ```\n  _.all = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.all)\n  };\n\n  //# any :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] any element of the structure satisfies the\n  //. predicate.\n  //.\n  //. See also [`all`](#all) and [`none`](#none).\n  //.\n  //. ```javascript\n  //. > S.any (S.odd) ([])\n  //. false\n  //.\n  //. > S.any (S.odd) ([2, 4, 6])\n  //. false\n  //.\n  //. > S.any (S.odd) ([1, 2, 3])\n  //. true\n  //. ```\n  _.any = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.any)\n  };\n\n  //# none :: Foldable f => (a -> Boolean) -> f a -> Boolean\n  //.\n  //. Returns `true` [iff][] none of the elements of the structure satisfies\n  //. the predicate.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: a -> Boolean, xs :: Foldable f => f a.\n  //.      S.none (p) (xs) = S.not (S.any (p) (xs))`\n  //.\n  //.   - `forall p :: a -> Boolean, xs :: Foldable f => f a.\n  //.      S.none (p) (xs) = S.all (S.complement (p)) (xs)`\n  //.\n  //. See also [`all`](#all) and [`any`](#any).\n  //.\n  //. ```javascript\n  //. > S.none (S.odd) ([])\n  //. true\n  //.\n  //. > S.none (S.odd) ([2, 4, 6])\n  //. true\n  //.\n  //. > S.none (S.odd) ([1, 2, 3])\n  //. false\n  //. ```\n  _.none = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Boolean],\n    impl: curry2 (Z.none)\n  };\n\n  //# append :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > S.append (3) ([1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > S.append (3) (Cons (1) (Cons (2) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.append ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.append ([3]) (S.Just ([1, 2]))\n  //. Just ([1, 2, 3])\n  //. ```\n  function append(x) {\n    return function(xs) {\n      return Z.append (x, xs);\n    };\n  }\n  _.append = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: append\n  };\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > S.prepend (1) ([2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > S.prepend (1) (Cons (2) (Cons (3) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.prepend ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.prepend ([1]) (S.Just ([2, 3]))\n  //. Just ([1, 2, 3])\n  //. ```\n  _.prepend = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: curry2 (Z.prepend)\n  };\n\n  //# joinWith :: String -> Array String -> String\n  //.\n  //. Joins the strings of the second argument separated by the first argument.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s) (S.splitOn (s) (t)) = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.joinWith (':') (['foo', 'bar', 'baz'])\n  //. 'foo:bar:baz'\n  //. ```\n  _.joinWith = {\n    consts: {},\n    types: [$.String, $.Array ($.String), $.String],\n    impl: invoke1 ('join')\n  };\n\n  //# elem :: (Setoid a, Foldable f) => a -> f a -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` [iff][] the value is an\n  //. element of the structure.\n  //.\n  //. See also [`find`](#find).\n  //.\n  //. ```javascript\n  //. > S.elem ('c') (['a', 'b', 'c'])\n  //. true\n  //.\n  //. > S.elem ('x') (['a', 'b', 'c'])\n  //. false\n  //.\n  //. > S.elem (3) ({x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > S.elem (8) ({x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > S.elem (0) (S.Just (0))\n  //. true\n  //.\n  //. > S.elem (0) (S.Just (1))\n  //. false\n  //.\n  //. > S.elem (0) (S.Nothing)\n  //. false\n  //. ```\n  _.elem = {\n    consts: {a: [Z.Setoid], f: [Z.Foldable]},\n    types: [a, f (a), $.Boolean],\n    impl: curry2 (Z.elem)\n  };\n\n  //# find :: Foldable f => (a -> Boolean) -> f a -> Maybe a\n  //.\n  //. Takes a predicate and a structure and returns Just the leftmost element\n  //. of the structure that satisfies the predicate; Nothing if there is no\n  //. such element.\n  //.\n  //. See also [`elem`](#elem).\n  //.\n  //. ```javascript\n  //. > S.find (S.lt (0)) ([1, -2, 3, -4, 5])\n  //. Just (-2)\n  //.\n  //. > S.find (S.lt (0)) ([1, 2, 3, 4, 5])\n  //. Nothing\n  //. ```\n  function find(pred) {\n    return function(xs) {\n      return Z.reduce (\n        function(m, x) {\n          return m.isJust ? m : pred (x) ? Just (x) : Nothing;\n        },\n        Nothing,\n        xs\n      );\n    };\n  }\n  _.find = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $.Maybe (a)],\n    impl: find\n  };\n\n  //# foldMap :: (Monoid m, Foldable f) => TypeRep m -> (a -> m) -> f a -> m\n  //.\n  //. Curried version of [`Z.foldMap`][]. Deconstructs a foldable by mapping\n  //. every element to a monoid and concatenating the results.\n  //.\n  //. ```javascript\n  //. > S.foldMap (String) (f => f.name) ([Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //.\n  //. > S.foldMap (Array) (x => [x + 1, x + 2]) ([10, 20, 30])\n  //. [11, 12, 21, 22, 31, 32]\n  //. ```\n  _.foldMap = {\n    consts: {b: [Z.Monoid], f: [Z.Foldable]},\n    types: [TypeRep (b), $.Fn (a) (b), f (a), b],\n    impl: curry3 (Z.foldMap)\n  };\n\n  //# unfoldr :: (b -> Maybe (Pair a b)) -> b -> Array a\n  //.\n  //. Takes a function and a seed value, and returns an array generated by\n  //. applying the function repeatedly. The array is initially empty. The\n  //. function is initially applied to the seed value. Each application\n  //. of the function should result in either:\n  //.\n  //.   - Nothing, in which case the array is returned; or\n  //.\n  //.   - Just a pair, in which case the first element is appended to\n  //.     the array and the function is applied to the second element.\n  //.\n  //. ```javascript\n  //. > S.unfoldr (n => n < 1000 ? S.Just (S.Pair (n) (2 * n)) : S.Nothing) (1)\n  //. [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]\n  //. ```\n  function unfoldr(f) {\n    return function(x) {\n      var result = [];\n      for (var m = f (x); m.isJust; m = f (m.value.snd)) {\n        result.push (m.value.fst);\n      }\n      return result;\n    };\n  }\n  _.unfoldr = {\n    consts: {},\n    types: [$.Fn (b) ($.Maybe ($.Pair (a) (b))), b, $.Array (a)],\n    impl: unfoldr\n  };\n\n  //# range :: Integer -> Integer -> Array Integer\n  //.\n  //. Returns an array of consecutive integers starting with the first argument\n  //. and ending with the second argument minus one. Returns `[]` if the second\n  //. argument is less than or equal to the first argument.\n  //.\n  //. ```javascript\n  //. > S.range (0) (10)\n  //. [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  //.\n  //. > S.range (-5) (0)\n  //. [-5, -4, -3, -2, -1]\n  //.\n  //. > S.range (0) (-5)\n  //. []\n  //. ```\n  function range(from) {\n    return function(to) {\n      var result = [];\n      for (var n = from; n < to; n += 1) result.push (n);\n      return result;\n    };\n  }\n  _.range = {\n    consts: {},\n    types: [$.Integer, $.Integer, $.Array ($.Integer)],\n    impl: range\n  };\n\n  //# groupBy :: (a -> a -> Boolean) -> Array a -> Array (Array a)\n  //.\n  //. Splits its array argument into an array of arrays of equal,\n  //. adjacent elements. Equality is determined by the function\n  //. provided as the first argument. Its behaviour can be surprising\n  //. for functions that aren't reflexive, transitive, and symmetric\n  //. (see [equivalence][] relation).\n  //.\n  //. Properties:\n  //.\n  //.   - `forall f :: a -> a -> Boolean, xs :: Array a.\n  //.      S.join (S.groupBy (f) (xs)) = xs`\n  //.\n  //. ```javascript\n  //. > S.groupBy (S.equals) ([1, 1, 2, 1, 1])\n  //. [[1, 1], [2], [1, 1]]\n  //.\n  //. > S.groupBy (x => y => x + y === 0) ([2, -3, 3, 3, 3, 4, -4, 4])\n  //. [[2], [-3, 3, 3, 3], [4, -4], [4]]\n  //. ```\n  function groupBy(f) {\n    return function(xs) {\n      if (xs.length === 0) return [];\n      var x0 = xs[0];         // :: a\n      var active = [x0];      // :: Array a\n      var result = [active];  // :: Array (Array a)\n      for (var idx = 1; idx < xs.length; idx += 1) {\n        var x = xs[idx];\n        if (f (x0) (x)) active.push (x); else result.push (active = [x0 = x]);\n      }\n      return result;\n    };\n  }\n  _.groupBy = {\n    consts: {},\n    types: [$.Fn (a) ($.Predicate (a)), $.Array (a), $.Array ($.Array (a))],\n    impl: groupBy\n  };\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > S.reverse (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Cons (3) (Cons (2) (Cons (1) (Nil)))\n  //.\n  //. > S.pipe ([S.splitOn (''), S.reverse, S.joinWith ('')]) ('abc')\n  //. 'cba'\n  //. ```\n  _.reverse = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), f (a)],\n    impl: Z.reverse\n  };\n\n  //# sort :: (Ord a, Applicative m, Foldable m, Monoid (m a)) => m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] for comparisons.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sort (S.sort (m)) = S.sort (m)` (idempotence)\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > S.sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > S.sort ([S.Left (4), S.Right (3), S.Left (2), S.Right (1)])\n  //. [Left (2), Left (4), Right (1), Right (3)]\n  //. ```\n  _.sort = {\n    consts: {a: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [m (a), m (a)],\n    impl: Z.sort\n  };\n\n  //# sortBy :: (Ord b, Applicative m, Foldable m, Monoid (m a)) => (a -> b) -> m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] to compare the values produced by applying the given function\n  //. to each element of the structure.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sortBy (f) (S.sortBy (f) (m)) = S.sortBy (f) (m)` (idempotence)\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > S.sortBy (S.prop ('rank')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 2, suit: 'hearts'},\n  //. . {rank: 5, suit: 'hearts'},\n  //. . {rank: 5, suit: 'spades'},\n  //. . {rank: 7, suit: 'spades'} ]\n  //.\n  //. > S.sortBy (S.prop ('suit')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 5, suit: 'hearts'},\n  //. . {rank: 2, suit: 'hearts'},\n  //. . {rank: 7, suit: 'spades'},\n  //. . {rank: 5, suit: 'spades'} ]\n  //. ```\n  //.\n  //. If descending order is desired, one may use [`Descending`][]:\n  //.\n  //. ```javascript\n  //. > S.sortBy (Descending) ([83, 97, 110, 99, 116, 117, 97, 114, 121])\n  //. [121, 117, 116, 114, 110, 99, 97, 97, 83]\n  //. ```\n  _.sortBy = {\n    consts: {b: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [$.Fn (a) (b), m (a), m (a)],\n    impl: curry2 (Z.sortBy)\n  };\n\n  //# zip :: Array a -> Array b -> Array (Pair a b)\n  //.\n  //. Returns an array of pairs of corresponding elements from the given\n  //. arrays. The length of the resulting array is equal to the length of\n  //. the shorter input array.\n  //.\n  //. See also [`zipWith`](#zipWith).\n  //.\n  //. ```javascript\n  //. > S.zip (['a', 'b']) (['x', 'y', 'z'])\n  //. [Pair ('a') ('x'), Pair ('b') ('y')]\n  //.\n  //. > S.zip ([1, 3, 5]) ([2, 4])\n  //. [Pair (1) (2), Pair (3) (4)]\n  //. ```\n  _.zip = {\n    consts: {},\n    types: [$.Array (a), $.Array (b), $.Array ($.Pair (a) (b))],\n    impl: zipWith (Pair)\n  };\n\n  //# zipWith :: (a -> b -> c) -> Array a -> Array b -> Array c\n  //.\n  //. Returns the result of combining, pairwise, the given arrays using the\n  //. given binary function. The length of the resulting array is equal to the\n  //. length of the shorter input array.\n  //.\n  //. See also [`zip`](#zip).\n  //.\n  //. ```javascript\n  //. > S.zipWith (a => b => a + b) (['a', 'b']) (['x', 'y', 'z'])\n  //. ['ax', 'by']\n  //.\n  //. > S.zipWith (a => b => [a, b]) ([1, 3, 5]) ([2, 4])\n  //. [[1, 2], [3, 4]]\n  //. ```\n  function zipWith(f) {\n    return function(xs) {\n      return function(ys) {\n        var result = [];\n        var len = Math.min (xs.length, ys.length);\n        for (var idx = 0; idx < len; idx += 1) {\n          result.push (f (xs[idx]) (ys[idx]));\n        }\n        return result;\n      };\n    };\n  }\n  _.zipWith = {\n    consts: {},\n    types: [$.Fn (a) ($.Fn (b) (c)), $.Array (a), $.Array (b), $.Array (c)],\n    impl: zipWith\n  };\n\n  //. ### Object\n\n  //# prop :: String -> a -> b\n  //.\n  //. Takes a property name and an object with known properties and returns\n  //. the value of the specified property. If for some reason the object\n  //. lacks the specified property, a type error is thrown.\n  //.\n  //. For accessing properties of uncertain objects, use [`get`](#get) instead.\n  //. For accessing string map values by key, use [`value`](#value) instead.\n  //.\n  //. ```javascript\n  //. > S.prop ('a') ({a: 1, b: 2})\n  //. 1\n  //. ```\n  function prop(key) {\n    return function(x) {\n      var obj = toObject (x);\n      if (key in obj) return obj[key];\n      throw new TypeError ('‘prop’ expected object to have a property named ' +\n                           '‘' + key + '’; ' + show (x) + ' does not');\n    };\n  }\n  _.prop = {\n    consts: {},\n    types: [$.String, a, b],\n    impl: prop\n  };\n\n  //# props :: Array String -> a -> b\n  //.\n  //. Takes a property path (an array of property names) and an object with\n  //. known structure and returns the value at the given path. If for some\n  //. reason the path does not exist, a type error is thrown.\n  //.\n  //. For accessing property paths of uncertain objects, use [`gets`](#gets)\n  //. instead.\n  //.\n  //. ```javascript\n  //. > S.props (['a', 'b', 'c']) ({a: {b: {c: 1}}})\n  //. 1\n  //. ```\n  function props(path) {\n    return function(x) {\n      return path.reduce (function(x, key) {\n        var obj = toObject (x);\n        if (key in obj) return obj[key];\n        throw new TypeError ('‘props’ expected object to have a property at ' +\n                             show (path) + '; ' + show (x) + ' does not');\n      }, x);\n    };\n  }\n  _.props = {\n    consts: {},\n    types: [$.Array ($.String), a, b],\n    impl: props\n  };\n\n  //# get :: (Any -> Boolean) -> String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property name, and an object and returns Just the\n  //. value of the specified object property if it exists and the value\n  //. satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`gets`](#gets), [`prop`](#prop), and [`value`](#value).\n  //.\n  //. ```javascript\n  //. > S.get (S.is ($.Number)) ('x') ({x: 1, y: 2})\n  //. Just (1)\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({x: '1', y: '2'})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3]})\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3, null]})\n  //. Nothing\n  //. ```\n  function get(pred) {\n    return B (B (filter (pred))) (get_);\n  }\n  _.get = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, a, $.Maybe (b)],\n    impl: get\n  };\n\n  //# gets :: (Any -> Boolean) -> Array String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property path (an array of property names), and\n  //. an object and returns Just the value at the given path if such a path\n  //. exists and the value satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: 42}}})\n  //. Just (42)\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: '42'}}})\n  //. Nothing\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({})\n  //. Nothing\n  //. ```\n  function gets(pred) {\n    return function(keys) {\n      return function(x) {\n        return Z.filter (pred, keys.reduce (function(maybe, key) {\n          return Z.chain (get_ (key), maybe);\n        }, Just (x)));\n      };\n    };\n  }\n  _.gets = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.Array ($.String), a, $.Maybe (b)],\n    impl: gets\n  };\n\n  //. ### StrMap\n  //.\n  //. StrMap is an abbreviation of _string map_. A string map is an object,\n  //. such as `{foo: 1, bar: 2, baz: 3}`, whose values are all members of\n  //. the same type. Formally, a value is a member of type `StrMap a` if its\n  //. [type identifier][] is `'Object'` and the values of its enumerable own\n  //. properties are all members of type `a`.\n\n  //# value :: String -> StrMap a -> Maybe a\n  //.\n  //. Retrieve the value associated with the given key in the given string map.\n  //.\n  //. Formally, `value (k) (m)` evaluates to `Just (m[k])` if `k` is an\n  //. enumerable own property of `m`; `Nothing` otherwise.\n  //.\n  //. See also [`prop`](#prop) and [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.value ('foo') ({foo: 1, bar: 2})\n  //. Just (1)\n  //.\n  //. > S.value ('bar') ({foo: 1, bar: 2})\n  //. Just (2)\n  //.\n  //. > S.value ('baz') ({foo: 1, bar: 2})\n  //. Nothing\n  //. ```\n  function value(key) {\n    return function(strMap) {\n      return Object.prototype.propertyIsEnumerable.call (strMap, key) ?\n             Just (strMap[key]) :\n             Nothing;\n    };\n  }\n  _.value = {\n    consts: {},\n    types: [$.String, $.StrMap (a), $.Maybe (a)],\n    impl: value\n  };\n\n  //# singleton :: String -> a -> StrMap a\n  //.\n  //. Takes a string and a value of any type, and returns a string map with\n  //. a single entry (mapping the key to the value).\n  //.\n  //. ```javascript\n  //. > S.singleton ('foo') (42)\n  //. {foo: 42}\n  //. ```\n  function singleton(key) {\n    return function(val) {\n      var strMap = {};\n      strMap[key] = val;\n      return strMap;\n    };\n  }\n  _.singleton = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a)],\n    impl: singleton\n  };\n\n  //# insert :: String -> a -> StrMap a -> StrMap a\n  //.\n  //. Takes a string, a value of any type, and a string map, and returns a\n  //. string map comprising all the entries of the given string map plus the\n  //. entry specified by the first two arguments (which takes precedence).\n  //.\n  //. Equivalent to Haskell's `insert` function. Similar to Clojure's `assoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.insert ('c') (3) ({a: 1, b: 2})\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.insert ('a') (4) ({a: 1, b: 2})\n  //. {a: 4, b: 2}\n  //. ```\n  function insert(key) {\n    return function(val) {\n      return function(strMap) {\n        return Z.concat (strMap, singleton (key) (val));\n      };\n    };\n  }\n  _.insert = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a), $.StrMap (a)],\n    impl: insert\n  };\n\n  //# remove :: String -> StrMap a -> StrMap a\n  //.\n  //. Takes a string and a string map, and returns a string map comprising all\n  //. the entries of the given string map except the one whose key matches the\n  //. given string (if such a key exists).\n  //.\n  //. Equivalent to Haskell's `delete` function. Similar to Clojure's `dissoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.remove ('c') ({a: 1, b: 2, c: 3})\n  //. {a: 1, b: 2}\n  //.\n  //. > S.remove ('c') ({})\n  //. {}\n  //. ```\n  function remove(key) {\n    return function(strMap) {\n      var result = Z.concat (strMap, {});\n      delete result[key];\n      return result;\n    };\n  }\n  _.remove = {\n    consts: {},\n    types: [$.String, $.StrMap (a), $.StrMap (a)],\n    impl: remove\n  };\n\n  //# keys :: StrMap a -> Array String\n  //.\n  //. Returns the keys of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.keys ({b: 2, c: 3, a: 1}))\n  //. ['a', 'b', 'c']\n  //. ```\n  _.keys = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($.String)],\n    impl: Object.keys\n  };\n\n  //# values :: StrMap a -> Array a\n  //.\n  //. Returns the values of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.values ({a: 1, c: 3, b: 2}))\n  //. [1, 2, 3]\n  //. ```\n  function values(strMap) {\n    return Z.map (function(k) { return strMap[k]; }, Object.keys (strMap));\n  }\n  _.values = {\n    consts: {},\n    types: [$.StrMap (a), $.Array (a)],\n    impl: values\n  };\n\n  //# pairs :: StrMap a -> Array (Pair String a)\n  //.\n  //. Returns the key–value pairs of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.pairs ({b: 2, a: 1, c: 3}))\n  //. [Pair ('a') (1), Pair ('b') (2), Pair ('c') (3)]\n  //. ```\n  function pairs(strMap) {\n    return Z.map (function(k) { return Pair (k) (strMap[k]); },\n                  Object.keys (strMap));\n  }\n  _.pairs = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($.Pair ($.String) (a))],\n    impl: pairs\n  };\n\n  //# fromPairs :: Foldable f => f (Pair String a) -> StrMap a\n  //.\n  //. Returns a string map containing the key–value pairs specified by the\n  //. given [Foldable][]. If a key appears in multiple pairs, the rightmost\n  //. pair takes precedence.\n  //.\n  //. ```javascript\n  //. > S.fromPairs ([S.Pair ('a') (1), S.Pair ('b') (2), S.Pair ('c') (3)])\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.fromPairs ([S.Pair ('x') (1), S.Pair ('x') (2)])\n  //. {x: 2}\n  //. ```\n  function fromPairs(pairs) {\n    return Z.reduce (function(strMap, pair) {\n      strMap[pair.fst] = pair.snd;\n      return strMap;\n    }, {}, pairs);\n  }\n  _.fromPairs = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Pair ($.String) (a)), $.StrMap (a)],\n    impl: fromPairs\n  };\n\n  //. ### Number\n\n  //# negate :: ValidNumber -> ValidNumber\n  //.\n  //. Negates its argument.\n  //.\n  //. ```javascript\n  //. > S.negate (12.5)\n  //. -12.5\n  //.\n  //. > S.negate (-42)\n  //. 42\n  //. ```\n  function negate(n) {\n    return -n;\n  }\n  _.negate = {\n    consts: {},\n    types: [$.ValidNumber, $.ValidNumber],\n    impl: negate\n  };\n\n  //# add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.add (1) (1)\n  //. 2\n  //. ```\n  function add(x) {\n    return function(y) {\n      return x + y;\n    };\n  }\n  _.add = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: add\n  };\n\n  //# sum :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.sum ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.sum ([])\n  //. 0\n  //.\n  //. > S.sum (S.Just (42))\n  //. 42\n  //.\n  //. > S.sum (S.Nothing)\n  //. 0\n  //. ```\n  _.sum = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (add) (0)\n  };\n\n  //# sub :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _subtract `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.sub (1)) ([1, 2, 3])\n  //. [0, 1, 2]\n  //. ```\n  function sub(y) {\n    return function(x) {\n      return x - y;\n    };\n  }\n  _.sub = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: sub\n  };\n\n  //# mult :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mult (4) (2)\n  //. 8\n  //. ```\n  function mult(x) {\n    return function(y) {\n      return x * y;\n    };\n  }\n  _.mult = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: mult\n  };\n\n  //# product :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.product ([1, 2, 3, 4, 5])\n  //. 120\n  //.\n  //. > S.product ([])\n  //. 1\n  //.\n  //. > S.product (S.Just (42))\n  //. 42\n  //.\n  //. > S.product (S.Nothing)\n  //. 1\n  //. ```\n  _.product = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (mult) (1)\n  };\n\n  //# div :: NonZeroFiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a non-zero finite number `n` and returns the _divide by `n`_\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.map (S.div (2)) ([0, 1, 2, 3])\n  //. [0, 0.5, 1, 1.5]\n  //. ```\n  function div(y) {\n    return function(x) {\n      return x / y;\n    };\n  }\n  _.div = {\n    consts: {},\n    types: [$.NonZeroFiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: div\n  };\n\n  //# pow :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _power of `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.pow (2)) ([-3, -2, -1, 0, 1, 2, 3])\n  //. [9, 4, 1, 0, 1, 4, 9]\n  //.\n  //. > S.map (S.pow (0.5)) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5]\n  //. ```\n  function pow(exp) {\n    return function(base) {\n      return Math.pow (base, exp);\n    };\n  }\n  _.pow = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: pow\n  };\n\n  //# mean :: Foldable f => f FiniteNumber -> Maybe FiniteNumber\n  //.\n  //. Returns the mean of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mean ([1, 2, 3, 4, 5])\n  //. Just (3)\n  //.\n  //. > S.mean ([])\n  //. Nothing\n  //.\n  //. > S.mean (S.Just (42))\n  //. Just (42)\n  //.\n  //. > S.mean (S.Nothing)\n  //. Nothing\n  //. ```\n  function mean(foldable) {\n    var result = Z.reduce (\n      function(acc, n) {\n        acc.total += n;\n        acc.count += 1;\n        return acc;\n      },\n      {total: 0, count: 0},\n      foldable\n    );\n    return result.count > 0 ? Just (result.total / result.count) : Nothing;\n  }\n  _.mean = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.Maybe ($.FiniteNumber)],\n    impl: mean\n  };\n\n  //. ### Integer\n\n  //# even :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is even; `false` if it is odd.\n  //.\n  //. ```javascript\n  //. > S.even (42)\n  //. true\n  //.\n  //. > S.even (99)\n  //. false\n  //. ```\n  function even(n) {\n    return n % 2 === 0;\n  }\n  _.even = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: even\n  };\n\n  //# odd :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is odd; `false` if it is even.\n  //.\n  //. ```javascript\n  //. > S.odd (99)\n  //. true\n  //.\n  //. > S.odd (42)\n  //. false\n  //. ```\n  function odd(n) {\n    return n % 2 !== 0;\n  }\n  _.odd = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: odd\n  };\n\n  //. ### Parse\n\n  //# parseDate :: String -> Maybe ValidDate\n  //.\n  //. Takes a string `s` and returns `Just (new Date (s))` if `new Date (s)`\n  //. evaluates to a [`ValidDate`][ValidDate] value; Nothing otherwise.\n  //.\n  //. As noted in [#488][], this function's behaviour is unspecified for some\n  //. inputs! [MDN][date parsing] warns against using the `Date` constructor\n  //. to parse date strings:\n  //.\n  //. > __Note:__ parsing of date strings with the `Date` constructor […] is\n  //. > strongly discouraged due to browser differences and inconsistencies.\n  //. > Support for RFC 2822 format strings is by convention only. Support for\n  //. > ISO 8601 formats differs in that date-only strings (e.g. \"1970-01-01\")\n  //. > are treated as UTC, not local.\n  //.\n  //. ```javascript\n  //. > S.parseDate ('2011-01-19T17:40:00Z')\n  //. Just (new Date ('2011-01-19T17:40:00.000Z'))\n  //.\n  //. > S.parseDate ('today')\n  //. Nothing\n  //. ```\n  function parseDate(s) {\n    var date = new Date (s);\n    return isNaN (date.valueOf ()) ? Nothing : Just (date);\n  }\n  _.parseDate = {\n    consts: {},\n    types: [$.String, $.Maybe ($.ValidDate)],\n    impl: parseDate\n  };\n\n  //  requiredNonCapturingGroup :: Array String -> String\n  function requiredNonCapturingGroup(xs) {\n    return '(?:' + xs.join ('|') + ')';\n  }\n\n  //  optionalNonCapturingGroup :: Array String -> String\n  function optionalNonCapturingGroup(xs) {\n    return requiredNonCapturingGroup (xs) + '?';\n  }\n\n  //  validFloatRepr :: RegExp\n  var validFloatRepr = new RegExp (\n    '^' +                     // start-of-string anchor\n    '\\\\s*' +                  // any number of leading whitespace characters\n    '[+-]?' +                 // optional sign\n    requiredNonCapturingGroup ([\n      'Infinity',             // \"Infinity\"\n      'NaN',                  // \"NaN\"\n      requiredNonCapturingGroup ([\n        '[0-9]+',             // number\n        '[0-9]+[.][0-9]+',    // number with interior decimal point\n        '[0-9]+[.]',          // number with trailing decimal point\n        '[.][0-9]+'           // number with leading decimal point\n      ]) +\n      optionalNonCapturingGroup ([\n        '[Ee]' +              // \"E\" or \"e\"\n        '[+-]?' +             // optional sign\n        '[0-9]+'              // exponent\n      ])\n    ]) +\n    '\\\\s*' +                  // any number of trailing whitespace characters\n    '$'                       // end-of-string anchor\n  );\n\n  //# parseFloat :: String -> Maybe Number\n  //.\n  //. Takes a string and returns Just the number represented by the string\n  //. if it does in fact represent a number; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseFloat ('-123.45')\n  //. Just (-123.45)\n  //.\n  //. > S.parseFloat ('foo.bar')\n  //. Nothing\n  //. ```\n  function parseFloat_(s) {\n    return validFloatRepr.test (s) ? Just (parseFloat (s)) : Nothing;\n  }\n  _.parseFloat = {\n    consts: {},\n    types: [$.String, $.Maybe ($.Number)],\n    impl: parseFloat_\n  };\n\n  //  Radix :: Type\n  var Radix = $.NullaryType\n    ('Radix')\n    ('')\n    ([$.Integer])\n    (function(x) { return x >= 2 && x <= 36; });\n\n  //# parseInt :: Radix -> String -> Maybe Integer\n  //.\n  //. Takes a radix (an integer between 2 and 36 inclusive) and a string,\n  //. and returns Just the number represented by the string if it does in\n  //. fact represent a number in the base specified by the radix; Nothing\n  //. otherwise.\n  //.\n  //. This function is stricter than [`parseInt`][parseInt]: a string\n  //. is considered to represent an integer only if all its non-prefix\n  //. characters are members of the character set specified by the radix.\n  //.\n  //. ```javascript\n  //. > S.parseInt (10) ('-42')\n  //. Just (-42)\n  //.\n  //. > S.parseInt (16) ('0xFF')\n  //. Just (255)\n  //.\n  //. > S.parseInt (16) ('0xGG')\n  //. Nothing\n  //. ```\n  function parseInt_(radix) {\n    return function(s) {\n      var charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'.slice (0, radix);\n      var pattern = new RegExp ('^[' + charset + ']+$', 'i');\n\n      var t = s.replace (/^[+-]/, '');\n      if (pattern.test (radix === 16 ? t.replace (/^0x/i, '') : t)) {\n        var n = parseInt (s, radix);\n        if ($.test ([]) ($.Integer) (n)) return Just (n);\n      }\n      return Nothing;\n    };\n  }\n  _.parseInt = {\n    consts: {},\n    types: [Radix, $.String, $.Maybe ($.Integer)],\n    impl: parseInt_\n  };\n\n  //# parseJson :: (Any -> Boolean) -> String -> Maybe a\n  //.\n  //. Takes a predicate and a string that may or may not be valid JSON, and\n  //. returns Just the result of applying `JSON.parse` to the string *if* the\n  //. result satisfies the predicate; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[\"1\",\"2\",\"3\"]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[0,1.5,3,4.5]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[1,2,3]')\n  //. Just ([1, 2, 3])\n  //. ```\n  function parseJson(pred) {\n    return B (filter (pred)) (B (eitherToMaybe) (encase (JSON.parse)));\n  }\n  _.parseJson = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, $.Maybe (a)],\n    impl: parseJson\n  };\n\n  //. ### RegExp\n\n  //  Match :: Type\n  var Match = $.RecordType ({\n    match: $.String,\n    groups: $.Array ($.Maybe ($.String))\n  });\n\n  //  toMatch :: Array String? -> Match\n  function toMatch(ss) {\n    return {\n      match: ss[0],\n      groups: Z.map (B (reject (equals (undefined))) (Just), ss.slice (1))\n    };\n  }\n\n  //  withRegex :: (RegExp, () -> a) -> a\n  function withRegex(pattern, thunk) {\n    var lastIndex = pattern.lastIndex;\n    var result = thunk ();\n    pattern.lastIndex = lastIndex;\n    return result;\n  }\n\n  //# regex :: RegexFlags -> String -> RegExp\n  //.\n  //. Takes a [RegexFlags][] and a pattern, and returns a RegExp.\n  //.\n  //. ```javascript\n  //. > S.regex ('g') (':\\\\d+:')\n  //. /:\\d+:/g\n  //. ```\n  function regex(flags) {\n    return function(source) {\n      return new RegExp (source, flags);\n    };\n  }\n  _.regex = {\n    consts: {},\n    types: [$.RegexFlags, $.String, $.RegExp],\n    impl: regex\n  };\n\n  //# regexEscape :: String -> String\n  //.\n  //. Takes a string that may contain regular expression metacharacters,\n  //. and returns a string with those metacharacters escaped.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String.\n  //.      S.test (S.regex ('') (S.regexEscape (s))) (s) = true`\n  //.\n  //. ```javascript\n  //. > S.regexEscape ('-=*{XYZ}*=-')\n  //. '\\\\-=\\\\*\\\\{XYZ\\\\}\\\\*=\\\\-'\n  //. ```\n  function regexEscape(s) {\n    return s.replace (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  _.regexEscape = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: regexEscape\n  };\n\n  //# test :: RegExp -> String -> Boolean\n  //.\n  //. Takes a pattern and a string, and returns `true` [iff][] the pattern\n  //. matches the string.\n  //.\n  //. ```javascript\n  //. > S.test (/^a/) ('abacus')\n  //. true\n  //.\n  //. > S.test (/^a/) ('banana')\n  //. false\n  //. ```\n  function test(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() { return pattern.test (s); });\n    };\n  }\n  _.test = {\n    consts: {},\n    types: [$.RegExp, $.String, $.Boolean],\n    impl: test\n  };\n\n  //# match :: NonGlobalRegExp -> String -> Maybe { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns Just a match record if the\n  //. pattern matches the string; Nothing otherwise.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: Pattern, s :: String.\n  //.      S.head (S.matchAll (S.regex ('g') (p)) (s))\n  //.      = S.match (S.regex ('') (p)) (s)`\n  //.\n  //. See also [`matchAll`](#matchAll).\n  //.\n  //. ```javascript\n  //. > S.match (/(good)?bye/) ('goodbye')\n  //. Just ({match: 'goodbye', groups: [Just ('good')]})\n  //.\n  //. > S.match (/(good)?bye/) ('bye')\n  //. Just ({match: 'bye', groups: [Nothing]})\n  //. ```\n  function match(pattern) {\n    return function(s) {\n      return Z.map (toMatch,\n                    Z.reject (equals (null), Just (s.match (pattern))));\n    };\n  }\n  _.match = {\n    consts: {},\n    types: [$.NonGlobalRegExp, $.String, $.Maybe (Match)],\n    impl: match\n  };\n\n  //# matchAll :: GlobalRegExp -> String -> Array { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns an array of match records.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. See also [`match`](#match).\n  //.\n  //. ```javascript\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, world!')\n  //. []\n  //.\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, @foo! Hello, @bar! Hello, @baz!')\n  //. [ {match: '@foo', groups: [Just ('foo')]},\n  //. . {match: '@bar', groups: [Just ('bar')]},\n  //. . {match: '@baz', groups: [Just ('baz')]} ]\n  //. ```\n  function matchAll(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        return unfoldr (function(_) {\n          return Z.map (function(ss) {\n            return Pair (toMatch (ss)) (null);\n          }, Z.reject (equals (null), Just (pattern.exec (s))));\n        }) ([]);\n      });\n    };\n  }\n  _.matchAll = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array (Match)],\n    impl: matchAll\n  };\n\n  //. ### String\n\n  //# toUpper :: String -> String\n  //.\n  //. Returns the upper-case equivalent of its argument.\n  //.\n  //. See also [`toLower`](#toLower).\n  //.\n  //. ```javascript\n  //. > S.toUpper ('ABC def 123')\n  //. 'ABC DEF 123'\n  //. ```\n  _.toUpper = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toUpperCase')\n  };\n\n  //# toLower :: String -> String\n  //.\n  //. Returns the lower-case equivalent of its argument.\n  //.\n  //. See also [`toUpper`](#toUpper).\n  //.\n  //. ```javascript\n  //. > S.toLower ('ABC def 123')\n  //. 'abc def 123'\n  //. ```\n  _.toLower = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toLowerCase')\n  };\n\n  //# trim :: String -> String\n  //.\n  //. Strips leading and trailing whitespace characters.\n  //.\n  //. ```javascript\n  //. > S.trim ('\\t\\t foo bar \\n')\n  //. 'foo bar'\n  //. ```\n  _.trim = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('trim')\n  };\n\n  //# stripPrefix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given prefix (the first argument) if the string starts\n  //. with the prefix; Nothing otherwise.\n  //.\n  //. See also [`stripSuffix`](#stripSuffix).\n  //.\n  //. ```javascript\n  //. > S.stripPrefix ('https://') ('https://sanctuary.js.org')\n  //. Just ('sanctuary.js.org')\n  //.\n  //. > S.stripPrefix ('https://') ('http://sanctuary.js.org')\n  //. Nothing\n  //. ```\n  function stripPrefix(prefix) {\n    return function(s) {\n      var idx = prefix.length;\n      return s.slice (0, idx) === prefix ? Just (s.slice (idx)) : Nothing;\n    };\n  }\n  _.stripPrefix = {\n    consts: {},\n    types: [$.String, $.String, $.Maybe ($.String)],\n    impl: stripPrefix\n  };\n\n  //# stripSuffix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given suffix (the first argument) if the string ends\n  //. with the suffix; Nothing otherwise.\n  //.\n  //. See also [`stripPrefix`](#stripPrefix).\n  //.\n  //. ```javascript\n  //. > S.stripSuffix ('.md') ('README.md')\n  //. Just ('README')\n  //.\n  //. > S.stripSuffix ('.md') ('README')\n  //. Nothing\n  //. ```\n  function stripSuffix(suffix) {\n    return function(s) {\n      var idx = s.length - suffix.length;  // value may be negative\n      return s.slice (idx) === suffix ? Just (s.slice (0, idx)) : Nothing;\n    };\n  }\n  _.stripSuffix = {\n    consts: {},\n    types: [$.String, $.String, $.Maybe ($.String)],\n    impl: stripSuffix\n  };\n\n  //# words :: String -> Array String\n  //.\n  //. Takes a string and returns the array of words the string contains\n  //. (words are delimited by whitespace characters).\n  //.\n  //. See also [`unwords`](#unwords).\n  //.\n  //. ```javascript\n  //. > S.words (' foo bar baz ')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function words(s) {\n    var words = s.split (/\\s+/);\n    var len = words.length;\n    return words.slice (words[0] === '' ? 1 : 0,\n                        words[len - 1] === '' ? len - 1 : len);\n  }\n  _.words = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: words\n  };\n\n  //# unwords :: Array String -> String\n  //.\n  //. Takes an array of words and returns the result of joining the words\n  //. with separating spaces.\n  //.\n  //. See also [`words`](#words).\n  //.\n  //. ```javascript\n  //. > S.unwords (['foo', 'bar', 'baz'])\n  //. 'foo bar baz'\n  //. ```\n  _.unwords = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: invoke1 ('join') (' ')\n  };\n\n  //# lines :: String -> Array String\n  //.\n  //. Takes a string and returns the array of lines the string contains\n  //. (lines are delimited by newlines: `'\\n'` or `'\\r\\n'` or `'\\r'`).\n  //. The resulting strings do not contain newlines.\n  //.\n  //. See also [`unlines`](#unlines).\n  //.\n  //. ```javascript\n  //. > S.lines ('foo\\nbar\\nbaz\\n')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function lines(s) {\n    return s === '' ? []\n                    : (s.replace (/\\r\\n?/g, '\\n')).match (/^(?=[\\s\\S]).*/gm);\n  }\n  _.lines = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: lines\n  };\n\n  //# unlines :: Array String -> String\n  //.\n  //. Takes an array of lines and returns the result of joining the lines\n  //. after appending a terminating line feed (`'\\n'`) to each.\n  //.\n  //. See also [`lines`](#lines).\n  //.\n  //. ```javascript\n  //. > S.unlines (['foo', 'bar', 'baz'])\n  //. 'foo\\nbar\\nbaz\\n'\n  //. ```\n  function unlines(xs) {\n    return xs.reduce (function(s, x) { return s + x + '\\n'; }, '');\n  }\n  _.unlines = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: unlines\n  };\n\n  //# splitOn :: String -> String -> Array String\n  //.\n  //. Returns the substrings of its second argument separated by occurrences\n  //. of its first argument.\n  //.\n  //. See also [`joinWith`](#joinWith) and [`splitOnRegex`](#splitOnRegex).\n  //.\n  //. ```javascript\n  //. > S.splitOn ('::') ('foo::bar::baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  _.splitOn = {\n    consts: {},\n    types: [$.String, $.String, $.Array ($.String)],\n    impl: invoke1 ('split')\n  };\n\n  //# splitOnRegex :: GlobalRegExp -> String -> Array String\n  //.\n  //. Takes a pattern and a string, and returns the result of splitting the\n  //. string at every non-overlapping occurrence of the pattern.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s)\n  //.                 (S.splitOnRegex (S.regex ('g') (S.regexEscape (s))) (t))\n  //.      = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo, bar, baz')\n  //. ['foo', 'bar', 'baz']\n  //.\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo;bar;baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function splitOnRegex(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        var result = [];\n        var lastIndex = 0;\n        var match;\n        while ((match = pattern.exec (s)) != null) {\n          if (pattern.lastIndex === lastIndex && match[0] === '') {\n            if (pattern.lastIndex === s.length) return result;\n            pattern.lastIndex += 1;\n          } else {\n            result.push (s.slice (lastIndex, match.index));\n            lastIndex = match.index + match[0].length;\n          }\n        }\n        result.push (s.slice (lastIndex));\n        return result;\n      });\n    };\n  }\n  _.splitOnRegex = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array ($.String)],\n    impl: splitOnRegex\n  };\n\n  return create ({\n    checkTypes: typeof process === 'undefined'\n                || process == null\n                || process.env == null\n                || process.env.NODE_ENV !== 'production',\n    env: $.env\n  });\n\n}));\n\n//. [#438]:                     https://github.com/sanctuary-js/sanctuary/issues/438\n//. [#488]:                     https://github.com/sanctuary-js/sanctuary/issues/488\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [Either]:                   #either-type\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Folktale]:                 https://folktale.origamitower.com/\n//. [GIGO]:                     https://en.wikipedia.org/wiki/Garbage_in,_garbage_out\n//. [Haskell]:                  https://www.haskell.org/\n//. [Kleisli]:                  https://en.wikipedia.org/wiki/Kleisli_category\n//. [Maybe]:                    #maybe-type\n//. [Nullable]:                 v:sanctuary-js/sanctuary-def#Nullable\n//. [PureScript]:               http://www.purescript.org/\n//. [Ramda]:                    http://ramdajs.com/\n//. [RegexFlags]:               v:sanctuary-js/sanctuary-def#RegexFlags\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [ValidDate]:                v:sanctuary-js/sanctuary-def#ValidDate\n//. [`$.test`]:                 v:sanctuary-js/sanctuary-def#test\n//. [`Descending`]:             v:sanctuary-js/sanctuary-descending#Descending\n//. [`R.__`]:                   http://ramdajs.com/docs/#__\n//. [`R.bind`]:                 http://ramdajs.com/docs/#bind\n//. [`R.invoker`]:              http://ramdajs.com/docs/#invoker\n//. [`Z.alt`]:                  v:sanctuary-js/sanctuary-type-classes#alt\n//. [`Z.ap`]:                   v:sanctuary-js/sanctuary-type-classes#ap\n//. [`Z.apFirst`]:              v:sanctuary-js/sanctuary-type-classes#apFirst\n//. [`Z.apSecond`]:             v:sanctuary-js/sanctuary-type-classes#apSecond\n//. [`Z.bimap`]:                v:sanctuary-js/sanctuary-type-classes#bimap\n//. [`Z.chain`]:                v:sanctuary-js/sanctuary-type-classes#chain\n//. [`Z.chainRec`]:             v:sanctuary-js/sanctuary-type-classes#chainRec\n//. [`Z.compose`]:              v:sanctuary-js/sanctuary-type-classes#compose\n//. [`Z.concat`]:               v:sanctuary-js/sanctuary-type-classes#concat\n//. [`Z.contramap`]:            v:sanctuary-js/sanctuary-type-classes#contramap\n//. [`Z.duplicate`]:            v:sanctuary-js/sanctuary-type-classes#duplicate\n//. [`Z.empty`]:                v:sanctuary-js/sanctuary-type-classes#empty\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.extend`]:               v:sanctuary-js/sanctuary-type-classes#extend\n//. [`Z.extract`]:              v:sanctuary-js/sanctuary-type-classes#extract\n//. [`Z.filter`]:               v:sanctuary-js/sanctuary-type-classes#filter\n//. [`Z.flip`]:                 v:sanctuary-js/sanctuary-type-classes#flip\n//. [`Z.foldMap`]:              v:sanctuary-js/sanctuary-type-classes#foldMap\n//. [`Z.gt`]:                   v:sanctuary-js/sanctuary-type-classes#gt\n//. [`Z.gte`]:                  v:sanctuary-js/sanctuary-type-classes#gte\n//. [`Z.id`]:                   v:sanctuary-js/sanctuary-type-classes#id\n//. [`Z.invert`]:               v:sanctuary-js/sanctuary-type-classes#invert\n//. [`Z.join`]:                 v:sanctuary-js/sanctuary-type-classes#join\n//. [`Z.lt`]:                   v:sanctuary-js/sanctuary-type-classes#lt\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [`Z.map`]:                  v:sanctuary-js/sanctuary-type-classes#map\n//. [`Z.mapLeft`]:              v:sanctuary-js/sanctuary-type-classes#mapLeft\n//. [`Z.of`]:                   v:sanctuary-js/sanctuary-type-classes#of\n//. [`Z.promap`]:               v:sanctuary-js/sanctuary-type-classes#promap\n//. [`Z.reject`]:               v:sanctuary-js/sanctuary-type-classes#reject\n//. [`Z.sequence`]:             v:sanctuary-js/sanctuary-type-classes#sequence\n//. [`Z.traverse`]:             v:sanctuary-js/sanctuary-type-classes#traverse\n//. [`Z.zero`]:                 v:sanctuary-js/sanctuary-type-classes#zero\n//. [`show`]:                   v:sanctuary-js/sanctuary-show#show\n//. [date parsing]:             https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n//. [equivalence]:              https://en.wikipedia.org/wiki/Equivalence_relation\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [parseInt]:                 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\n//. [partial functions]:        https://en.wikipedia.org/wiki/Partial_function\n//. [ramda/ramda#683]:          https://github.com/ramda/ramda/issues/683\n//. [ramda/ramda#1413]:         https://github.com/ramda/ramda/issues/1413\n//. [ramda/ramda#1419]:         https://github.com/ramda/ramda/pull/1419\n//. [sanctuary-def]:            v:sanctuary-js/sanctuary-def\n//. [sanctuary-either]:         v:sanctuary-js/sanctuary-either\n//. [sanctuary-maybe]:          v:sanctuary-js/sanctuary-maybe\n//. [sanctuary-pair]:           v:sanctuary-js/sanctuary-pair\n//. [sanctuary-show]:           v:sanctuary-js/sanctuary-show\n//. [sanctuary-type-classes]:   v:sanctuary-js/sanctuary-type-classes\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [thrush]:                   https://github.com/raganwald-deprecated/homoiconic/blob/master/2008-10-30/thrush.markdown\n//. [total functions]:          https://en.wikipedia.org/wiki/Partial_function#Total_function\n//. [type checking]:            #type-checking\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n//. [variadic functions]:       https://en.wikipedia.org/wiki/Variadic_function\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Takes a `key` and returns a function that expects an array of objects\r\n * (containing a property equal to `key`) that finally returns an Object<K,V>\r\n * where `K` is the key name used to group all elements of `xs` and `V` is an\r\n * array of elements from `xs` matching the `key` value.\r\n *\r\n * @param {String} key\r\n * @return {function(xs: T[]): Object<K,V>}\r\n *\r\n *   Where `K` is the key name used to group all the elements of `xs`.\r\n *\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * dictGroupByKey (\"name\") (persons); //=> {John: Array[1], James: Array[3], Jack: Array[2]}\r\n *\r\n * //\r\n * // {\r\n * //   \"John\": [\r\n * //     { \"id\": 1, \"name\": \"John\" }\r\n * //   ],\r\n * //   \"James\": [\r\n * //     { \"id\": 2, \"name\": \"James\" },\r\n * //     { \"id\": 4, \"name\": \"James\" },\r\n * //     { \"id\": 6, \"name\": \"James\" }\r\n * //   ],\r\n * //   \"Jack\": [\r\n * //     { \"id\": 3, \"name\": \"Jack\" },\r\n * //     { \"id\": 5, \"name\": \"Jack\" }\r\n * //   ]\r\n * // }\r\n * //\r\n *\r\n */\r\nconst dictGroupByKey = key => S.reduce\r\n  (acc => x => ({ ...acc, [x[key]]: acc[x[key]] ? [...acc[x[key]], x] : [x] }))\r\n  ({})\r\n;\r\n\r\nexport { dictGroupByKey };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Takes a `key`, returns a function that expects an array of objects, finally\r\n * returns an object of unique keys.\r\n *\r\n * @param {String} key\r\n * @return {function(xs: T[]): Object<T<K>, Boolean<True>>}\r\n *\r\n *   Where `K` is the key value on some T and `Boolean<True>` is placeholder.\r\n *\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * dictByKey (\"name\") (persons); //=> { John: true, James: true, Jack: true }\r\n *\r\n */\r\nconst dictByKey = key => S.reduce\r\n  (acc => x => ({ ...acc, [x[key]]: true }))\r\n  ({})\r\n;\r\n\r\nexport { dictByKey };\r\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\r\n * isFalse :: a -> Boolean\r\n *\r\n * @param {*} a\r\n * @return {Boolean}\r\n */\r\nconst isFalse = a => !!a;\r\n\r\nexport { isFalse };\r\n","import { isFalse } from \"../conditions/isFalse\";\r\n\r\n/**\r\n * Removes elements of the array that evaluate to false.\r\n *\r\n * filterFalse :: [*] -> [*]\r\n *\r\n * @return {Array}\r\n */\r\nconst filterFalse = xs => Array.prototype.filter.call(xs, isFalse);\r\n\r\nexport { filterFalse };\r\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","import S from \"sanctuary\";\r\nimport { dictByKey } from \"./dictByKey\";\r\n\r\nconst keys = Object.keys;\r\n\r\n/**\r\n * @param {String} key\r\n * @return {function(xs: T[]): String[]}\r\n * @example\r\n *\r\n * const persons = [\r\n *   { id: 1, name: \"John\" },\r\n *   { id: 2, name: \"James\" },\r\n *   { id: 3, name: \"Jack\" },\r\n *   { id: 4, name: \"James\" },\r\n *   { id: 5, name: \"Jack\" },\r\n *   { id: 6, name: \"James\" },\r\n * ];\r\n *\r\n * uniqValuesByKey (\"name\") (persons); //=> [\"John\", \"James\", \"Jack\"]\r\n *\r\n */\r\nconst uniqValuesByKey = key => S.pipe([\r\n  dictByKey(key),\r\n  keys\r\n]);\r\n\r\nexport { uniqValuesByKey };\r\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar PROTOTYPE = 'prototype';\nvar Empty = function () { /* empty */ };\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var length = enumBugKeys.length;\n  var lt = '<';\n  var script = 'script';\n  var gt = '>';\n  var js = 'java' + script + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  iframe.src = String(js);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];\n  return createDict();\n};\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n\nhiddenKeys[IE_PROTO] = true;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar hide = require('../internals/hide');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  hide(ArrayPrototype, UNSCOPABLES, create(null));\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","module.exports = {};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar hide = require('../internals/hide');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          hide(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    hide(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  while (!(step = iterator.next()).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common, IS_MAP, IS_WEAK) {\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (get) {\n  return function Map() { return get(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong, true);\n","'use strict';\nvar classof = require('../internals/classof');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = String(test) !== '[object z]' ? function toString() {\n  return '[object ' + classof(this) + ']';\n} : test.toString;\n","var redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\nvar ObjectPrototype = Object.prototype;\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (toString !== ObjectPrototype.toString) {\n  redefine(ObjectPrototype, 'toString', toString, { unsafe: true });\n}\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar bind = require('../internals/bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (classof(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar classof = require('../internals/classof-raw');\nvar macrotask = require('../internals/task').set;\nvar userAgent = require('../internals/user-agent');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar IS_NODE = classof(process) == 'process';\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  } else if (MutationObserver && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar path = require('../internals/path');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar classof = require('../internals/classof-raw');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar userAgent = require('../internals/user-agent');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = global.fetch;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar IS_NODE = classof(process) == 'process';\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  // correct subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var empty = function () { /* empty */ };\n  var FakePromise = (promise.constructor = {})[SPECIES] = function (exec) {\n    exec(empty, empty);\n  };\n  // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !((IS_NODE || typeof PromiseRejectionEvent == 'function')\n    && (!IS_PURE || promise['finally'])\n    && promise.then(empty) instanceof FakePromise\n    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // we can't detect it synchronously, so just check versions\n    && v8.indexOf('6.6') !== 0\n    && userAgent.indexOf('Chrome/66') === -1);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (promise, state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(promise, state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (handler = global['on' + name]) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (promise, state) {\n  task.call(global, function () {\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (promise, state) {\n  task.call(global, function () {\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, promise, state, unwrap) {\n  return function (value) {\n    fn(promise, state, value, unwrap);\n  };\n};\n\nvar internalReject = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(promise, state, true);\n};\n\nvar internalResolve = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, promise, wrapper, state),\n            bind(internalReject, promise, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(promise, wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(promise, state, false);\n    }\n  } catch (error) {\n    internalReject(promise, { done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n    } catch (error) {\n      internalReject(this, state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(this, state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, promise, state);\n    this.reject = bind(internalReject, promise, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = path[PROMISE];\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.github.io/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.github.io/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.github.io/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.github.io/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (get) {\n  return function Set() { return get(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar hide = require('../internals/hide');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      hide(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) hide(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        hide(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","/**\r\n * Adds two numbers together.\r\n *\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @return {Number} The sum of adding two numbers.\r\n */\r\nfunction add(x, y) {\r\n  if (\r\n    Object.prototype.toString.call(x) !== \"[object Number]\" ||\r\n    Object.prototype.toString.call(y) !== \"[object Number]\"\r\n  ) {\r\n    throw new TypeError(\"Supplied arg `x` or `y` is not a valid number\");\r\n  }\r\n\r\n  // try out ES6 features to see transpiled output\r\n  const a = new Promise((resolve, reject) => resolve());\r\n  const b = new Map();\r\n  const values = new Set([x, y]);\r\n\r\n  return [...values].reduce((acc, value) => acc + value, 0);\r\n}\r\n\r\nexport { add };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * @param {String[]} xs\r\n * @return {String}\r\n */\r\nconst joinWithComma = xs => S.joinWith (\",\") (xs);\r\n\r\nexport { joinWithComma };\r\n","import S from \"sanctuary\";\r\nimport { EOL } from \"os\";\r\n\r\n/**\r\n * @param {String[]} xs\r\n * @return {String}\r\n */\r\nconst joinWithNewLine = xs => S.joinWith (EOL) (xs);\r\n\r\nexport { joinWithNewLine };\r\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n    if (sham) hide(RegExp.prototype[SYMBOL], 'sham', true);\n  }\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * A curried wrapper around the native `string.replace` function. Function is\r\n * extracted from the sanctuary.js docs.\r\n *\r\n * Does not truncate whitespace.\r\n *\r\n * replaceString :: (String -> (String -> String)) -> String\r\n *\r\n * @see {https://sanctuary.js.org/#curry3}\r\n * @see {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace}\r\n * @example\r\n *\r\n * replaceString (\"bar\") (\"\") (\"foo bar baz\"); //=> \"foo  bar\" (note the double space)\r\n * replaceString (/a/gi) (\"\") (\"foo bar baz\"); //=> \"foo br bz\"\r\n *\r\n */\r\nconst replaceString = S.curry3(function(replace, replacer, replacee) {\r\n  return String.prototype.replace.call(replacee, replace, replacer);\r\n});\r\n\r\nexport { replaceString };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * @param {String} x\r\n * @return {String}\r\n * @example\r\n *\r\n * removeCommas(\"hello,world\"); //=> \"helloworld\"\r\n * removeCommas(\"hello, world\"); //=> \"hello world\"\r\n * removeCommas(\"a,b,c\"); //=> abc\r\n *\r\n */\r\nconst removeCommas = x => replaceString (/,/g) (\"\") (x);\r\n\r\nexport { removeCommas };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * Truncates contiguous ASCII 32 `SPACE` chars into one.\r\n *\r\n * truncateSpace :: String -> String\r\n *\r\n * @return {String}\r\n * @see {@link https://stackoverflow.com/a/7151225/1727232}\r\n * @see {@link https://stackoverflow.com/a/1279878/1727232}\r\n * @example truncateSpace (\"hello   world\"); //=> \"hello world\"\r\n */\r\nconst truncateSpace = replaceString (/ {2,}/g) (\" \");\r\n\r\nexport { truncateSpace };\r\n","import S from \"sanctuary\";\r\n\r\nimport { replaceString } from \"./replaceString\";\r\nimport { truncateSpace } from \"./truncateSpace\";\r\n\r\n/**\r\n * Replaces all occurrences of commas with a single space ensuring to truncate\r\n * two or more resulting adjacent spaces to a single space.\r\n *\r\n * In practice, this means that a comma at the beginning or the end of a\r\n * string will be replaced with a whitespace but will not be trimmed.\r\n *\r\n * replaceCommaWithWhitespace :: String -> String\r\n *\r\n * @type {*|*[]}\r\n * @example\r\n *\r\n * replaceCommaWithWhitespace(\"hello,,, world\"); //=> \"hello world\"\r\n * replaceCommaWithWhitespace(\",hello, world\"); //=> \" hello world\"\r\n * replaceCommaWithWhitespace(\"hello, world,\"); //=> \"hello world \"\r\n * replaceCommaWithWhitespace(\",hello,world,\"); //=> \" hello world \"\r\n *\r\n */\r\nconst replaceCommaWithWhitespace = S.pipe([\r\n  replaceString(/,/g)(\" \"),\r\n  truncateSpace\r\n]);\r\n\r\nexport { replaceCommaWithWhitespace };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Returns array of substrings resulting from splitting the original string\r\n * wherever a comma was found.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitComma (\"foo,bar,baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitComma (\"foo, bar, baz\"); //=> [\"foo\", \" bar\", \" baz\"]\r\n * splitComma (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitComma = S.splitOn (\",\"); // String -> [String]\r\n\r\nexport { splitComma };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Returns array of substrings resulting from splitting the original string\r\n * wherever a comma was found.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitCommaRegex (\"foo,bar,baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitCommaRegex (\"foo, bar, baz\"); //=> [\"foo\", \" bar\", \" baz\"]\r\n * splitCommaRegex (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitCommaRegex = S.splitOnRegex(/,/g);\r\n\r\nexport { splitCommaRegex };\r\n","import S from 'sanctuary'\r\n\r\n/**\r\n * Breaks apart a string into an array of substrings wherever newline\r\n * chars are found - these are `\\r\\n` and `\\n`.\r\n *\r\n * splitComma :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitNewLines (\"hello \\n world\"); //=> [\"hello \", \" world\"]\r\n * splitNewLines (\"hello \\r\\n world\"); //=> [\"hello \", \" world\"]\r\n * splitNewLines (\"hello \\n \\n \\n world\"); //=> [\"hello \", \" \", \" \", \" world\"]\r\n * splitNewLines (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitNewLines = S.splitOnRegex (/\\r\\n|\\n/g);\r\n\r\nexport { splitNewLines }\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever the ASCII 32\r\n * `SPACE` character is found.\r\n *\r\n * splitSpace :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitSpace (\"foo bar baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitSpace (\"hello   world\"); //=> [\"hello\", \"\", \"\", \"world\"]\r\n * splitSpace (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitSpace = S.splitOn(\" \");\r\n\r\nexport { splitSpace };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever the ASCII 32\r\n * `SPACE` character is found.\r\n *\r\n * splitSpaceRegex :: String -> [String]\r\n *\r\n * @return {String}\r\n * @example\r\n *\r\n * splitSpaceRegex (\"foo bar baz\"); //=> [\"foo\", \"bar\", \"baz\"]\r\n * splitSpaceRegex (\"hello   world\"); //=> [\"hello\", \"\", \"\", \"world\"]\r\n * splitSpaceRegex (\"\"); //=> [\"\"]\r\n *\r\n */\r\nconst splitSpaceRegex = S.splitOnRegex (/ /g);\r\n\r\nexport { splitSpaceRegex };\r\n","import S from \"sanctuary\";\r\n\r\n/**\r\n * Breaks apart a string into its array of substrings wherever whitespace\r\n * characters are found.\r\n *\r\n * This corresponds to all whitespace characters represented by the `\\s`\r\n * metacharacter in regex.\r\n * - see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\r\n *\r\n * splitWhitespace :: String -> [String]\r\n *\r\n * @return {String}\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\r\n * @see All examples from @{splitSpace} and @{splitSpaceRegex} work in\r\n *   addition to all the remaining forms of whitespace characters.\r\n *\r\n * @example\r\n *\r\n * splitWhitespace (\"hello \\t world\"); //=> \"hello\", \"\", \"\", \"world\"\r\n *\r\n */\r\nconst splitWhitespace = S.splitOnRegex(/\\s/g);\r\n\r\nexport { splitWhitespace };\r\n","import { replaceString } from \"./replaceString\";\r\n\r\n/**\r\n * Truncates all whitespace chars to a single space char.\r\n *\r\n * truncateWhitespace :: String -> String\r\n *\r\n * @return {String}\r\n * @see {@link https://stackoverflow.com/a/1279874/1727232}\r\n * @example\r\n *\r\n * truncateWhitespace (\"hello   world\"); //=> \"hello world\"\r\n * truncateWhitespace (\"foo \\t \\v bar\"); //=> \"foo bar\"\r\n */\r\nconst truncateWhitespace = replaceString (/\\s+/g) (\" \");\r\n\r\nexport { truncateWhitespace };\r\n","/**\r\n * @param {*} x\r\n * @return {String}\r\n * @example\r\n *\r\n * getPrototype({});        //=> \"[object Object]\"\r\n * getPrototype([]);        //=> \"[object Array]\"\r\n * getPrototype(7);         //=> \"[object Number]\"\r\n * getPrototype(\"\");        //=> \"[object String]\"\r\n * getPrototype(true);      //=> \"[object Boolean]\"\r\n * getPrototype(false);     //=> \"[object Boolean]\"\r\n * getPrototype(null);      //=> \"[object Null]\"\r\n * getPrototype(undefined); //=> \"[object Undefined]\"\r\n * getPrototype(void 0);    //=> \"[object Undefined]\"\r\n * getPrototype();          //=> \"[object Undefined]\"\r\n *\r\n */\r\nconst getPrototype = x => Object.prototype.toString.call(x);\r\n\r\nexport { getPrototype };\r\n"],"names":["empty","x","identity","global","classof","IndexedObject","document","DESCRIPTORS","createElement","IE8_DOM_DEFINE","propertyIsEnumerableModule","definePropertyModule","nativeFunctionToString","WeakMap","has","NATIVE_WEAK_MAP","objectHas","InternalStateModule","require$$0","min","hiddenKeys","internalObjectKeys","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","getOwnPropertyDescriptorModule","getOwnPropertyDescriptor","isForced","Symbol","store","NATIVE_SYMBOL","SPECIES","$","require$$1","util","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","dictGroupByKey","key","S","reduce","acc","dictByKey","aFunction","createMethod","bind","isFalse","a","filterFalse","xs","Array","prototype","filter","call","nativeKeys","keys","Object","uniqValuesByKey","pipe","defineProperties","create","IE_PROTO","CORRECT_PROTOTYPE_GETTER","getPrototypeOf","IteratorPrototype","returnThis","Iterators","IteratorsCore","BUGGY_SAFARI_ITERATORS","ITERATOR","setPrototypeOf","FREEZING","ArrayPrototype","TO_STRING_TAG","InternalMetadataModule","iterate","defineProperty","setInternalState","ObjectPrototype","toString","set","process","Promise","task","getInternalState","NativePromise","TypeError","newPromiseCapability","newPromiseCapabilityModule","IS_NODE","FORCED","IS_PURE","notify","flags","ArrayIteratorMethods","DOMIterables","add","y","resolve","reject","values","Set","value","joinWithComma","joinWith","joinWithNewLine","EOL","charAt","max","floor","fixRegExpWellKnownSymbolLogic","regExpExec","replaceString","curry3","replace","replacer","replacee","String","removeCommas","truncateSpace","replaceCommaWithWhitespace","splitComma","splitOn","splitCommaRegex","splitOnRegex","splitNewLines","splitSpace","splitSpaceRegex","splitWhitespace","truncateWhitespace","getPrototype"],"mappings":"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"}